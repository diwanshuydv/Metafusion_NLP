database_id,schema,mongo_query,natural_language_query
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ department: 'Sales' }),Get employees in the 'Sales' department.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ status: 'Active' }),Retrieve all active employees from the 'employees' collection.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.findOne({ employeeId: 'E12345' });,Get the employee document with employeeId 'E12345' from the employees collection.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ budget: { $gt: 50000 } }),"Get departments where the budget exceeds 50,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ name: 'HR' }),Get the documents from the 'departments' collection where the name is 'HR'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ status: 'Approved' }),Get all approved leave records.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ leaveType: 'Sick Leave' });,Get all leave records with the type 'Sick Leave'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.findOne({ employeeId: ObjectId('60b8d5b2f1c3d3f30c8f89a3') });,Retrieve a document from 'leaveRecords' where 'employeeId' is ObjectId '60b8d5b2f1c3d3f30c8f89a3'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ hireDate: { $gte: new Date('2020-01-01') } });,"Get all employees hired on or after January 1, 2020."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ position: 'Manager' }),Get all employees with the position of 'Manager'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ location: 'New York' });,Get departments where the location is 'New York'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ startDate: { $lte: new Date('2022-12-31') } });,"Get leave records with a start date on or before December 31, 2022."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ phone: { $regex: '^123' } });,Get employees whose phone number begins with '123'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ 'EmergencyContact.relationship': 'Spouse' }),Get employees whose Emergency Contact relationship is 'Spouse'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ createdAt: { $gt: new Date('2021-01-01T00:00:00Z') } });,"Retrieve departments created after January 1, 2021."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ salary: { $lt: 40000 } });,"Retrieve employees with a salary less than 40,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ reason: { $exists: true } });,Retrieve all leave records where the reason is specified.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ managerId: ObjectId('60b8d5b2f1c3d3f30c8f89b0') });,Find employees who are managed by the manager with ID '60b8d5b2f1c3d3f30c8f89b0'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ headId: ObjectId('60b8d5b2f1c3d3f30c8f89b1') }),Get departments where the headId is '60b8d5b2f1c3d3f30c8f89b1'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ lastName: 'Doe' }),Get employees from the 'employees' collection with the last name 'Doe'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ description: { $regex: /finance/i } });,"Find departments where the description includes 'finance', case insensitive."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { status: 'approved' } }, { $lookup: { from: 'employees', localField: 'employeeId', foreignField: '_id', as: 'employeeInfo' } } ])",Get all approved leave records and include related employee information.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ status: 'active' });,Get employee documents from the 'employees' collection where the status is 'active'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ department: 'HR' }),Retrieve employees in the 'HR' department.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ salary: { $gte: 50000 } });,"Get employees with a salary of at least 50,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ hireDate: { $gt: new Date('2020-01-01') } }),"Fetch employees hired after January 1, 2020."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ location: 'New York' });,Retrieve departments located in 'New York'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ budget: { $lt: 1000000 } }),"Get all departments with a budget under 1,000,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ employeeId: ObjectId('60adf2184f1c2a4c8c8e0123') }),Get all leave records for the employee with ID '60adf2184f1c2a4c8c8e0123'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ status: 'approved' });,Retrieve approved leave records.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.find({ leaveType: 'sick', startDate: { $lte: new Date('2023-01-01') } });","Get leave records with type 'sick' that start on or before January 1, 2023."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.find({ position: 'Developer', department: 'IT' });",Get employees who are 'Developers' in the 'IT' department.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.find({ firstName: 'John', lastName: 'Doe' });",Find employees named John Doe.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ headId: ObjectId('60adf2184f1c2a4c8c8e0456') }),Find departments where the headId is '60adf2184f1c2a4c8c8e0456'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ createdAt: { $gt: new Date('2022-01-01') } });,"Get all departments created after January 1, 2022."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.find({ email: { $regex: '@example.com$', $options: 'i' } });",Find employees whose email addresses end with '@example.com'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ 'EmergencyContact.relationship': 'sibling' });,Retrieve employees who have an emergency contact listed as a sibling.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.find({ employeeId: ObjectId('60adf2184f1c2a4c8c8e0456'), status: 'pending' })",Get leave records for employee ID '60adf2184f1c2a4c8c8e0456' with status 'pending'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ managerId: ObjectId('60adf2184f1c2a4c8c8e0234') });,Retrieve employees with the manager ID '60adf2184f1c2a4c8c8e0234'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ phone: { $ne: '' } });,Retrieve employees who have a non-empty phone number.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.find({ name: 'Sales', description: { $exists: true } });",Retrieve documents from the 'departments' collection where the name is 'Sales' and the description exists.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.find({ department: 'Support', salary: { $lt: 40000 } });","Retrieve documents of employees in the 'Support' department with a salary less than 40,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.find({ status: 'active' }, { firstName: 1, lastName: 1, email: 1, phone: 1 }).sort({ hireDate: 1 })","Retrieve the first name, last name, email, and phone of all active employees, sorted by hire date in ascending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $group: { _id: ""$department"", totalSalary: { $sum: ""$salary"" } } }])",Group employees by department and calculate the total salary for each department.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([{ $lookup: { from: 'employees', localField: '_id', foreignField: 'department', as: 'employees' } }, { $project: { name: 1, totalEmployees: { $size: '$employees' } } }])","Get the names and total number of employees in each department from the 'departments' collection, matching with the 'employees' collection."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $match: { status: 'approved' } }, { $group: { _id: '$leaveType', totalLeaves: { $sum: 1 } } }])",Count the approved leave records by leave type from the leaveRecords collection.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ status: 'active' }).sort({ hireDate: -1 });,"Retrieve active employees from the 'employees' collection, sorted by hire date in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $lookup: { from: 'employees', localField: 'employeeId', foreignField: '_id', as: 'employeeDetails' } }, { $match: { 'employeeDetails.department': 'HR' } } ])",Retrieve leave records and employee details for employees in the 'HR' department.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $group: { _id: ""$managerId"", employeeCount: { $sum: 1 } } }, { $sort: { employeeCount: -1 } } ])","Group employees by manager ID, count them, and sort the counts in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ budget: { $gt: 50000 } }).sort({ createdAt: -1 });,"Get documents from the 'departments' collection with a budget over 50,000, sorted by creation date in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $group: { _id: ""$employeeId"", totalLeaveDays: { $sum: { $subtract: [ ""$endDate"", ""$startDate"" ] } } } } } ]);",Group leave records by 'employeeId' and calculate the total leave days taken by each employee as the difference between 'endDate' and 'startDate'.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $match: { position: 'Manager' } }, { $lookup: { from: 'departments', localField: 'department', foreignField: 'name', as: 'departmentInfo' } }])",Get all employees with the position 'Manager' and their related department information.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $group: { _id: ""$department"", averageSalary: { $avg: ""$salary"" } } }, { $match: { averageSalary: { $gt: 60000 } } }])","Find the average salary of employees grouped by department, including only those departments with an average salary over 60,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.leaveRecords.find({ appliedDate: { $gte: new Date('2023-01-01') } }).sort({ appliedDate: 1 });,"Get all leave records with an 'appliedDate' on or after January 1, 2023, sorted by 'appliedDate' in ascending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([ { $lookup: { from: 'employees', localField: 'headId', foreignField: '_id', as: 'headInfo' } }, { $project: { name: 1, headFirstName: { $arrayElemAt: ['$headInfo.firstName', 0] } } } ])",Retrieve the names of all departments and the first names of their heads from the employees collection.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $lookup: { from: 'leaveRecords', localField: '_id', foreignField: 'employeeId', as: 'leaveInfo' } }, { $project: { firstName: 1, lastName: 1, leaveStatus: { $ifNull: [ { $arrayElemAt: ['$leaveInfo.status', 0] }, 'No Leave Record' ] } } } } ])","Retrieve the first and last names of employees and their leave status, including employees without leave records."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { leaveType: 'Sick Leave' } }, { $group: { _id: '$employeeId', count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Count leave records by employee ID for 'Sick Leave', sorted in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $lookup: { from: 'departments', localField: 'department', foreignField: 'name', as: 'departmentDetails' } }, { $project: { firstName: 1, lastName: 1, budget: { $arrayElemAt: ['$departmentDetails.budget', 0] } } }])",Get the first and last names of employees along with their department budget from the 'employees' and 'departments' collections.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $match: { managerId: { $exists: true, $ne: null } } }, { $group: { _id: ""$managerId"", employeeCount: { $sum: 1 } } } ]);","Count employees who have a manager assigned, grouped by manager ID."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([ { $match: { location: 'Remote' } }, { $lookup: { from: 'employees', localField: '_id', foreignField: 'department', as: 'employees' } }, { $project: { name: 1, employeeCount: { $size: '$employees' } } } ])",Retrieve departments located in 'Remote' and count the number of employees in each department.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $match: { status: 'pending' } }, { $group: { _id: '$leaveType', totalRequests: { $sum: 1 } } }])",Count pending leave requests by leave type from the leaveRecords collection.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { status: 'approved' } }, { $lookup: { from: 'employees', localField: 'employeeId', foreignField: 'employeeId', as: 'employeeInfo' } }, { $unwind: '$employeeInfo' }, { $project: { _id: 1, 'employeeFirstName': '$employeeInfo.firstName', 'employeeLastName': '$employeeInfo.lastName', 'leaveType': 1, 'startDate': 1, 'endDate': 1, 'reason': 1, 'appliedDate': 1 } } ])",Get approved leave records from 'leaveRecords' with the corresponding employees' first and last names.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $match: { status: 'active' } }, { $group: { _id: '$department', totalSalary: { $sum: '$salary' }, employeeCount: { $sum: 1 } } }])",Get the total salary and employee count for each department from the 'employees' collection for those with an 'active' status.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([ { $match: { budget: { $gt: 100000 } } }, { $lookup: { from: 'employees', localField: '_id', foreignField: 'department', as: 'employees_info' } } ])","Retrieve departments with a budget greater than 100,000 and include related employee information."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { status: 'approved' } }, { $group: { _id: '$leaveType', totalLeaves: { $sum: 1 } } } ])","Count the approved leave records from the 'leaveRecords' collection, grouped by leave type."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $lookup: { from: 'departments', localField: 'department', foreignField: 'name', as: 'department_info' } }, { $project: { firstName: 1, lastName: 1, 'department_info.description': 1 } }])",Get the first and last names of employees and their department descriptions where the department name matches.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $group: { _id: ""$employeeId"", leaveCount: { $sum: 1 } } }, { $match: { leaveCount: { $gt: 3 } } }])",Count the number of leave records per employee and include only those with more than 3 records.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({}).sort({ hireDate: -1 }).limit(5);,"Get the 5 most recently hired employees from the 'employees' collection, sorted by hire date in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.departments.find({ location: 'Headquarters' }).sort({ createdAt: 1 }),"Get departments located at 'Headquarters', sorted by creation date in ascending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $group: { _id: ""$position"", avgSalary: { $avg: ""$salary"" } } }, { $match: { avgSalary: { $gt: 70000 } } }])","Find the average salary for each position in the 'employees' collection, then include only those positions with an average salary greater than 70,000."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $lookup: { from: 'leaveRecords', localField: '_id', foreignField: 'employeeId', as: 'leave_info' } }, { $match: { 'leave_info.status': 'approved' } }])",Get all employees and their approved leave information.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $match: { startDate: { $gte: ISODate(""2023-01-01"") } } }, { $group: { _id: ""$leaveType"", totalDays: { $sum: { $divide: [{ $subtract: [""$endDate"", ""$startDate""] }, 86400000] } } } }])","Get the total leave days grouped by leave type from the 'leaveRecords' collection, where the start date is on or after January 1, 2023."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $match: { managerId: { $exists: true } } }, { $lookup: { from: 'employees', localField: 'managerId', foreignField: '_id', as: 'manager_info' } } ])","Get all employees who have a manager, along with their manager's information from the employees collection."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([{ $group: { _id: '$headId', totalDepartments: { $sum: 1 } } }, { $match: { totalDepartments: { $gt: 1 } } }])","Group departments by 'headId' and count the number of departments per head, returning only those heads with more than one department."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
",db.employees.find({ status: 'inactive' }).sort({ hireDate: 1 });,"Get documents of inactive employees from the 'employees' collection, sorted by hire date ascending."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { status: 'approved' } }, { $group: { _id: ""$approvedBy"", totalApprovedLeaves: { $sum: 1 } } }, { $sort: { totalApprovedLeaves: -1 } } ])","Group approved leave records by the 'approvedBy' field and count the total approved leaves per approver, sorting the results in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $match: { department: 'IT' } }, { $group: { _id: null, avgSalary: { $avg: '$salary' } } }])",What is the average salary of employees in the IT department?
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([ { $lookup: { from: 'employees', localField: 'headId', foreignField: '_id', as: 'head_info' } }, { $project: { name: 1, 'head_info.firstName': 1, 'head_info.lastName': 1 } } ])","Join the 'departments' collection with the 'employees' collection to get department heads, and project the department name along with their first and last names."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $match: { endDate: { $lt: new Date() } } }, { $group: { _id: ""$employeeId"", totalExpiredLeaves: { $sum: 1 } } }])","Get the leave records where the end date is before today, grouped by employee ID, counting the total expired leaves for each employee."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $lookup: { from: 'departments', localField: 'department', foreignField: 'name', as: 'department_details' } }, { $unwind: '$department_details' }, { $project: { firstName: 1, lastName: 1, budget: '$department_details.budget' } } ]);",Get the first and last names of employees and their department budget from the corresponding departments.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { appliedDate: { $gte: new Date('2023-01-01') } } }, { $group: { _id: '$employeeId', pendingLeavesCount: { $sum: { $cond: [ { $eq: ['$status', 'pending'] }, 1, 0 ] } } } } ]);","Aggregate leave records with an 'appliedDate' on or after January 1, 2023, grouping by 'employeeId' to count pending leave requests for each employee."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $match: { status: 'active' } }, { $group: { _id: '$department', totalSalary: { $sum: '$salary' }, employeeCount: { $sum: 1 } } }, { $sort: { totalSalary: -1 } }])","Get the total salary and employee count for active employees in each department, sorted by total salary in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([ { $lookup: { from: 'employees', localField: '_id', foreignField: 'department', as: 'employees' } }, { $unwind: '$employees' }, { $group: { _id: '$name', totalBudget: { $sum: '$budget' }, employeeCount: { $sum: 1 } } } ]);","Join the 'departments' collection with the 'employees' collection on department ID, then unwind the employee records and group by department name to calculate total budget and count employees."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { status: 'approved' } }, { $group: { _id: ""$leaveType"", count: { $sum: 1 }, totalDays: { $sum: { $divide: [ { $subtract: [""$endDate"", ""$startDate""] }, 86400000 ] } } } } ]);",Aggregate approved leave records by leave type to count the number of leaves and total days taken for each type.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $lookup: { from: 'leaveRecords', localField: '_id', foreignField: 'employeeId', as: 'leaveRecords' } }, { $unwind: { path: '$leaveRecords', preserveNullAndEmptyArrays: true } }, { $group: { _id: '$employeeId', firstName: { $first: '$firstName' }, lastName: { $first: '$lastName' }, totalLeaves: { $sum: 1 } } }])","Retrieve employees and their leave records, unwind the records, and group by employee ID while counting total leaves and selecting their first and last names."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $match: { hireDate: { $gte: new Date('2022-01-01') } } }, { $lookup: { from: 'departments', localField: 'department', foreignField: 'name', as: 'departmentInfo' } }, { $unwind: '$departmentInfo' }, { $project: { employeeId: 1, firstName: 1, lastName: 1, 'departmentInfo.name': 1, 'departmentInfo.budget': 1 } } ])","Retrieve employees hired on or after January 1, 2022, along with their department name and budget."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([ { $match: { budget: { $gt: 100000 } } }, { $lookup: { from: 'employees', localField: '_id', foreignField: 'department', as: 'employees' } }, { $project: { name: 1, totalEmployees: { $size: '$employees' } } } ])","Get departments with a budget over 100,000 and count the number of employees in each department."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $group: { _id: ""$employeeId"", totalLeaves: { $sum: 1 }, lastLeaveDate: { $max: ""$endDate"" } } }, { $sort: { totalLeaves: -1 } } ]);","Aggregate leave records by 'employeeId', counting total leaves and finding their most recent leave date, then sort by total leaves in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([{ $lookup: { from: 'leaveRecords', localField: '_id', foreignField: 'employeeId', as: 'leaveData' } }, { $group: { _id: '$employeeId', totalLeaves: { $sum: { $size: '$leaveData' } }, status: { $first: '$status' } } }])",Join 'employees' with 'leaveRecords' to count leaves per employee and get their employment status.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $match: { managerId: { $exists: true } } }, { $lookup: { from: 'employees', localField: 'managerId', foreignField: '_id', as: 'managerInfo' } }, { $unwind: '$managerInfo' }, { $project: { employeeFirstName: '$firstName', employeeLastName: '$lastName', managerFirstName: '$managerInfo.firstName', managerLastName: '$managerInfo.lastName' } } ])","Retrieve employees who have a manager, including their first and last names along with their managers' first and last names."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $match: { status: 'pending' } }, { $lookup: { from: 'employees', localField: 'employeeId', foreignField: '_id', as: 'employeeInfo' } }, { $unwind: '$employeeInfo' }, { $project: { firstName: '$employeeInfo.firstName', lastName: '$employeeInfo.lastName', leaveType: 1, startDate: 1, endDate: 1 } }])","Retrieve pending leave records along with the employee's first name and last name, and the leave type, start date, and end date."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.departments.aggregate([{ $lookup: { from: 'employees', localField: 'headId', foreignField: '_id', as: 'headInfo' } }, { $unwind: '$headInfo' }, { $project: { name: 1, 'headInfo.firstName': 1, 'headInfo.lastName': 1 } }]);",Get the names of all departments and the first and last names of their heads from the employees collection where headId matches the employee's _id.
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $group: { _id: '$department', avgSalary: { $avg: '$salary' }, totalEmployees: { $sum: 1 } } }, { $sort: { avgSalary: -1 } } ])","Group employees by department, calculate the average salary and total number of employees per department, and sort by average salary in descending order."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([{ $group: { _id: { month: { $month: ""$startDate"" }, year: { $year: ""$startDate"" } }, totalLeaves: { $sum: 1 } } }, { $sort: { '_id.year': 1, '_id.month': 1 } }])","Group leave records by month and year of the start date, counting total leaves per month and year, sorted by year and month."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $lookup: { from: 'leaveRecords', localField: '_id', foreignField: 'employeeId', as: 'leaves' } }, { $unwind: { path: '$leaves', preserveNullAndEmptyArrays: true } }, { $group: { _id: '$employeeId', firstName: { $first: '$firstName' }, lastName: { $first: '$lastName' }, leavesCount: { $sum: { $cond: [{ $ifNull: ['$leaves.leaveType', false] }, 1, 0] } } } } ]);","Aggregate employee documents from the 'employees' collection and lookup related leave records from the 'leaveRecords' collection using employee ID. Unwind these records for mapping, and group by employee ID to retrieve each employee's first name, last name, and count of leave records, only including records with a leave type."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $match: { status: 'approved' } }, { $lookup: { from: 'employees', localField: 'employeeId', foreignField: '_id', as: 'employeeDetails' } }, { $unwind: '$employeeDetails' }, { $group: { _id: '$leaveType', totalApproved: { $sum: 1 }, employeeNames: { $addToSet: { $concat: ['$employeeDetails.firstName', ' ', '$employeeDetails.lastName'] } } } } ]);","Aggregate approved leave records from the 'leaveRecords' collection, joining with employee details from the 'employees' collection by employee ID. Group by leave type to count total approved leaves and list unique employee names per leave type."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.aggregate([ { $lookup: { from: 'departments', localField: 'department', foreignField: 'name', as: 'departmentDetails' } }, { $unwind: '$departmentDetails' }, { $project: { firstName: 1, lastName: 1, 'department': '$departmentDetails.name', 'budget': '$departmentDetails.budget' } } ])","Retrieve the first name, last name, department name, and budget of all employees, including department details from the 'departments' collection."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.leaveRecords.aggregate([ { $group: { _id: ""$approvedBy"", totalLeaves: { $sum: 1 }, leaveTypes: { $addToSet: ""$leaveType"" } } }, { $lookup: { from: 'employees', localField: '_id', foreignField: '_id', as: 'approvers' } }, { $unwind: '$approvers' }, { $project: { approverName: { $concat: ['$approvers.firstName', ' ', '$approvers.lastName'] }, totalLeaves: 1, leaveTypes: 1 } } ])","Group leave records by approver ID, count total leaves, collect distinct leave types, join with employee details, and project the approver's full name, total leaves, and leave types."
hr_management,"{
  // Employees Collection
  “employees”: {
    _id: ObjectId,
    employeeId: String,
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    department: String,
    position: String,
    salary: Decimal128,
    hireDate: Date,
    status: String,
    managerId: ObjectId,
    EmergencyContact: {
      name: String,
      relationship: String,
      phone: String
    }
  },

  // Departments Collection
  “departments”: {
    _id: ObjectId,
    name: String,
    description: String,
    headId: ObjectId,
    budget: Decimal128,
    location: String,
    createdAt: Date
  },

  // Leave Records Collection
  leaveRecords: {
    _id: ObjectId,
    employeeId: ObjectId,
    leaveType: String,
    startDate: Date,
    endDate: Date,
    status: String,
    reason: String,
    approvedBy: ObjectId,
    appliedDate: Date,
    lastUpdated: Date
  }
}
","db.employees.find({ status: 'active', department: 'Engineering' }).sort({ hireDate: 1 })","Retrieve all active employees in the 'Engineering' department, sorted by hire date in ascending order."
