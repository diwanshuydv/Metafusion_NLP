database_id,schema,mongo_query,natural_language_query
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({}),Get all records from the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({}),Retrieve all records from the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INT001"" })",Find all traffic events where the intersection ID is 'INT001'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INT001"" });",Get traffic events with intersection ID 'INT001'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.severity': 'Critical' }),Retrieve all traffic events with a severity level of 'Critical'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": ""Critical"" });",Retrieve traffic events where the event severity is 'Critical'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles.number_plate': { $regex: /^AB\d{2}CD\d{4}$/ } }),"Retrieve documents from 'traffic_events' where vehicle number plates match the pattern 'AB', two digits, 'CD', and four digits."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles.number_plate': { $regex: /^AB\d{2}CD\d{4}$/ } });,"Find traffic events with vehicle number plates matching the format 'AB', two digits, 'CD', and four digits."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-01-01T00:00:00Z"") } });","Find traffic events with vehicle event timestamps on or after January 1, 2023."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.camera_id"": ""CAM123"", ""response.event.type"": ""RedLightViolation"" });",Retrieve all traffic events where the camera ID is 'CAM123' and the event type is 'RedLightViolation'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.camera_id"": ""CAM123"", ""response.event.type"": ""RedLightViolation"" });",Retrieve traffic events with a camera ID of 'CAM123' and an event type of 'RedLightViolation'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles"": { $exists: true, $ne: [] } });",Retrieve documents from the 'traffic_events' collection where 'response.event.vehicles' exists and is not empty.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles"": { $exists: true, $ne: [] } });",Retrieve entries from the 'traffic_events' collection with at least one vehicle in the 'vehicles' array under 'response.event'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({}, { 'identifier': 1, 'response.event.type': 1 }).sort({ 'response.event.type': 1 });","Retrieve all documents from 'traffic_events', selecting the 'identifier' and the event type, sorted by event type in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({}, { ""identifier"": 1, ""response.event.type"": 1 }).sort({ ""response.event.type"": 1 });","Retrieve the 'identifier' and event type from the 'traffic_events' collection, sorted by event type in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INT002"" }).limit(10);",Retrieve the first ten traffic events where the intersection identifier is 'INT002'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INT002"" }).limit(10);",Retrieve ten entries from the 'traffic_events' collection with intersection_id 'INT002'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.countDocuments({ ""response.event.severity"": ""High"" });",Count the documents in 'traffic_events' where the event severity is 'High'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.countDocuments({ ""response.event.severity"": ""High"" });",Count the entries in the 'traffic_events' collection with a 'High' severity level.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.distinct('response.event.type'),Retrieve distinct event types from the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.distinct('response.event.type'),Retrieve unique event types from traffic events.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": { $in: [""Critical"", ""High""] } }).sort({ ""response.event.vehicles.0.timestamp"": -1 })","Retrieve all traffic events with severity 'Critical' or 'High', sorted by the timestamp of the first vehicle in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": { $in: [""Critical"", ""High""] } }).sort({ ""response.event.vehicles.0.timestamp"": -1 });","Find all traffic events with severity 'Critical' or 'High', ordering by the timestamps of the first vehicle in reverse chronological order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.location"": { $geoWithin: { $centerSphere: [[-73.97, 40.77], 0.1] } } });","Retrieve all traffic events where vehicle locations are within 0.1 degrees of the coordinates [-73.97, 40.77]."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'response.event.vehicles.location': { $geoWithin: { $centerSphere: [[-73.97, 40.77], 0.1 / 3963.2] } } });","Retrieve documents from the 'traffic_events' collection for vehicles located within a 0.1-degree radius of the coordinates [-73.97, 40.77]."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.camera_id"": ""CAM124"" }, { ""response.event.vehicles"": 1 })","Retrieve all traffic event records from the 'traffic_events' collection with camera ID 'CAM124', showing only the associated vehicles."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'identifier.camera_id': 'CAM124' }, { 'response.event.vehicles': 1 })",Retrieve vehicle details from the 'traffic_events' collection where the camera ID is 'CAM124'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $group: { _id: '$identifier.intersection_id', total_events: { $sum: 1 } } } ])",Retrieve all traffic events with a 'Low' severity from the 'traffic_events' collection and group by intersection ID to count the total events per intersection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $group: { _id: '$identifier.intersection_id', total_events: { $sum: 1 } } } ])","Retrieve the count of 'Low' severity traffic events, grouped by intersection ID, from the 'traffic_events' collection."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", avg_speed: { $avg: ""$response.event.vehicles.speed"" } } }])",Unwind the vehicles array in the 'traffic_events' collection and group by vehicle number plate to calculate the average speed.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", avg_speed: { $avg: ""$response.event.vehicles.speed"" } } } ]);",Extract the average speed of each unique vehicle from the event data in the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles.speed': { $gt: 100 } });,Select records from 'traffic_events' where any vehicle has a speed greater than 100.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles.speed': { $gt: 100 } });,Retrieve documents from the 'traffic_events' collection where any vehicle has a speed greater than 100.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({}, {response: 1, identifier: 1})","Retrieve all traffic event records, including event severity, type, and vehicle details such as number plates, speeds, timestamps, and locations."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'identifier.camera_id': { $exists: true }, 'identifier.intersection_id': { $exists: true } }, { 'response.event.severity': 1, 'response.event.type': 1, 'response.event.vehicles': 1 })","Find all traffic events for specific camera and intersection identifiers, including event severity, type, and details about vehicles such as number plates, speeds, timestamps, and locations."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'identifier.intersection_id': 'JUNCTION_1' });,Retrieve all traffic events where the intersection ID is 'JUNCTION_1'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""JUNCTION_1"" });",Get traffic events with the intersection ID 'JUNCTION_1'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.severity': 'Critical' }),Retrieve all traffic events where the event severity is 'Critical'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.severity': 'Critical' });,Retrieve documents from the 'traffic_events' collection where the event severity is 'Critical'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.type"": ""Speeding"", ""response.event.vehicles"": { $elemMatch: { ""speed"": { $gt: 80 } } } });",Select all documents from the 'traffic_events' collection where the event type is 'Speeding' and at least one vehicle's speed exceeds 80.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.type"": ""Speeding"", ""response.event.vehicles.speed"": { $gt: 80 } })",Retrieve traffic event records for incidents categorized as 'Speeding' with vehicle speeds exceeding 80.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.camera_id"": ""CAMERA_001"", ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-02-01"") } });","Retrieve all traffic events where the camera ID is 'CAMERA_001' and the vehicle timestamps are between January 1, 2023, and February 1, 2023."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles"": { ""$elemMatch"": { ""number_plate"": ""AB12CD1234"" } } });",Retrieve all traffic events with vehicles having the number plate 'AB12CD1234'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles': { $elemMatch: { number_plate: 'AB12CD1234' } } });,Find traffic events where a vehicle has the number plate 'AB12CD1234'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'response.event.vehicles.location': { $near: { $geometry: { type: 'Point', coordinates: [102.0, 0.5] }, $maxDistance: 1000 } } } });","Find traffic events where vehicles are within 1000 meters of the coordinates (102.0, 0.5)."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'response.event.vehicles.location': { $near: { $geometry: { type: 'Point', coordinates: [102.0, 0.5] }, $maxDistance: 1000 } } } });","Find traffic events with vehicles located within 1000 meters of the point (102.0, 0.5)."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""JUNCTION_2"", ""response.event.severity"": { $ne: ""Low"" } });",Retrieve all traffic events where the intersection ID is 'JUNCTION_2' and the event severity is not 'Low'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""JUNCTION_2"", ""response.event.severity"": { $ne: ""Low"" } });",Retrieve entries from 'traffic_events' where 'intersection_id' is 'JUNCTION_2' and 'event' severity is not 'Low'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles': { $size: 3 } });,Select records from 'traffic_events' where three vehicles are involved in the event response.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles': { $size: 3 } });,Retrieve traffic events with exactly three vehicles in the event response.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.type': 'RedLightViolation' }).sort({ 'response.event.vehicles.0.timestamp': -1 }),"Select all records from the 'traffic_events' collection where the event type is 'RedLightViolation', sorted in descending order by the timestamp of the first vehicle involved."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": { $in: [""High"", ""Critical""] } })",Select all records from the 'traffic_events' collection where the event severity is 'High' or 'Critical'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": { $in: [""High"", ""Critical""] } });",Retrieve traffic events with a severity of 'High' or 'Critical'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles': { $elemMatch: { speed: { $exists: true } } } });,Retrieve all entries from the 'traffic_events' collection where at least one vehicle has a speed field.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles.speed': { $exists: true } });,Find all traffic events that include a speed value for vehicles.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-03-01"") } }).limit(5);","Retrieve up to five traffic event records with vehicle timestamps from March 1, 2023, onwards."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-03-01"") } }).limit(5);","Retrieve up to five traffic events with vehicle timestamps from March 1, 2023, onwards."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({}, { 'identifier.camera_id': 1, 'response.event.severity': 1 }).sort({ 'response.event.severity': 1 })","Retrieve all documents from the 'traffic_events' collection, selecting 'camera_id' and 'severity', sorted by 'severity' in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({}, { 'identifier.camera_id': 1, 'response.event.severity': 1 }).sort({ 'response.event.severity': 1 });","Retrieve all entries from the 'traffic_events' collection, showing 'camera_id' and 'event severity', sorted by 'event severity' in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.speed"": { $gt: 100 } });",Retrieve documents from the 'traffic_events' collection with at least one vehicle speed greater than 100.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles.speed': { $gt: 100 } });,Find traffic events with vehicles exceeding a speed of 100.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": { $regex: /^JUNCTION_/ } });",Get all traffic events where the intersection ID starts with 'JUNCTION_'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": { $regex: /^JUNCTION_/ } });",Find traffic events with an 'intersection_id' starting with 'JUNCTION_'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.countDocuments({ 'response.event.type': 'IllegalParking' });,Count the documents in the 'traffic_events' collection where the event type is 'IllegalParking'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.type': 'IllegalParking' }).count();,Count the entries in the 'traffic_events' collection for events classified as 'IllegalParking'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.updateMany({ 'response.event.severity': 'Low' }, { $set: { 'response.event.severity': 'Medium' } });",Update all records in the 'traffic_events' collection to change event severity from 'Low' to 'Medium'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.updateMany({ 'response.event.severity': 'Low' }, { $set: { 'response.event.severity': 'Medium' } });",Update all documents in the 'traffic_events' collection that have a severity of 'Low' to set their severity to 'Medium'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles"": { $elemMatch: { timestamp: { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-01-31"") }, speed: { $gt: 60 } } } });","Retrieve all traffic event records where any vehicle's timestamp is between January 1, 2023, and January 31, 2023, and its speed exceeds 60."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-01-31"") }, ""response.event.vehicles.speed"": { $gt: 60 } });","Retrieve traffic events with vehicle timestamps from January 1 to January 30, 2023, where the vehicle speed exceeds 60."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.type': 'Speeding' } }, { $group: { _id: '$identifier.camera_id', totalViolations: { $sum: 1 } } }])","Count all speeding violations in the 'traffic_events' collection, grouped by camera ID."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""response.event.type"": ""Speeding"" } }, { $group: { _id: ""$identifier.camera_id"", totalViolations: { $sum: 1 } } } ])",Retrieve the count of speeding violations grouped by camera ID from the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", avgSpeed: { $avg: ""$response.event.vehicles.speed"" } } } ]);",Unwind the vehicles in the 'traffic_events' collection and calculate the average speed grouped by each vehicle's number plate.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", avgSpeed: { $avg: ""$response.event.vehicles.speed"" } } } ])",Unwind the vehicles array in the 'traffic_events' collection and calculate the average speed for each unique number plate.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INT001"" });",Get all traffic events for the intersection with ID 'INT001'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INT001"" });",Find traffic events with intersection ID 'INT001'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""response.event.severity"": ""Critical"" } }, { $group: { _id: ""$identifier.camera_id"", totalEvents: { $sum: 1 } } } ]);",Retrieve all traffic events with 'Critical' severity and count occurrences by camera ID.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Critical' } }, { $group: { _id: '$identifier.camera_id', totalEvents: { $sum: 1 } } } ])",Retrieve the count of 'Critical' severity events grouped by camera ID from the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.type': 'RedLightViolation' }).sort({ 'response.event.vehicles.0.timestamp': -1 }),Find all traffic events with the type 'RedLightViolation' and sort them by the first vehicle's timestamp in descending order.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: '$response.event.vehicles' }, { $match: { 'response.event.vehicles.speed': { $gte: 80 } } }, { $project: { number_plate: '$response.event.vehicles.number_plate', speed: '$response.event.vehicles.speed' } } ])",Retrieve vehicle number plates and speeds from traffic events where vehicle speeds are 80 or higher.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: '$response.event.vehicles' }, { $match: { 'response.event.vehicles.speed': { $gte: 80 } } }, { $project: { number_plate: '$response.event.vehicles.number_plate', speed: '$response.event.vehicles.speed' } } ])","Find vehicles in the 'traffic_events' collection traveling at speeds of 80 or more, and display their number plates and speeds."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.type"": ""IllegalParking"" } }, { $group: { _id: null, totalViolations: { $sum: 1 } } } ])",Count the total number of 'IllegalParking' violations in the 'traffic_events' collection after unwinding the vehicles involved in each event.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.type"": ""IllegalParking"" } }, { $group: { _id: null, totalViolations: { $sum: 1 } } } ]);",Count the total number of 'IllegalParking' violations in the 'traffic_events' collection by expanding the vehicle array.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": ""High"", ""response.event.type"": ""Speeding"" })",Retrieve all traffic events where the severity is 'High' and the type is 'Speeding'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": ""High"", ""response.event.type"": ""Speeding"" });",Retrieve records from the 'traffic_events' collection with 'High' severity and 'Speeding' event type.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-01-01""), $lte: new Date(""2023-12-31"") } } }, { $group: { _id: ""$identifier.camera_id"", eventCount: { $sum: 1 } } } ])","Retrieve all records from 'traffic_events' where vehicle event timestamps are between January 1, 2023, and December 31, 2023, and count events grouped by camera_id."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.location"": { $geoWithin: { $centerSphere: [[-73.97, 40.77], 1 / 3963.2] } } });","Retrieve all traffic events where vehicles are located within a 1-mile radius of the coordinates [-73.97, 40.77]."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.location"": { $geoWithin: { $centerSphere: [[-73.97, 40.77], 1 / 3963.2] } } });","Get traffic event documents with vehicles located within 1 mile of the point [-73.97, 40.77]."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $sort: { ""response.event.vehicles.timestamp"": -1 } }, { $group: { _id: ""$identifier.intersection_id"", lastEvent: { $first: ""$response.event"" } } } ])","Sort traffic events by vehicle timestamp in descending order, then group by intersection_id to retrieve the most recent event for each junction."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: ""$response.event.vehicles"" }, { $sort: { ""response.event.vehicles.timestamp"": -1 } }, { $group: { _id: ""$identifier.intersection_id"", lastEvent: { $first: ""$response.event"" } } }])","Group the latest traffic events by intersection_id, ordered by the vehicles' timestamp from most recent to oldest."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $group: { _id: ""$response.event.type"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])","Count and group traffic events by event type from the 'traffic_events' collection, then sort the results in descending order by total count."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $group: { _id: ""$response.event.type"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])","Aggregate traffic event types in the 'traffic_events' collection and count the total events for each type, then sort the results in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.speed"": { $gt: 60 } } }, { $group: { _id: ""$response.event.vehicles.number_plate"", count: { $sum: 1 } } } ])","Unwind the vehicles array in 'traffic_events', filter for vehicles with speed over 60, and count occurrences by number plate."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.speed"": { $gt: 60 } } }, { $group: { _id: ""$response.event.vehicles.number_plate"", count: { $sum: 1 } } } ])","Unwind the vehicles in the 'traffic_events' collection, filter for those with a speed over 60, and count events for each vehicle number plate."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-06-01""), $lte: new Date(""2023-06-30"") } }).sort({ ""response.event.type"": 1 })","Retrieve traffic event records that have vehicles with timestamps from June 1, 2023, to June 30, 2023, sorted by event type."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.type': 'IllegalParking' } }, { $group: { _id: '$identifier.intersection_id', totalIncidents: { $sum: 1 } } }])",Select records from the 'traffic_events' collection where the event type is 'IllegalParking' and group the results by intersection_id to count the total incidents for each intersection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.type': 'IllegalParking' } }, { $group: { _id: '$identifier.intersection_id', totalOccurrences: { $sum: 1 } } } ]);",Find the total occurrences of 'IllegalParking' events by intersection_id in the 'traffic_events' collection.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $lookup: { from: 'traffic_events', localField: 'identifier.camera_id', foreignField: 'identifier.camera_id', as: 'relatedEvents' } } ])","Retrieve all documents from the 'traffic_events' collection where the event severity is 'Low', and link each document with others based on the camera_id."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $lookup: { from: 'traffic_events', localField: 'identifier.camera_id', foreignField: 'identifier.camera_id', as: 'relatedEvents' } } ])",Retrieve 'traffic_events' records with a response event severity of 'Low' and link related entries using identifier.camera_id.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'identifier.camera_id': 'CAM1001' }).limit(5);,Get five documents from the 'traffic_events' collection where the camera ID is 'CAM1001'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.camera_id"": ""CAM1001"" }).limit(5);",Retrieve up to five traffic events with camera ID 'CAM1001'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $sort: { ""response.event.vehicles.speed"": -1 } }, { $group: { _id: ""$identifier.intersection_id"", highestSpeed: { $max: ""$response.event.vehicles.speed"" } } } ])",Sort the vehicle speeds in descending order and group the results by intersection ID to find the highest speed for each traffic junction.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: '$response.event.vehicles' }, { $group: { _id: '$identifier.intersection_id', highestSpeed: { $max: '$response.event.vehicles.speed' } } }, { $sort: { highestSpeed: -1 } } ])","Find the maximum speed of vehicles at each intersection in the 'traffic_events' collection, sorted in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'response.event.severity': 'Critical' }, { 'response.event.vehicles': 1 })","Find all traffic events with 'Critical' severity and include details about the vehicles, such as number plates, speeds, timestamps, and locations."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""XYZ123"" });",Get all traffic events where the intersection ID is 'XYZ123'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'identifier.intersection_id': 'XYZ123' }),Get traffic events with an intersection ID of 'XYZ123'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.severity': 'Critical' }).sort({ 'response.event.type': 1 });,"Retrieve all traffic events where the event severity is 'Critical', sorted by event type in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.severity"": ""Critical"" }).sort({ ""response.event.type"": 1 })","Retrieve traffic events with a severity of 'Critical', sorted by event type in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.type"": ""Speeding"", ""response.event.vehicles"": { $elemMatch: { ""speed"": { $gt: 80 } } } });",Retrieve traffic events where the event type is 'Speeding' and at least one vehicle's speed exceeds 80.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'identifier.camera_id': 'CAM456', 'response.event.vehicles.timestamp': { $gte: new Date('2023-01-01'), $lt: new Date('2024-01-01') } });","Retrieve traffic event records from 'traffic_events' where the camera ID is 'CAM456' and vehicle timestamps are from January 1, 2023, to December 31, 2023."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.camera_id"": ""CAM456"", ""response.event.vehicles.timestamp"": { $gte: new Date(""2023-01-01T00:00:00Z""), $lt: new Date(""2024-01-01T00:00:00Z"") } });","Retrieve documents from the 'traffic_events' collection where the camera ID is 'CAM456' and vehicle timestamps are from January 1, 2023, to December 31, 2023."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.severity': 'High' } }, { $group: { _id: '$identifier.intersection_id', count: { $sum: 1 } } }])",Retrieve traffic events with 'High' severity from the 'traffic_events' collection and count occurrences for each intersection identifier.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""response.event.severity"": ""High"" } }, { $group: { _id: ""$identifier.intersection_id"", count: { $sum: 1 } } } ]);","Get the count of 'High' severity events in the 'traffic_events' collection, grouped by intersection ID."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.speed"": { $gt: 70 }, ""response.event.type"": ""RedLightViolation"" } }, { $group: { _id: ""$identifier.camera_id"", totalSpeedingVehicles: { $sum: 1 } } } ])","Count the number of vehicles exceeding a speed of 70 from the 'traffic_events' collection for 'RedLightViolation' incidents, grouped by camera ID."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.speed"": { $gt: 70 }, ""response.event.type"": ""RedLightViolation"" } }, { $group: { _id: ""$identifier.camera_id"", totalSpeedingVehicles: { $sum: 1 } } } ]);","Retrieve the count of vehicles recorded speeding above 70 associated with 'RedLightViolation' events, grouped by camera ID in the 'traffic_events' collection."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $group: { _id: ""$response.event.type"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])","Count and group traffic events by type, then sort the counts in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $group: { _id: ""$response.event.type"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }])","Group events in the 'traffic_events' collection by type, count the total events for each type, and sort the results in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.number_plate"": { $regex: /^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$/ } }).limit(10);","Retrieve up to 10 documents from the 'traffic_events' collection where the 'number_plate' follows the pattern: two letters, two digits, two letters, and four digits."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.number_plate"": { $regex: /^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$/ } }).limit(10);","Retrieve up to 10 records from the 'traffic_events' collection with vehicle number plates that match the pattern: two uppercase letters, two digits, two uppercase letters, and four digits."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.severity': 'Low' } }, { $unwind: '$response.event.vehicles' }, { $group: { _id: null, avgSpeed: { $avg: '$response.event.vehicles.speed' } } }])",Retrieve all traffic events with a 'Low' severity and calculate the average speed of vehicles.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $unwind: '$response.event.vehicles' }, { $group: { _id: null, avgSpeed: { $avg: '$response.event.vehicles.speed' } } } ])",Find the average speed of vehicles in traffic events with low severity.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'response.event.vehicles.location': { $geoWithin: { $box: [[-73.9876, 40.7661], [-73.9786, 40.7731]] } } });","Select all records from the 'traffic_events' collection where vehicle locations are within the box defined by the coordinates [-73.9876, 40.7661] and [-73.9786, 40.7731]."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.location"": { $geoWithin: { $box: [[-73.9876, 40.7661], [-73.9786, 40.7731]] } } });","Find traffic event documents with vehicles located within the geographical box defined by the coordinates [-73.9876, 40.7661] and [-73.9786, 40.7731]."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""identifier.intersection_id"": ""INTERSECTION_001"" }).sort({ ""response.event.vehicles.0.timestamp"": -1 }).limit(5);","Find the five most recent traffic events for intersection ID 'INTERSECTION_001', ordered by vehicle timestamps from newest to oldest."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$identifier.camera_id"", maxSpeed: { $max: ""$response.event.vehicles.speed"" } } }, { $match: { maxSpeed: { $gt: 90 } } } ]);","Unwind the 'vehicles' array from the 'traffic_events' collection, group by 'camera_id', and find the maximum speed where it's greater than 90."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$identifier.camera_id"", maxSpeed: { $max: ""$response.event.vehicles.speed"" } } }, { $match: { maxSpeed: { $gt: 90 } } }])","Unwind the 'vehicles' array in the 'traffic_events' collection, group by 'camera_id', and find the maximum speed of vehicles, filtering for groups where the maximum speed exceeds 90."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $group: { _id: ""$identifier.intersection_id"", totalEvents: { $sum: 1 }, avgSeverity: { $avg: { $switch: { branches: [{ case: { $eq: [""$response.event.severity"", ""Critical""] }, then: 3 }, { case: { $eq: [""$response.event.severity"", ""High""] }, then: 2 }], default: 1 } } } } }, { $sort: { totalEvents: -1 } }])","Group traffic events by intersection ID, count the events, calculate average severity (3 for 'Critical', 2 for 'High', 1 for 'Low'), and sort by the number of events in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $group: { _id: ""$identifier.intersection_id"", totalEvents: { $sum: 1 }, avgSeverity: { $avg: { $switch: { branches: [ { case: { $eq: [""$response.event.severity"", ""Critical""] }, then: 3 }, { case: { $eq: [""$response.event.severity"", ""High""] }, then: 2 } ], default: 1 } } } } }, { $sort: { totalEvents: -1 } } ]);","Aggregate documents in 'traffic_events' by intersection identifier, summing total events and calculating average severity (3 for 'Critical', 2 for 'High', 1 for 'Low'), then order by total events in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.vehicles.timestamp': { $gte: new Date('2023-01-01'), $lt: new Date('2023-02-01') } } }, { $group: { _id: '$response.event.type', count: { $sum: 1 } } } ])","Fetch entries from 'traffic_events' for vehicle timestamps between January 1 and January 31, 2023, and count the events by type."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $project: { intersection_id: ""$identifier.intersection_id"", severity: ""$response.event.severity"" } }, { $lookup: { from: ""severity_levels"", localField: ""severity"", foreignField: ""level"", as: ""severity_info"" } } ])","Retrieve intersection ID and severity level from the 'traffic_events' collection, and join with 'severity_levels' collection using the severity field."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $project: { intersection_id: ""$identifier.intersection_id"", severity: ""$response.event.severity"" } }, { $lookup: { from: ""severity_levels"", localField: ""severity"", foreignField: ""level"", as: ""severity_info"" } } ]);","From the 'traffic_events' collection, retrieve the intersection identifier and event severity, and look up the severity details from the 'severity_levels' collection."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'identifier.intersection_id': <specific_intersection_id>, 'identifier.camera_id': <specific_camera_id> }, { 'response.event.severity': 1, 'response.event.type': 1, 'response.event.vehicles.number_plate': 1, 'response.event.vehicles.speed': 1, 'response.event.vehicles.timestamp': 1, 'response.event.vehicles.location': 1 })","Retrieve all traffic events from the 'traffic_events' collection for a specific intersection and camera, including event severity, type, and details of associated vehicles such as number plates, speeds, timestamps, and locations."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", totalSpeed: { $sum: ""$response.event.vehicles.speed"" }, eventCount: { $sum: 1 } } }, { $match: { totalSpeed: { $gt: 100 } } } ])","Extract data from 'traffic_events' by unwinding vehicle records, grouping by number plate to sum speeds and count events, and filtering for total speed above 100."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", totalSpeed: { $sum: ""$response.event.vehicles.speed"" }, eventCount: { $sum: 1 } } }, { $match: { totalSpeed: { $gt: 100 } } } ]);","Retrieve vehicle entries from the 'traffic_events' collection, group them by number plate, sum their speeds, count their occurrences, and include only those with a total speed greater than 100."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Critical' } }, { $group: { _id: '$identifier.intersection_id', count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Get all traffic events with a 'Critical' severity, group by intersection ID, count each group, and sort by count in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.severity': 'Critical' } }, { $group: { _id: '$identifier.intersection_id', count: { $sum: 1 } } }, { $sort: { count: -1 } }])","Retrieve counts of 'Critical' severity events from the 'traffic_events' collection, grouped by intersection ID, sorted from highest to lowest."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.type"", averageSpeed: { $avg: ""$response.event.vehicles.speed"" } } }, { $match: { averageSpeed: { $gt: 60 } } }])","Group the documents in the 'traffic_events' collection by traffic event type and calculate the average speed of vehicles, including only event types with an average speed greater than 60."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: '$response.event.vehicles' }, { $group: { _id: '$response.event.type', averageSpeed: { $avg: '$response.event.vehicles.speed' } } }, { $match: { averageSpeed: { $gt: 60 } } }])","Aggregate data from the 'traffic_events' collection by event type, calculating the average speed of vehicles, and show only those types with an average speed greater than 60."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $addFields: { timestampDay: { $dayOfYear: ""$response.event.vehicles.timestamp"" } } }, { $group: { _id: ""$timestampDay"", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Add a field for the day of the year from the vehicle timestamps in 'traffic_events', group by this field, and count the total events per day, sorting results in descending order by event count."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $addFields: { timestampDay: { $dayOfYear: ""$response.event.vehicles.timestamp"" } } }, { $group: { _id: ""$timestampDay"", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Create a field for the day of the year using the vehicles' timestamps in the 'traffic_events' collection, group by that field, count the events for each day, and sort the results in descending order of event count."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $project: { vehiclePlate: ""$response.event.vehicles.number_plate"", speed: ""$response.event.vehicles.speed"", date: { $dateToString: { format: ""%Y-%m-%d"", date: ""$response.event.vehicles.timestamp"" } } } }, { $group: { _id: { plate: ""$vehiclePlate"", date: ""$date"" }, avgSpeed: { $avg: ""$speed"" } } }, { $match: { avgSpeed: { $gte: 80 } } } ]);","Unwind vehicle data from the 'traffic_events' collection, project vehicle number plate, speed, and event date formatted as 'YYYY-MM-DD'. Group by number plate and date, calculating average speed, and filter to include only groups with an average speed of 80 or higher."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $project: { vehiclePlate: ""$response.event.vehicles.number_plate"", speed: ""$response.event.vehicles.speed"", date: { $dateToString: { format: ""%Y-%m-%d"", date: ""$response.event.vehicles.timestamp"" } } } }, { $group: { _id: { plate: ""$vehiclePlate"", date: ""$date"" }, avgSpeed: { $avg: ""$speed"" } } }, { $match: { avgSpeed: { $gte: 80 } } } ])","Expand vehicle details in the 'traffic_events' collection, selecting the vehicle's number plate, speed, and event date in 'YYYY-MM-DD' format. Group by vehicle plate and date, averaging speeds, and filter for averages of at least 80."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""identifier.camera_id"": ""CAM123"" } }, { $unwind: ""$response.event.vehicles"" }, { $group: { _id: null, totalViolations: { $sum: 1 } } } ])",Count the total number of traffic violations for camera identifier 'CAM123' by unwinding the vehicles from the traffic events.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""identifier.camera_id"": ""CAM123"" } }, { $unwind: ""$response.event.vehicles"" }, { $group: { _id: null, totalViolations: { $sum: 1 } } } ]);",Count the total number of vehicle violations recorded in the 'traffic_events' collection for events captured by the camera 'CAM123'.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.type': 'RedLightViolation' } }, { $group: { _id: '$identifier.intersection_id', totalViolations: { $sum: 1 }, avgSpeed: { $avg: '$response.event.vehicles.speed' } } }, { $sort: { totalViolations: -1 } } ])","Retrieve all records from 'traffic_events' where the event type is 'Red Light Violation', group by intersection ID, calculate the total violations and average speed, and sort by total violations in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.timestamp"": { $gte: new Date(""2022-01-01""), $lte: new Date(""2022-12-31"") } } }, { $group: { _id: ""$response.event.vehicles.number_plate"", count: { $sum: 1 } } } ]);","Retrieve data from the 'traffic_events' collection for vehicle incidents between January 1, 2022, and December 31, 2022, and count the total events for each vehicle by number plate."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.type': 'IllegalParking', 'response.event.severity': 'High' } }, { $unwind: '$response.event.vehicles' }, { $project: { number_plate: '$response.event.vehicles.number_plate', violationTime: '$response.event.vehicles.timestamp' } } ]);",Select entries from the 'traffic_events' collection where event type is 'IllegalParking' and severity is 'High'. Unwind the vehicles array to access each vehicle's number plate and violation timestamp.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""response.event.type"": ""IllegalParking"", ""response.event.severity"": ""High"" } }, { $unwind: ""$response.event.vehicles"" }, { $project: { number_plate: ""$response.event.vehicles.number_plate"", violationTime: ""$response.event.vehicles.timestamp"" } } ])","Retrieve all 'IllegalParking' incidents with 'High' severity from the 'traffic_events' collection, unwind the vehicles array, and return only the number plate and timestamp of each violation."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { ""identifier.intersection_id"": ""INT123"" } }, { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", totalSpeed: { $sum: ""$response.event.vehicles.speed"" }, eventCount: { $sum: 1 } } }, { $sort: { totalSpeed: -1 } } ])","Aggregate traffic event data for intersection ID 'INT123', unwind the vehicles array, group by vehicle number plate to sum total speed and count events, and sort by total speed in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'identifier.intersection_id': 'INT123' } }, { $unwind: '$response.event.vehicles' }, { $group: { _id: '$response.event.vehicles.number_plate', totalSpeed: { $sum: '$response.event.vehicles.speed' }, eventCount: { $sum: 1 } } }, { $sort: { totalSpeed: -1 } } ])","Find all traffic events with intersection ID 'INT123', unwind each vehicle, group by number plate to sum speeds and count events, and sort by total speed in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.type"", totalVehicles: { $sum: 1 }, averageSpeed: { $avg: ""$response.event.vehicles.speed"" } } }, { $match: { totalVehicles: { $gt: 20 } } } ])","Unwind the 'vehicles' array in 'response.event' of 'traffic_events', group by event type, count vehicles, calculate average speed, and include groups with over 20 vehicles."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.type"", totalVehicles: { $sum: 1 }, averageSpeed: { $avg: ""$response.event.vehicles.speed"" } } }, { $match: { totalVehicles: { $gt: 20 } } } ]);","Break down the 'vehicles' array in 'response.event' of 'traffic_events', grouping by event type to find the count of vehicles and average speed, excluding types with 20 or fewer vehicles."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $unwind: '$response.event.vehicles' }, { $group: { _id: null, averageSpeed: { $avg: '$response.event.vehicles.speed' } } } ])","Select all records from the 'traffic_events' collection with a severity of 'Low', unwind the vehicles, and calculate the average speed of these vehicles."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $unwind: '$response.event.vehicles' }, { $project: { speed: '$response.event.vehicles.speed', location: '$response.event.vehicles.location' } }, { $group: { _id: null, averageSpeed: { $avg: '$speed' } } } ]);","Retrieve entries from 'traffic_events' where the event severity is 'Low', expand the vehicles array, project the speed and location of each vehicle, and calculate the average speed."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $project: { intersectionId: ""$identifier.intersection_id"", totalVehicles: { $size: ""$response.event.vehicles"" } } }, { $group: { _id: ""$intersectionId"", totalEvents: { $sum: 1 }, avgVehicles: { $avg: ""$totalVehicles"" } } } ]);",Count the total number of vehicles per traffic event and group the results by traffic junction identifier to calculate the total number of events and average vehicles per event.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $project: { intersectionId: ""$identifier.intersection_id"", totalVehicles: { $size: ""$response.event.vehicles"" } } }, { $group: { _id: ""$intersectionId"", totalEvents: { $sum: 1 }, avgVehicles: { $avg: ""$totalVehicles"" } } } ])","Retrieve intersection IDs and the count of vehicles for each event in the 'traffic_events' collection, grouping by intersection to find total events and average vehicles per event."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.speed"": { $gt: 50 } } }, { $group: { _id: ""$response.event.vehicles.number_plate"", count: { $sum: 1 } } } ])","Retrieve vehicle records from 'traffic_events' where speed exceeds 50, grouped by number plate with a count of occurrences."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: ""$response.event.vehicles"" }, { $match: { ""response.event.vehicles.speed"": { $gt: 50 } } }, { $group: { _id: ""$response.event.vehicles.number_plate"", count: { $sum: 1 } } }]);","Retrieve the count of vehicles with a speed over 50 from the 'traffic_events' collection, grouped by their number plates."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $group: { _id: ""$identifier.intersection_id"", avgSpeed: { $avg: ""$response.event.vehicles.speed"" } } }, { $match: { avgSpeed: { $gt: 75 } } } ]);","Group traffic events by intersection ID, calculate the average speed of vehicles for each event, and filter to keep groups with an average speed over 75."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $group: { _id: ""$identifier.intersection_id"", avgSpeed: { $avg: ""$response.event.vehicles.speed"" } } }, { $match: { avgSpeed: { $gt: 75 } } }]);","In the 'traffic_events' collection, group the data by intersection ID and calculate the average speed of vehicles, filtering for averages greater than 75."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", maxSpeed: { $max: ""$response.event.vehicles.speed"" }, eventCount: { $sum: 1 } } } }])",Unwind the vehicles from event responses in the 'traffic_events' collection and group by vehicle number plates to get the maximum speed and count of events for each vehicle.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", maxSpeed: { $max: ""$response.event.vehicles.speed"" }, eventCount: { $sum: 1 } } } ])",Unwind the vehicles array in traffic events to calculate the maximum speed and total events for each vehicle's number plate.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({""response.event.type"": { $in: [""Speeding"", ""RedLightViolation""] }}, {""response.event.vehicles"": 1})","Retrieve all traffic events where the type is 'Speeding' or 'RedLightViolation', including details of associated vehicles, their number plates, speeds, and timestamps."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'response.event.type': { $in: ['Speeding', 'RedLightViolation'] } }, { 'response.event.vehicles.number_plate': 1, 'response.event.vehicles.speed': 1, 'response.event.vehicles.timestamp': 1 })","Fetch data from the 'traffic_events' collection for events of type 'Speeding' or 'RedLightViolation', including vehicle details like number plates, speeds, and timestamps."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({}),Get all documents from the 'toll_events' collection.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({}),Select all entries in the 'toll_events' collection.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H1"" });",Retrieve all toll event records where the highway ID is 'H1'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H1"" });",Get toll events with a highway_id of 'H1'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gt: 10 } });,Retrieve all documents from the 'toll_events' collection where the transaction amount is greater than 10.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gt: 10 } });",Fetch records from the 'toll_events' collection with a transaction amount greater than 10.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01"") } });","Get all toll_events records where the transaction timestamp is on or after January 1, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.timestamp': { $gte: new Date('2023-01-01') } });,"Fetch toll events with a transaction timestamp on or after January 1, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.number_plate': 'XYZ123' });,Get all toll events where the number plate is 'XYZ123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.number_plate': 'XYZ123' });,Find toll events with a number plate of 'XYZ123' in the identification.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": 2 })",Retrieve all toll events where the lane number is 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'identifier.lane_number': 2 }),Get all toll events with a lane number of 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.axle_count': { $lt: 5 } });,Retrieve all toll events where the transaction's axle count is less than 5.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $lt: 5 } });",Retrieve documents from the 'toll_events' collection with fewer than 5 axles in the transaction.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': 25.00 });,Retrieve all records in 'toll_events' where the transaction amount is 25.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': 25.00 });,Retrieve toll events with a transaction amount of 25.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': { $exists: true } });,Retrieve all toll_events where the rfid_tag exists in the identification object.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': { $exists: true } });,Retrieve all documents in the 'toll_events' collection that have an 'rfid_tag' in the 'response.event.identification' field.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H2"", ""response.event.transaction.vehicle_class"": 1 })",Find all toll events with highway_id 'H2' and vehicle_class 1.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H2"", ""response.event.transaction.vehicle_class"": 1 })",Find toll events with a 'highway_id' of 'H2' and a 'vehicle_class' of 1.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.countDocuments(),Count all documents in the 'toll_events' collection.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.countDocuments(),Count all records in the 'toll_events' collection.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $lte: 50.00 } }).sort({ ""response.event.transaction.timestamp"": -1 });","Retrieve all documents in the 'toll_events' collection where the transaction amount is less than or equal to 50.00, ordered by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $lte: 50.00 } }).sort({ ""response.event.transaction.timestamp"": -1 });","Retrieve toll_events with a transaction amount of 50.00 or less, sorted by the transaction timestamp from recent to older."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.vehicle_class': { $ne: 3 } });,Retrieve all documents from 'toll_events' where the vehicle class in the transaction is not 3.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.vehicle_class"": { $ne: 3 } })",Retrieve toll events where the vehicle class in the transaction is not 3.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": { $in: [1, 2, 3] } });","Retrieve all records from the 'toll_events' collection with lane numbers 1, 2, or 3."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": { $in: [1, 2, 3] } });","Fetch documents from the 'toll_events' collection with lane numbers 1, 2, or 3."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.axle_count': 4 }).limit(5);,Retrieve up to five records from 'toll_events' where the axle count in the transaction equals four.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": 4 }).limit(5);",Retrieve up to five documents from the 'toll_events' collection with a transaction axle count of four.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.identification.number_plate"": /XYZ/ });",Find all documents in the 'toll_events' collection where the 'number_plate' in 'response.event.identification' matches the regex 'XYZ'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.identification.number_plate"": /XYZ/ });",Find toll events with a 'number_plate' matching the pattern 'XYZ'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H1"", ""response.event.transaction.amount"": { $gt: 20.00 } }).sort({ ""response.event.transaction.timestamp"": 1 });","Fetch records from 'toll_events' where 'identifier.highway_id' is 'H1' and 'response.event.transaction.amount' is greater than 20.00, ordered by 'response.event.transaction.timestamp' ascending."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H1"", ""response.event.transaction.amount"": { $gt: 20 } }).sort({ ""response.event.transaction.timestamp"": 1 });","Find toll events with a 'highway_id' of 'H1' and 'transaction.amount' greater than 20, ordered by 'transaction.timestamp' from earliest to latest."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H3"", ""response.event.transaction.timestamp"": { $gte: new Date(""2023-06-01""), $lt: new Date(""2023-07-01"") } });","Fetch all records from the 'toll_events' collection where the highway identifier is 'H3' and the transaction timestamps are between June 1, 2023, and June 30, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H3"", ""response.event.transaction.timestamp"": { $gte: new Date(""2023-06-01T00:00:00Z""), $lt: new Date(""2023-07-01T00:00:00Z"") } });",Retrieve entries from the 'toll_events' collection with a highway ID of 'H3' where the transaction occurred in June 2023.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': 12345678901234 });,Find all documents in the 'toll_events' collection where the RFID tag is 12345678901234.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': 12345678901234 });,Retrieve entries from the 'toll_events' collection with an RFID tag of 12345678901234.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": 1, ""response.event.transaction.amount"": { $gte: 30 } }).sort({ ""response.event.transaction.amount"": -1 });","Retrieve all toll_events where lane number is 1 and transaction amount is at least 30.00, sorted by transaction amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": 1, ""response.event.transaction.amount"": { $gte: 30 } }).sort({ ""response.event.transaction.amount"": -1 });","Fetch records from the 'toll_events' collection for lane number 1 with transaction amounts of at least 30, sorted by amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': 'SPECIFIC_HIGHWAY_ID' }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1, 'response.event.transaction.vehicle_class': 1, 'response.event.transaction.axle_count': 1, 'response.event.identification.number_plate': 1, 'response.event.identification.rfid_tag': 1 })","Retrieve all documents from the 'toll_events' collection where 'highway_id' matches a specific road network, including transaction details and vehicle identification."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': <SPECIFIC_HIGHWAY_ID> }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1, 'response.event.transaction.vehicle_class': 1, 'response.event.transaction.axle_count': 1, 'response.event.identification.number_plate': 1, 'response.event.identification.rfid_tag': 1 })","Select records from the 'toll_events' collection for a specific 'highway_id', showing transaction amount, timestamp, vehicle class, axle count, number plate, and RFID tag."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""123"" });",Retrieve all documents from the 'toll_events' collection where 'highway_id' is '123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gt: 10 } });",Retrieve all documents from the 'toll_events' collection where the transaction amount exceeds 10.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gt: 10 }});,Find entries in 'toll_events' with a transaction amount greater than 10.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.identification.number_plate"": ""ABC1234"" })",Retrieve all records from the 'toll_events' collection where the number plate in the event's identification is 'ABC1234'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.number_plate': 'ABC1234' });,Find entries in the 'toll_events' collection where the vehicle's number plate is 'ABC1234'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": 2 })",Get all documents from 'toll_events' where the lane number is 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": 2 })",Find toll events with a lane number of 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $gte: 2 } });",Select documents from the 'toll_events' collection where 'axle_count' in 'response.event.transaction' is >= 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $gte: 2 } });",Retrieve toll_events where the transaction's axle_count is at least 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } });","Fetch all toll event records from the 'toll_events' collection where the transaction timestamp is from January 1, 2023, to December 31, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } });","Retrieve documents from the 'toll_events' collection with a transaction timestamp from January 1, 2023, to December 31, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.vehicle_class': 1 }).sort({ 'response.event.transaction.timestamp': -1 });,"Retrieve all toll events where the vehicle class is 1, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.vehicle_class"": 1 }).sort({ ""response.event.transaction.timestamp"": -1 })","Retrieve toll events for vehicle class 1, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""456"", ""response.event.transaction.amount"": { $lt: 5 } });",Select all entries from the 'toll_events' collection where the highway ID is '456' and the transaction amount is less than 5.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""456"", ""response.event.transaction.amount"": { $lt: 5 } })",Retrieve documents from the 'toll_events' collection where the highway ID is '456' and the transaction amount is less than 5.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': 1234567890 });,Retrieve all documents from the 'toll_events' collection where the RFID tag is 1234567890.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.identification.rfid_tag"": 1234567890 })",Find toll_events entries with an RFID tag of 1234567890.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.findOne({ 'response.event.transaction.amount': { $ne: 0 } });,Find a document in the 'toll_events' collection where the transaction amount is not zero.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.findOne({ ""response.event.transaction.amount"": { $ne: 0 } });",Retrieve a record from the 'toll_events' collection where the transaction amount in the event response is not zero.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""101"", ""identifier.lane_number"": { $in: [1, 3] } });",Get all toll events where the highway ID is '101' and the lane number is 1 or 3.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""101"", ""identifier.lane_number"": { $in: [1, 3] } })",Find toll events for highway ID '101' in lane numbers 1 or 3.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.timestamp': { $gt: new Date('2023-06-01') } }).limit(5);,"Fetch up to five toll events with a transaction timestamp after June 1, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.timestamp': { $gt: new Date('2023-06-01') } }).limit(5);,"Select up to five records from the 'toll_events' collection with a transaction timestamp after June 1, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gte: 15 } }).sort({ 'response.event.transaction.amount': 1 });,"Select all records from the 'toll_events' collection where the transaction amount is at least 15.00, ordered by the transaction amount in ascending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gte: 15.00 } }).sort({ 'response.event.transaction.amount': 1 });,"Retrieve toll_events with a transaction amount of at least 15.00, sorted by amount in ascending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.countDocuments({ 'identifier.lane_number': 4 });,Count the documents in the 'toll_events' collection where 'lane_number' is 4.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.countDocuments({ 'identifier.lane_number': 4 });,Count the entries in the 'toll_events' collection where the lane number is 4.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""789"" }, { ""response.event.identification.number_plate"": 1, _id: 0 })","Retrieve the number plate from the 'toll_events' collection where the highway identifier is '789', excluding the MongoDB identifier from the results."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""789"" }, { ""response.event.identification.number_plate"": 1, ""_id"": 0 })","Retrieve the number plate details from the 'toll_events' collection for records with a highway ID of '789', excluding the _id field."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.axle_count': 3 }).limit(10).sort({ 'response.event.transaction.timestamp': -1 });,"Retrieve up to 10 toll_events where the axle count is 3, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.axle_count': 3 }).sort({ 'response.event.transaction.timestamp': -1 }).limit(10);,"Get up to 10 toll events where the transaction axle count is 3, sorted by the most recent timestamps."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gt: 20 }, ""response.event.transaction.vehicle_class"": 2 })",Retrieve all toll events where the transaction amount exceeds 20 and the vehicle class is 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gt: 20 }, ""response.event.transaction.vehicle_class"": 2 });",Retrieve records from the 'toll_events' collection for transactions with an amount greater than 20 and vehicle class 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': { $exists: true } });,Retrieve all documents from the 'toll_events' collection where 'rfid_tag' exists in 'response.event.identification'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.rfid_tag': { $exists: true } });,Find toll events with an existing 'rfid_tag' in the identification section.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $lt: 2 }, ""identifier.highway_id"": 999 });",Retrieve all toll events where the axle count is less than 2 and the highway ID is 999.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $lt: 2 }, ""identifier.highway_id"": 999 })",Retrieve documents from the 'toll_events' collection with an axle count under 2 and highway identifier 999.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': <criteria_highway_id>, 'identifier.lane_number': <criteria_lane_number> }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1, 'response.event.transaction.vehicle_class': 1, 'response.event.transaction.axle_count': 1, 'response.event.identification.number_plate': 1, 'response.event.identification.rfid_tag': 1 })","Retrieve records from 'toll_events' where highway_id and lane_number match specified criteria, including transaction amount, timestamp, vehicle class, axle count, number plate, and RFID tag."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': <highway_id>, 'identifier.lane_number': <lane_number> }, { 'response.event.transaction': 1, 'response.event.identification': 1 })","Retrieve entries from the 'toll_events' collection for a specific highway_id and lane_number, including transaction details and vehicle identification features."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H123"" })",Get all toll_events where the highway ID is 'H123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H123"" });",Find toll events with a highway ID of 'H123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gt: 10.00 } });",Get all toll events with a transaction amount greater than 10.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gt: 10.00 } });,Retrieve toll events with a transaction amount greater than 10.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.identification.number_plate"": ""ABC123"" });",Retrieve all toll_event documents where the vehicle's number plate is 'ABC123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.identification.number_plate"": ""ABC123"" });",Retrieve toll_events where the number plate is 'ABC123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'identifier.lane_number': 3 }).sort({ 'response.event.transaction.timestamp': -1 }),"Retrieve all records from the 'toll_events' collection where lane number is 3, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'identifier.lane_number': 3 }).sort({ 'response.event.transaction.timestamp': -1 });,"Retrieve toll events for lane number 3, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.axle_count': { $gte: 2 } } }, { $group: { _id: '$identifier.highway_id', totalTransactions: { $sum: 1 } } }])","Select from 'toll_events' where axle count is at least 2, grouping by highway ID and counting transactions."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.axle_count': { $gte: 2 } } }, { $group: { _id: '$identifier.highway_id', totalTransactions: { $sum: 1 } } }]);","Retrieve and count entries from 'toll_events' with at least 2 axles, grouped by highway ID."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalAmount: -1 } }]);","Group 'toll_events' by vehicle class from transaction data, sum the total amounts for each class, and sort the results in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalAmount: -1 } }])","Aggregate total transaction amounts by vehicle class from the 'toll_events' collection, sorted from highest to lowest."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date('2023-01-01'), $lt: new Date('2023-02-01') } } }, { $group: { _id: ""$identifier.highway_id"", avgTransactionAmount: { $avg: ""$response.event.transaction.amount"" } } }]);","Select all documents from 'toll_events' where transaction timestamps are between January 1 and January 31, 2023, grouping by highway_id to calculate the average transaction amount."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date('2023-01-01'), $lt: new Date('2023-02-01') } } }, { $group: { _id: ""$identifier.highway_id"", avgTransactionAmount: { $avg: ""$response.event.transaction.amount"" } } }]);","Get average transaction amount per highway from 'toll_events' where transaction timestamps are from January 1 to January 31, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $lookup: { from: 'toll_events', localField: 'identifier.highway_id', foreignField: 'identifier.highway_id', as: 'relatedEvents' } }, { $match: { relatedEvents: { $ne: [] } } }]);",Join the 'toll_events' collection with itself on highway_id and filter for documents with related events.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $lookup: { from: 'toll_events', localField: 'identifier.highway_id', foreignField: 'identifier.highway_id', as: 'relatedEvents' } }, { $match: { relatedEvents: { $ne: [] } } }])","Aggregate records from the 'toll_events' collection with related events sharing the same highway_id, including only those with associated events."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $lt: 5.00 } }).limit(10);,Retrieve the first ten documents from the 'toll_events' collection where the transaction amount is less than 5.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $lt: 5.00 } }).limit(10);,Get up to ten entries from 'toll_events' where the transaction amount is below 5.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.identification.rfid_tag': { $exists: true } } }, { $group: { _id: '$response.event.identification.rfid_tag', count: { $sum: 1 } } }])",Retrieve the count of documents in the 'toll_events' collection grouped by 'rfid_tag' where 'rfid_tag' exists.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.identification.rfid_tag': { $exists: true } } }, { $group: { _id: '$response.event.identification.rfid_tag', count: { $sum: 1 } } }]);",Count the unique 'rfid_tag' values in the 'toll_events' collection.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: { highway_id: ""$identifier.highway_id"", lane_number: ""$identifier.lane_number"" }, totalTransactions: { $sum: 1 }, avgAmount: { $avg: ""$response.event.transaction.amount"" } } }, { $sort: { totalTransactions: -1 } }])","Group toll events by highway_id and lane_number, counting transactions and averaging transaction amounts, then sort by transaction count in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: { highway_id: ""$identifier.highway_id"", lane_number: ""$identifier.lane_number"" }, totalTransactions: { $sum: 1 }, avgAmount: { $avg: ""$response.event.transaction.amount"" } } }, { $sort: { totalTransactions: -1 } }]);","Group the toll_events data by highway_id and lane_number, summing total transactions and calculating average transaction amount for each group, then sort by total transactions in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date('2023-01-01'), $lt: new Date('2023-02-01') } } }, { $group: { _id: null, totalRevenue: { $sum: ""$response.event.transaction.amount"" } } }]);","Retrieve total revenue from the 'toll_events' collection for transactions between January 1, 2023, and January 31, 2023, by summing the 'amount' field."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.timestamp': { $gte: new Date('2023-01-01'), $lt: new Date('2023-02-01') } } }, { $group: { _id: null, totalRevenue: { $sum: '$response.event.transaction.amount' } } }])","Aggregate total revenue from 'toll_events' for transactions between January 1, 2023, and January 31, 2023, by summing 'transaction.amount'."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": { $in: [""H123"", ""H456""] } }).sort({ ""response.event.transaction.timestamp"": 1 });","Retrieve all documents from the 'toll_events' collection where 'highway_id' is 'H123' or 'H456', sorted by transaction 'timestamp' in ascending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": { $in: [""H123"", ""H456""] } }).sort({ ""response.event.transaction.timestamp"": 1 });","Retrieve entries from the 'toll_events' collection where 'highway_id' is 'H123' or 'H456', sorted by the transaction timestamp in ascending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.vehicle_class': 1 } }, { $group: { _id: '$identifier.highway_id', totalAmount: { $sum: '$response.event.transaction.amount' } } }, { $sort: { totalAmount: -1 } }])","Retrieve all documents from the 'toll_events' collection where the vehicle class is 1, group by highway ID, calculate the total amount collected, and sort the results in descending order by total amount."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.vehicle_class': 1 } }, { $group: { _id: '$identifier.highway_id', totalAmount: { $sum: '$response.event.transaction.amount' } } }, { $sort: { totalAmount: -1 } }]);","Retrieve total amounts collected from transactions with a vehicle class of 1 from the 'toll_events' collection, grouped by highway ID, and sorted by total amount collected in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.countDocuments({ 'identifier.lane_number': 2 });,Count the total number of documents in the 'toll_events' collection where the lane number is 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.countDocuments({ 'identifier.lane_number': 2 });,Count the number of entries in the 'toll_events' collection with a lane number of 2.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.identification.number_plate"", totalTransactions: { $sum: 1 }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $match: { totalTransactions: { $gt: 5 } } }]);","Group toll events by vehicle number plate, calculate total transactions and total amount transacted, and include only those plates with more than five transactions."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.identification.number_plate"", totalTransactions: { $sum: 1 }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $match: { totalTransactions: { $gt: 5 } } }]);","Aggregate data from toll events by vehicle number plate, summing transactions and amounts, and retain those with more than five transactions."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $lt: 3 } }).sort({ ""response.event.transaction.timestamp"": -1 }).limit(5);","Retrieve the latest five entries from 'toll_events' where the axle count is less than 3, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.axle_count': { $lt: 3 } } }, { $sort: { 'response.event.transaction.timestamp': -1 } }, { $limit: 5 }])","Get up to five records from the 'toll_events' collection with transactions having fewer than 3 axles, sorted by transaction timestamp from newest to oldest."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': <SPECIFIED_HIGHWAY_ID>, 'identifier.lane_number': <SPECIFIED_LANE_NUMBER> }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1, 'response.event.transaction.vehicle_class': 1, 'response.event.transaction.axle_count': 1 })","Retrieve all documents from the 'toll_events' collection where 'highway_id' and 'lane_number' match specified values, including transaction amount, timestamp, vehicle class, and axle count."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': '<HIGHWAY_ID>', 'identifier.lane_number': <LANE_NUMBER> }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1, 'response.event.transaction.vehicle_class': 1, 'response.event.transaction.axle_count': 1 })","Retrieve entries from 'toll_events' with specific 'highway_id' and 'lane_number', including transaction amount, date, vehicle classification, and axle count."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": ""H1"" });",Retrieve all documents in the 'toll_events' collection where 'identifier.highway_id' is 'H1'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'identifier.highway_id': 'H1' }),Get entries from 'toll_events' with 'highway_id' set to 'H1'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gt: 100 } }),Retrieve all documents from the 'toll_events' collection where the transaction amount in the event exceeds 100.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.transaction.amount': { $gt: NumberDecimal('100.00') } });,Find toll event entries where the transaction amount is greater than 100.00.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.number_plate': 'ABC123' });,Get all records from the 'toll_events' collection where the number plate is 'ABC123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'response.event.identification.number_plate': 'ABC123' });,Retrieve toll_events with the number plate 'ABC123'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.lane_number"": 5 }).sort({ ""response.event.transaction.timestamp"": -1 });","Get all toll events with lane number 5, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.find({ 'identifier.lane_number': 5 }).sort({ 'response.event.transaction.timestamp': -1 });,"Retrieve toll event records where the lane number is 5, sorted by transaction timestamp in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.amount': { $lt: 50 } } }, { $group: { _id: '$identifier.highway_id', totalTransactions: { $sum: 1 } } }]);","Retrieve all records from 'toll_events' where the transaction amount is less than 50, grouped by highway ID, counting total transactions for each."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.amount"": { $lt: 50 } } }, { $group: { _id: ""$identifier.highway_id"", totalTransactions: { $sum: 1 } } }])",Retrieve the number of transactions for each highway in 'toll_events' where the transaction amount is under 50.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalAmount: -1 } }]);","Group the toll events by vehicle class and calculate the total amount for each, sorted in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalAmount: -1 } }]);","Sum amounts from 'toll_events' by vehicle class in transaction data, ordered by total amount descending."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.identification.rfid_tag': { $exists: true } } }, { $group: { _id: '$identifier.highway_id', averageAmount: { $avg: '$response.event.transaction.amount' } } }])","Retrieve all records from 'toll_events' where 'rfid_tag' exists in 'response.event.identification', grouped by 'highway_id' to calculate the average 'amount' for each group."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.identification.rfid_tag': { $exists: true } } }, { $group: { _id: '$identifier.highway_id', averageAmount: { $avg: '$response.event.transaction.amount' } } }]);",Get the average transaction amount for toll_events grouped by highway_id where rfid_tag exists in the response.event.identification.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: { highway: ""$identifier.highway_id"", lane: ""$identifier.lane_number"" }, totalAxles: { $sum: ""$response.event.transaction.axle_count"" }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $match: { totalAmount: { $gt: 1000 } } }])","Group 'toll_events' by highway ID and lane number, then compute the total axle count and amount for each group, and filter out groups with an amount over 1000."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: { highway: ""$identifier.highway_id"", lane: ""$identifier.lane_number"" }, totalAxles: { $sum: ""$response.event.transaction.axle_count"" }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $match: { totalAmount: { $gt: 1000 } } }])","Aggregate unique combinations of highway ID and lane number from 'toll_events', summing axle counts and transaction amounts, and return groups with total amounts over 1000."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find().sort({ ""response.event.transaction.timestamp"": 1 }).limit(10);",Retrieve the first 10 records from the 'toll_events' collection sorted by the 'timestamp' in ascending order.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find().sort({ ""response.event.transaction.timestamp"": 1 }).limit(10);","Retrieve up to 10 documents from the 'toll_events' collection, ordered by 'transaction.timestamp' in ascending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }]);","Select all transactions from 'toll_events' where the transaction timestamp is from January 1, 2023, to December 31, 2023, and group by vehicle class, summing the transaction amounts."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }]);","Retrieve records from 'toll_events' for transaction timestamps between January 1, 2023, and December 31, 2023, grouping by vehicle class and calculating the total amount for each class."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $lookup: { from: 'toll_events', localField: 'response.event.identification.number_plate', foreignField: 'response.event.identification.number_plate', as: 'eventsWithSamePlate' } }, { $match: { 'identifier.highway_id': 'H2' } }])",Find records in the 'toll_events' collection that have the same 'number_plate' and are on highway 'H2'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-05-01""), $lt: new Date(""2023-06-01"") } } }, { $group: { _id: ""$identifier.highway_id"", totalTransactions: { $sum: 1 }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }])","Retrieve all toll events where the transaction timestamp is between May 1, 2023, and June 1, 2023, and group by highway_id, counting transactions and summing toll amounts."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.timestamp': { $gte: new Date('2023-05-01'), $lt: new Date('2023-06-01') } } }, { $group: { _id: '$identifier.highway_id', totalTransactions: { $sum: 1 }, totalAmount: { $sum: '$response.event.transaction.amount' } } }]);","Get toll_events with transaction timestamps from May 1, 2023, to June 1, 2023, grouped by highway_id, counting transactions and summing total fees."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'response.event.transaction.axle_count': { $gte: 2, $lte: 6 } });","Select all documents from 'toll_events' where the axle count in the transaction is between 2 and 6, inclusive."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.axle_count"": { $gte: 2, $lte: 6 } });","Retrieve toll events with an axle count between 2 and 6, inclusive."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.identification.rfid_tag"": 1234567890 } }, { $project: { highway_id: ""$identifier.highway_id"", transaction_amount: ""$response.event.transaction.amount"" } }])",Select the highway ID and transaction amount from the 'toll_events' collection for records with RFID tag 1234567890.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.identification.rfid_tag"": 1234567890 } }, { $project: { highway_id: ""$identifier.highway_id"", transaction_amount: ""$response.event.transaction.amount"" } }]);",Retrieve the highway_id and transaction amount from 'toll_events' where the RFID tag is 1234567890.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $sort: { 'response.event.transaction.amount': -1 } }, { $group: { _id: null, largestTransaction: { $first: '$response.event.transaction.amount' } } }]);","Retrieve the largest transaction amount from the 'toll_events' collection, sorted in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $sort: { ""response.event.transaction.amount"": -1 } }, { $group: { _id: null, largestTransaction: { $first: ""$response.event.transaction.amount"" } } }]);",Find the highest transaction amount in the 'toll_events' collection.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", transactionCount: { $sum: 1 }, maxAmount: { $max: ""$response.event.transaction.amount"" } } }, { $match: { maxAmount: { $gt: 500 } } }])","Group documents in 'toll_events' by 'highway_id', count transactions, find the maximum transaction amount, and include only groups where the maximum amount exceeds 500."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", transactionCount: { $sum: 1 }, maxAmount: { $max: ""$response.event.transaction.amount"" } } }, { $match: { maxAmount: { $gt: 500 } } }])","Aggregate data from 'toll_events' by 'highway_id', counting transactions and finding the maximum transaction amount, then filter for maximum amounts greater than 500."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": { $in: [""H1"", ""H3""] } }).limit(5);",Get up to five toll event documents where the highway ID is 'H1' or 'H3'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""identifier.highway_id"": { $in: [""H1"", ""H3""] } }).limit(5);",Select up to five records from 'toll_events' where highway_id is 'H1' or 'H3'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-07-01"") } } }, { $group: { _id: ""$identifier.lane_number"", totalTransactions: { $sum: 1 } } }])","Retrieve documents from the 'toll_events' collection where the transaction timestamp is on or after July 1, 2023, grouped by lane number, counting total transactions for each lane."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-07-01"") } } }, { $group: { _id: ""$identifier.lane_number"", totalTransactions: { $sum: 1 } } }])","Find all toll events from July 1, 2023, onward, grouped by lane number with the total transaction count for each lane."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'response.event.transaction.axle_count': { $gt: 4 }, 'response.event.transaction.amount': { $gt: 10.00 } }, { 'response.event.transaction.vehicle_class': 1, 'response.event.identification.number_plate': 1 })","Retrieve all toll events where the vehicle's axle count is greater than 4 and the transaction amount exceeds 10.00, including vehicle class and number plate."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","{ $match: { 'response.event.transaction.axle_count': { $gt: 4 }, 'response.event.transaction.amount': { $gt: 10.00 } } }, $project: { 'response.event.transaction.vehicle_class': 1, 'response.event.identification.number_plate': 1 }","Find toll events where the axle count is greater than 4 and the transaction amount exceeds 10.00, including vehicle class and number plate details."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.amount"": { $gte: 10 } } }, { $group: { _id: ""$identifier.highway_id"", totalTransactions: { $sum: 1 }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }])","Retrieve all documents from the 'toll_events' collection where the transaction amount in the response event is at least 10, grouped by highway ID, with totals for transaction count and amount."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.amount': { $gte: 10 } } }, { $group: { _id: '$identifier.highway_id', totalTransactions: { $sum: 1 }, totalAmount: { $sum: '$response.event.transaction.amount' } } }])","Retrieve records from 'toll_events' with a transaction amount of 10 or more, grouped by highway ID, to calculate the total number of transactions and the sum of transaction amounts."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", avgAmount: { $avg: ""$response.event.transaction.amount"" } } }, { $sort: { avgAmount: -1 } }])","Group 'toll_events' by vehicle class, calculate the average transaction amount for each, and sort by average amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: '$response.event.transaction.vehicle_class', avgAmount: { $avg: '$response.event.transaction.amount' } } }, { $sort: { avgAmount: -1 } }])","Calculate the average amount spent per vehicle class in the 'toll_events' collection, sorted from highest to lowest average."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date('2023-01-01'), $lt: new Date('2024-01-01') } } }, { $group: { _id: ""$identifier.lane_number"", totalTransactions: { $sum: 1 }, avgAmount: { $avg: ""$response.event.transaction.amount"" } } }]);","Select records from the 'toll_events' collection where transaction timestamps are between January 1, 2023, and December 31, 2023, grouping by lane number to calculate the total number of transactions and average transaction amount."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date('2023-01-01'), $lt: new Date('2024-01-01') } } }, { $group: { _id: ""$identifier.lane_number"", totalTransactions: { $sum: 1 }, avgAmount: { $avg: ""$response.event.transaction.amount"" } } }]);",Retrieve the count of transactions and the average amount for each lane from the 'toll_events' collection for transaction timestamps in 2023.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.axle_count': { $gte: 2 } } }, { $group: { _id: '$response.event.identification.number_plate', totalAmount: { $sum: '$response.event.transaction.amount' } } }, { $sort: { totalAmount: -1 } }, { $limit: 10 }]);","Retrieve records from the 'toll_events' collection where the axle count is at least 2, group by number plate, calculate total amount per group, sort by total amount in descending order, and limit to the top 10 results."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.axle_count': { $gte: 2 } } }, { $group: { _id: '$response.event.identification.number_plate', totalAmount: { $sum: '$response.event.transaction.amount' } } }, { $sort: { totalAmount: -1 } }, { $limit: 10 }])","Query the 'toll_events' collection for entries with a transaction axle count of at least 2, group by number plate to sum transaction amounts, sort the sums in descending order, and limit the results to 10."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", totalTransactions: { $sum: 1 }, maxAmount: { $max: ""$response.event.transaction.amount"" } } }, { $match: { maxAmount: { $lt: 50 } } }])","Group toll events by highway ID, counting transactions and finding the maximum transaction amount, include groups with a maximum amount less than 50."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", totalTransactions: { $sum: 1 }, maxAmount: { $max: ""$response.event.transaction.amount"" } } }, { $match: { maxAmount: { $lt: 50 } } }]);","Group the records in the 'toll_events' collection by highway ID, summing transaction counts and identifying the maximum transaction amount, while including only groups with a maximum amount under 50."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01T00:00:00Z""), $lt: new Date(""2023-01-02T00:00:00Z"") } } }, { $group: { _id: ""$identifier.highway_id"", totalAmount: { $sum: ""$response.event.transaction.amount"" }, totalAxle: { $sum: ""$response.event.transaction.axle_count"" } } }]);","Retrieve all toll events from January 1, 2023, to January 2, 2023, grouped by highway ID, calculating total transaction amounts and axle counts for each."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.timestamp': { $gte: new Date('2023-01-01T00:00:00Z'), $lt: new Date('2023-01-02T00:00:00Z') } } }, { $group: { _id: '$identifier.highway_id', totalAmount: { $sum: '$response.event.transaction.amount' }, totalAxle: { $sum: '$response.event.transaction.axle_count' } } }])","Retrieve toll event records from January 1, 2023, to January 2, 2023, and group by highway ID to sum the transaction amounts and axle counts."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.amount': { $gt: 20 }, 'response.event.transaction.vehicle_class': 1 } }, { $group: { _id: '$response.event.identification.rfid_tag', totalAmount: { $sum: '$response.event.transaction.amount' } } }, { $sort: { totalAmount: -1 } }]);","Retrieve all toll_events where the transaction amount is greater than 20 and the vehicle class is 1, group by RFID tag, sum the amounts for each tag, and sort by total amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.amount"": { $gt: 20 }, ""response.event.transaction.vehicle_class"": 1 } }, { $group: { _id: ""$response.event.identification.rfid_tag"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalAmount: -1 } }]);","Retrieve toll events where transaction amounts exceed 20 for vehicle class 1, group by RFID tag, sum the amounts, and sort results by total amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: { highway_id: ""$identifier.highway_id"", lane_number: ""$identifier.lane_number"" }, totalTransactions: { $sum: 1 } } }, { $match: { totalTransactions: { $gte: 100 } } }]);","Group the records in the 'toll_events' collection by highway identifier and lane number, then count the total transactions for each group, including only those groups with at least 100 transactions."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: { highway_id: ""$identifier.highway_id"", lane_number: ""$identifier.lane_number"" }, totalTransactions: { $sum: 1 } } }, { $match: { totalTransactions: { $gte: 100 } } }])","Group 'toll_events' by highway ID and lane number, summing transactions, and show groups with at least 100 transactions."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" }, avgAxle: { $avg: ""$response.event.transaction.axle_count"" } } }, { $project: { vehicle_class: ""$_id"", totalAmount: 1, avgAxle: 1 } }, { $sort: { totalAmount: -1 } }]);","Group the 'toll_events' documents by 'vehicle_class' in 'transaction', summing 'amount' and averaging 'axle_count', then project these values sorted by total amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalAmount: { $sum: ""$response.event.transaction.amount"" }, avgAxle: { $avg: ""$response.event.transaction.axle_count"" } } }, { $project: { vehicle_class: ""$_id"", totalAmount: 1, avgAxle: 1 } }, { $sort: { totalAmount: -1 } }]);","Aggregate toll_events by vehicle class, summing the amount and averaging axle count, then display vehicle class, total amount, and average axle count, sorted by total amount in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", totalAmount: { $sum: ""$response.event.transaction.amount"" } } }]);",Aggregate total transaction amounts for each highway in the 'toll_events' collection by summing the 'amount' field.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.amount"": { $gt: 100 } } }, { $group: { _id: { highway_id: ""$identifier.highway_id"", lane_number: ""$identifier.lane_number"" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }]);","Retrieve toll events with a transaction amount greater than 100, group by highway ID and lane number, count events in each group, and sort groups by count in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.amount': { $gt: 100 } } }, { $group: { _id: { highway_id: '$identifier.highway_id', lane_number: '$identifier.lane_number' }, count: { $sum: 1 } } }, { $sort: { count: -1 } }])","Find records in the 'toll_events' collection where transaction amounts exceed 100, group by highway ID and lane number to count occurrences, and sort the results by count in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalTransactions: { $sum: 1 }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $project: { vehicle_class: ""$_id"", avgAmount: { $divide: [""$totalAmount"", ""$totalTransactions""] } } }]);","Group toll events by vehicle class, counting transactions and summing amounts, then project the vehicle class and average amount."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.vehicle_class"", totalTransactions: { $sum: 1 }, totalAmount: { $sum: ""$response.event.transaction.amount"" } } }, { $project: { vehicle_class: ""$_id"", avgAmount: { $divide: [""$totalAmount"", ""$totalTransactions""] } } }])","Aggregate the 'toll_events' documents by vehicle class, counting transactions and summing the total amount spent, then calculate the average amount per transaction for each vehicle class."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.timestamp': { $gte: new Date('2023-06-01T00:00:00Z'), $lt: new Date('2023-07-01T00:00:00Z') } } }, { $group: { _id: '$identifier.highway_id', transactionCount: { $sum: 1 }, totalRevenue: { $sum: '$response.event.transaction.amount' } } }]);","Retrieve all documents from the 'toll_events' collection where the transaction date is in June 2023, grouped by highway ID, counting transactions and summing the total revenue."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-06-01""), $lt: new Date(""2023-07-01"") } } }, { $group: { _id: ""$identifier.highway_id"", transactionCount: { $sum: 1 }, totalRevenue: { $sum: ""$response.event.transaction.amount"" } } }]);","Retrieve records from the 'toll_events' collection for June 2023, grouped by highway ID, to count transactions and sum revenue."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", avgAmount: { $avg: ""$response.event.transaction.amount"" } } }, { $match: { avgAmount: { $gt: 25 } } }]);","Group toll events by highway ID and calculate the average transaction amount, including only groups with an average above 25."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$identifier.highway_id"", avgAmount: { $avg: ""$response.event.transaction.amount"" } } }, { $match: { avgAmount: { $gt: 25 } } }]);","Calculate the average toll transaction amount by highway ID in the 'toll_events' collection, returning averages greater than 25."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.identification.number_plate"", totalTrips: { $sum: 1 }, totalSpent: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalSpent: -1 } }, { $limit: 5 }])","Group documents in the 'toll_events' collection by 'number_plate' from 'response.event.identification', calculating the total trips and total amount spent for each vehicle, then sort by total amount spent in descending order and limit to the top five results."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.identification.number_plate"", totalTrips: { $sum: 1 }, totalSpent: { $sum: ""$response.event.transaction.amount"" } } }, { $sort: { totalSpent: -1 } }, { $limit: 5 }])","Group the 'toll_events' by 'number_plate', summing trip counts and total expenditure, sort by total expenditure in descending order, and limit the results to five records."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'response.event.transaction.amount': { $lte: 15 }, 'response.event.transaction.vehicle_class': 2 } }, { $lookup: { from: 'toll_events', localField: 'response.event.identification.number_plate', foreignField: 'response.event.identification.number_plate', as: 'related_events' } }])","Select records from the 'toll_events' collection where the transaction amount is less than or equal to 15 and the vehicle class is 2, and join these records with other events having the same number plate."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { ""response.event.transaction.amount"": { $lte: 15 }, ""response.event.transaction.vehicle_class"": 2 } }, { $lookup: { from: ""toll_events"", localField: ""response.event.identification.number_plate"", foreignField: ""response.event.identification.number_plate"", as: ""linked_events"" } }])","Retrieve entries from the 'toll_events' collection where the transaction amount is 15 or less and the vehicle class is 2, also including events related to the same number plate."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.axle_count"", transactionCount: { $sum: 1 }, totalRevenue: { $sum: ""$response.event.transaction.amount"" } } }, { $match: { transactionCount: { $gte: 50 } } }])","Group toll events by axle count, counting transactions and summing revenue, only including groups with at least 50 transactions."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $group: { _id: ""$response.event.transaction.axle_count"", transactionCount: { $sum: 1 }, totalRevenue: { $sum: ""$response.event.transaction.amount"" } } }, { $match: { transactionCount: { $gte: 50 } } }]);","Count transactions and sum revenue by axle count in 'toll_events', returning results where transaction count is 50 or higher."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'response.event.transaction.axle_count': { $gt: 2 } }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1 })","Retrieve all toll events with an axle count greater than 2, showing the transaction amount and event timestamp."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'response.event.transaction.axle_count': { $gt: 2 } }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1 })","Retrieve records from the 'toll_events' collection for vehicles with more than 2 axles, showing the transaction amount and event timestamp."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({}),Retrieve all entries from the parking_events collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({}),Retrieve all documents from the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"" });",Get all records from 'parking_events' where 'identifier.parking_lot_id' is 'A1'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"" });",Retrieve all parking events with a parking lot identifier of 'A1'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $gte: 30 } });",Select all parking events with a duration of 30 minutes or more.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': { $gte: 30 } });,Get parking events with a duration of 30 minutes or more.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': 'XYZ123' });,Get all parking events where the vehicle number plate is 'XYZ123'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': 'XYZ123' }),Fetch parking events with a vehicle number plate of 'XYZ123'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": 2 })",Select all records from the 'parking_events' collection where the zone is 2.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": 2 });",Get parking events with a zone value of 2.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $gt: new Date(""2023-01-01"") } });","Retrieve all parking events where the entry time is after January 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $gt: new Date(""2023-01-01T00:00:00Z"") } });","Retrieve parking events with an entry time after January 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $lt: new Date('2023-12-31') } });,"Retrieve all records from the 'parking_events' collection where the exit time is before December 31, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.exit_time"": { $lt: new Date(""2023-12-31"") } })","Find parking events where the exit time is before December 31, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': { $lte: 1 } });,Retrieve all records from 'parking_events' where vehicle space occupied is less than or equal to one.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': { $lte: 1 } });,Retrieve parking_events where vehicles occupy one or fewer parking spaces.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $gt: 2000 } });,Retrieve documents from 'parking_events' where the vehicle's weight exceeds 2000 kilograms.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $gt: 2000 } });,Find parking events with a vehicle weight greater than 2000 kg.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'identifier.parking_lot_id': 'B2', 'identifier.zone': 3 });",Get all parking events where the parking lot ID is 'B2' and the zone is 3.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""B2"", ""identifier.zone"": 3 })",Find records in the 'parking_events' collection with a parking lot ID of 'B2' in zone 3.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": 60 }).sort({ ""response.event.entry_time"": -1 });","Retrieve all parking events with a duration of 60 minutes, sorted by entry time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': 60 }).sort({ 'response.event.entry_time': -1 }),"Retrieve records from 'parking_events' for events lasting 60 minutes, sorted from most recent to oldest entry time."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.number_plate"": { $regex: /^AB/ } });",Find all parking events where the vehicle's number plate starts with 'AB'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': { $regex: '^AB' } });,Find entries in the 'parking_events' collection where vehicle number plates start with 'AB'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $exists: true } });,Retrieve all parking events where the exit time is recorded.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $exists: true } });,Retrieve parking events with a recorded exit time.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-01-31"") } });","Retrieve all parking events with an entry time from January 1 to January 31, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'response.event.entry_time': { $gte: new Date('2023-01-01'), $lt: new Date('2023-01-31') } });","Retrieve parking events with entry times from January 1, 2023, to January 30, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""C3"", ""response.event.vehicle.space_occupied"": { $gte: 2 } });",Retrieve all parking events where the parking lot ID is 'C3' and at least 2 parking spaces are occupied.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""C3"", ""response.event.vehicle.space_occupied"": { $gte: 2 } });",Retrieve parking events with a parking lot ID of 'C3' and vehicles occupying 2 or more spaces.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.weight_kg"": { $gte: 1500, $lte: 2500 } });",Find all documents in the 'parking_events' collection where the vehicle's weight is between 1500 and 2500 kg.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.weight_kg"": { $gte: 1500, $lte: 2500 } });",Retrieve records from the 'parking_events' collection with vehicles weighing between 1500 kg and 2500 kg.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.number_plate"": ""LMN456"", ""identifier.zone"": 1 })",Retrieve parking events where the vehicle's number plate is 'LMN456' and the zone is 1.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.number_plate"": ""LMN456"", ""identifier.zone"": 1 })",Fetch parking events where the vehicle's number plate is 'LMN456' and the zone is 1.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $lte: 15 } }).limit(10);",Retrieve 10 parking events where the duration is 15 minutes or less.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $lte: 15 } }).limit(10);",Get up to 10 parking events with a duration of 15 minutes or less.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': 1 }).sort({ 'response.event.entry_time': 1 });,"Retrieve all parking event records from the 'parking_events' collection where the vehicle occupies one space, sorted by entry time in ascending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': 1 }).sort({ 'response.event.entry_time': 1 });,"Retrieve documents from the 'parking_events' collection where vehicles occupy one parking space, sorted by entry time."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": { $in: [""A1"", ""A2"", ""A3""] } });","Retrieve all records from 'parking_events' where the parking lot ID is 'A1', 'A2', or 'A3'."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'identifier.parking_lot_id': { $in: ['A1', 'A2', 'A3'] } });","Retrieve parking events with parking lot IDs 'A1', 'A2', or 'A3'."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'identifier.parking_lot_id': { $exists: true }, 'identifier.zone': { $exists: true } }, { 'response.event.entry_time': 1, 'response.event.exit_time': 1, 'response.event.duration_mins': 1, 'response.event.vehicle': 1 })","Retrieve all records from 'parking_events' where the parking lot ID and zone exist, including entry time, exit time, duration in minutes, and vehicle details like number plate, space occupied, and weight."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'identifier.parking_lot_id': <parking_lot_id>, 'identifier.zone': <zone> }, { 'response.event.entry_time': 1, 'response.event.exit_time': 1, 'response.event.duration_mins': 1, 'response.event.vehicle.number_plate': 1, 'response.event.vehicle.space_occupied': 1, 'response.event.vehicle.weight_kg': 1 })","Retrieve entry and exit times, duration in minutes, vehicle number plate, occupied space, and weight for parking events filtered by parking lot ID and zone."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"" });",Retrieve all parking events for the parking lot with identifier 'A1'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"" })",Get documents from the 'parking_events' collection with a parking lot ID of 'A1'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $lt: 30 } });",Get all parking events where duration is under 30 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $lt: 30 } });",Find parking events with a duration of less than 30 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': 'XYZ-1234' });,Get all parking events where the vehicle's number plate is 'XYZ-1234'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.number_plate"": ""XYZ-1234"" });",Find parking events with a vehicle that has the number plate 'XYZ-1234'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.exit_time"": { $exists: true } }).limit(10);",Get the first ten records from 'parking_events' where 'exit_time' is present in the 'event' object of 'response'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $exists: true } }).limit(10);,Find up to ten documents in the 'parking_events' collection with an 'exit_time' in the event record.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": 5, ""response.event.duration_mins"": { $gt: 60 } })",Retrieve all records from 'parking_events' where the zone is 5 and the parking duration exceeds 60 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": 5, ""response.event.duration_mins"": { $gt: 60 } });",Retrieve parking events in zone 5 with a duration greater than 60 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': { $gte: 2 } });,Retrieve all parking events where the vehicle occupies 2 or more spaces.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': { $gte: 2 } });,Retrieve records from 'parking_events' where vehicles occupy 2 or more parking spaces.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.entry_time': { $gte: new Date('2023-01-01') } });,"Retrieve all parking events with an entry time on or after January 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $gte: new Date(""2023-01-01"") } });","Retrieve parking events with entry times on or after January 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.weight_kg"": { $lte: 1500 } }).sort({ ""response.event.entry_time"": 1 });","Select all parking events where the vehicle's weight is 1500 kg or less, sorted by entry time in ascending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $lte: 1500 } }).sort({ 'response.event.entry_time': 1 }),"Retrieve parking events for vehicles weighing 1500 kg or less, sorted by entry time from earliest to latest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $lt: new Date(""2023-12-31"") }, ""response.event.exit_time"": { $gte: new Date(""2023-12-01"") } });","Select all records from the 'parking_events' collection where the entry time is before December 31, 2023, and the exit time is on or after December 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $lt: new Date(""2023-12-31"") }, ""response.event.exit_time"": { $gte: new Date(""2023-12-01"") } })","Find parking events where the entry time is before December 31, 2023, and the exit time is on or after December 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""B2"", ""response.event.vehicle.number_plate"": { $regex: /^ABC-/ } });",Retrieve all entries in 'parking_events' where the parking lot ID is 'B2' and the vehicle number plate starts with 'ABC-'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""B2"", ""response.event.vehicle.number_plate"": { $regex: /^ABC-/ } })",Retrieve parking events with a lot ID of 'B2' and vehicles whose number plate starts with 'ABC-'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.countDocuments({ ""identifier.zone"": 3 });",Count the parking events where the zone identifier is 3.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.countDocuments({ 'identifier.zone': 3 });,Count the number of entries in the 'parking_events' collection with a zone value of 3.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": 45 }).sort({ ""response.event.entry_time"": -1 });","Retrieve all parking events with a duration of 45 minutes, sorted by entry time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": 45 }).sort({ ""response.event.entry_time"": -1 })","Get parking events with a duration of 45 minutes, sorted by entry time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"", ""response.event.vehicle.space_occupied"": { $gt: 1 } }).limit(5);",Select up to five documents from 'parking_events' where the parking lot ID is 'A1' and the vehicle occupies more than one parking space.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"", ""response.event.vehicle.space_occupied"": { $gt: 1 } }).limit(5);",Get up to five parking events for lot ID 'A1' where vehicles occupy more than one space.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $exists: true } }).skip(5).limit(10);,"Retrieve 10 parking event documents from the 'parking_events' collection where exit time is present, skipping the first 5 records."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.exit_time"": { $exists: true } }).skip(5).limit(10);","Retrieve 10 parking event records from the 'parking_events' collection that have an exit time, skipping the first 5 results."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $gt: 2000 } });,Retrieve all parking events where the vehicle weight is over 2000 kilograms.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $gt: 2000 } });,Get documents from the 'parking_events' collection where the vehicle's weight is over 2000 kg.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $gte: new Date(""2023-06-01""), $lte: new Date(""2023-08-31"") } });","Retrieve all parking events where the entry time is between June 1, 2023, and August 31, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $gte: new Date(""2023-06-01""), $lte: new Date(""2023-08-31"") } });","Retrieve parking events with an entry time from June 1, 2023, to August 31, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $gte: 120, $lte: 180 } });",Retrieve all parking events with a duration between 120 and 180 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $gte: 120, $lte: 180 } });",Fetch parking events with a duration between 120 and 180 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""C3"" }).sort({ ""response.event.exit_time"": -1 });","Retrieve all entries from 'parking_events' where the parking lot ID is 'C3', sorted by exit time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""C3"" }).sort({ ""response.event.exit_time"": -1 });","Get parking_event documents with parking lot ID 'C3', sorted by exit time from latest to earliest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.number_plate"": { $exists: true } }).limit(20);",Select the first 20 records from the 'parking_events' collection where the vehicle number plate exists.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': { $exists: true } }).limit(20);,Retrieve up to 20 parking events that have a vehicle number plate.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": { $in: [1, 2, 3] } });","Retrieve all parking events where the zone is 1, 2, or 3."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": { $in: [1, 2, 3] } });","Retrieve parking events from the 'parking_events' collection for zones 1, 2, or 3."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'identifier.parking_lot_id': '<SPECIFIC_PARKING_LOT_ID>' }, { 'response.event.entry_time': 1, 'response.event.exit_time': 1, 'response.event.vehicle.number_plate': 1, 'response.event.vehicle.weight_kg': 1 })","Retrieve parking events from a specific parking lot, including entry and exit times as well as the vehicle's number plate and weight."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'identifier.parking_lot_id': 'A1' });,Retrieve all parking events where the parking lot ID is 'A1'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"" });",Retrieve all parking events for the parking lot with ID 'A1'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': { $gt: 60 } });,Fetch documents from 'parking_events' where parking duration is over 60 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': { $gt: 60 } });,Retrieve parking events with a duration exceeding 60 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find().sort({ 'response.event.entry_time': 1 });,Retrieve all parking events sorted by entry time in ascending order.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find().sort({ ""response.event.entry_time"": 1 });",Retrieve all parking events sorted by entry time in ascending order.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.weight_kg"": { $lt: 1500 } });",Find all parking events where the vehicle's weight is less than 1500 kg.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.weight_kg"": { $lt: 1500 } })",Retrieve parking events with vehicles weighing less than 1500 kg.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'identifier.zone': 2 } }, { $group: { _id: '$identifier.parking_lot_id', totalEntries: { $sum: 1 } } } ])",Select parking events with zone 2 and count the entries for each parking lot ID.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { ""identifier.zone"": 2 } }, { $group: { _id: ""$identifier.parking_lot_id"", totalEntries: { $sum: 1 } } }])","Retrieve all parking events in zone 2 and group them by parking lot ID, counting total entries for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: null, averageDuration: { $avg: ""$response.event.duration_mins"" } } } ]);",Calculate the average parking duration in minutes from all events in the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: null, avgDuration: { $avg: ""$response.event.duration_mins"" } } }])",Calculate the average duration of parking events in minutes from the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.entry_time': { $gte: new Date('2023-01-01'), $lt: new Date('2024-01-01') } } }, { $group: { _id: '$identifier.parking_lot_id', avgDuration: { $avg: '$response.event.duration_mins' } } }]);","Retrieve parking events from the 'parking_events' collection where the entry time is between January 1, 2023, and December 31, 2023, grouped by parking lot ID, calculating the average duration of parking in minutes for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.entry_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: ""$identifier.parking_lot_id"", avgDuration: { $avg: ""$response.event.duration_mins"" } } } ]);","Retrieve average parking duration in minutes for events between January 1, 2023, and December 31, 2023, grouped by parking lot ID."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.number_plate"": ""XYZ 1234"" });",Get all parking events for vehicles with the number plate 'XYZ 1234'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': 'XYZ 1234' });,Get records from 'parking_events' where the vehicle number plate is 'XYZ 1234'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.updateMany({ 'identifier.zone': 1 }, { $set: { 'response.event.duration_mins': 30 } });",Update all parking events where the zone is 1 to set the event duration to 30 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.updateMany({ ""identifier.zone"": 1 }, { $set: { ""response.event.duration_mins"": 30 } });",Update all records in 'parking_events' where the zone is 1 to set the event duration to 30 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.exit_time"": { $exists: true } } }, { $project: { _id: 0, parkingLotId: ""$identifier.parking_lot_id"", duration: ""$response.event.duration_mins"" } } ]);","Select parking events with an exit time, showing only the parking lot identifier and duration in minutes."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.exit_time': { $exists: true } } }, { $project: { _id: 0, parkingLotId: '$identifier.parking_lot_id', duration: '$response.event.duration_mins' } }]);",Retrieve the parking lot identifiers and event durations in minutes from the 'parking_events' collection for records that have an exit time.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.parking_lot_id"", totalWeight: { $sum: ""$response.event.vehicle.weight_kg"" } } }, { $sort: { totalWeight: -1 } }])","Group parking events by parking lot identifier, calculate the total weight of vehicles for each lot, and sort the results in descending order by total weight."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", totalWeight: { $sum: ""$response.event.vehicle.weight_kg"" } } }, { $sort: { totalWeight: -1 } } ])","Aggregate data from 'parking_events' by parking lot ID, summing vehicle weights, and sort by total weight in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.countDocuments({ ""response.event.entry_time"": { $lt: new Date(""2023-06-01"") } });","Count all parking events with an entry time before June 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.countDocuments({ ""response.event.entry_time"": { $lt: new Date(""2023-06-01"") } });","Count the total entries in the 'parking_events' collection with an entry time before June 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.duration_mins': { $gt: 15 } } }, { $group: { _id: '$identifier.parking_lot_id', count: { $sum: 1 } } }])","Count all parking events where the duration is over 15 minutes, grouped by parking lot identifier."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.duration_mins"": { $gt: 15 } } }, { $group: { _id: ""$identifier.parking_lot_id"", count: { $sum: 1 } } } ]);","Get counts of parking events longer than 15 minutes, grouped by parking lot identifier."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.exit_time"": { $exists: true } }).sort({ ""response.event.exit_time"": -1 }).limit(10);","Get the ten most recent parking events with recorded exit times, sorted by exit time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $exists: true } }).sort({ 'response.event.exit_time': -1 }).limit(10);,"Retrieve up to 10 parking events that have an exit time, sorted from latest to earliest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: { parkingLotId: ""$identifier.parking_lot_id"", zone: ""$identifier.zone"" }, avgDuration: { $avg: ""$response.event.duration_mins"" } } } ]);","Group parking events by parking lot ID and zone, calculating the average duration in minutes for each group."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: { parkingLotId: ""$identifier.parking_lot_id"", zone: ""$identifier.zone"" }, avgDuration: { $avg: ""$response.event.duration_mins"" } } } ]);",Calculate the average duration of parking events in minutes for each unique parking lot ID and zone from the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': { $gte: 2 } }).limit(5);,Retrieve up to five parking events where the vehicle's space occupied is at least two.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.space_occupied"": { $gte: 2 } }).limit(5);",Find up to five parking events where vehicles occupy two or more spaces.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $lte: new Date(""2023-07-01"") } }).sort({ ""response.event.exit_time"": -1 });","Retrieve all parking events where the entry time is on or before July 1, 2023, and order the results by exit time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $lte: new Date(""2023-07-01"") } }).sort({ ""response.event.exit_time"": -1 });","Retrieve records from the 'parking_events' collection with entry times before or on July 1, 2023, sorted by exit time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.vehicle.weight_kg': { $gt: 2000 } } }, { $project: { parkingLot: '$identifier.parking_lot_id', duration: '$response.event.duration_mins', weight: '$response.event.vehicle.weight_kg' } } ]);","Select the parking lot ID, event duration in minutes, and vehicle weight from 'parking_events', where the vehicle weight is greater than 2000 kg."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.vehicle.weight_kg': { $gt: 2000 } } }, { $project: { parkingLot: '$identifier.parking_lot_id', duration: '$response.event.duration_mins', weight: '$response.event.vehicle.weight_kg' } } ])","From the 'parking_events' collection, retrieve the parking lot ID, event duration in minutes, and vehicle weight for records where the weight exceeds 2000 kg."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.exit_time"": { $ne: null } } }, { $group: { _id: ""$identifier.parking_lot_id"", totalDuration: { $sum: ""$response.event.duration_mins"" } } } ])","Retrieve all documents from the 'parking_events' collection where exit time is present, and group by parking lot ID to sum the total duration in minutes for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.exit_time': { $ne: null } } }, { $group: { _id: '$identifier.parking_lot_id', totalDuration: { $sum: '$response.event.duration_mins' } } } ])","Find parking events with an exit time, grouped by parking lot ID, and calculate the total duration in minutes for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': { $gt: 60 } });,Retrieve all parking events where the duration exceeds 60 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': { $gt: 60 } });,Retrieve parking events with a duration longer than one hour.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A123"" }).sort({ ""response.event.entry_time"": 1 });","Retrieve all entries from the 'parking_events' collection where the parking lot ID is 'A123', and sort by entry time in ascending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A123"" }).sort({ ""response.event.entry_time"": 1 });","Retrieve parking events for parking lot ID 'A123', sorted by entry time in ascending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.exit_time': { $exists: true } } }, { $group: { _id: '$identifier.parking_lot_id', avgDuration: { $avg: '$response.event.duration_mins' } } }])","Get all parking events with recorded exit times and calculate the average duration in minutes, grouped by parking lot identifier."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.exit_time': { $exists: true } } }, { $group: { _id: '$identifier.parking_lot_id', avgDuration: { $avg: '$response.event.duration_mins' } } }])",Retrieve records from the 'parking_events' collection with an exit time and calculate the average parking duration in minutes for each parking lot.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.entry_time': { $lt: new Date('2023-01-01') } } }, { $group: { _id: null, totalVehicles: { $sum: 1 } } } ])","Count all parking events with an entry time before January 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.countDocuments({ 'response.event.vehicle.number_plate': 'XYZ-123' });,Count the parking events where the vehicle's number plate is 'XYZ-123'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.countDocuments({ 'response.event.vehicle.number_plate': 'XYZ-123' });,Count the records in the 'parking_events' collection for vehicles with the number plate 'XYZ-123'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", totalWeight: { $sum: ""$response.event.vehicle.weight_kg"" } } }, { $match: { totalWeight: { $gt: 5000 } } } ])","Group parking events by zone, calculate total vehicle weight in each zone, and filter for zones with total weight over 5000 kg."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.zone"", totalWeight: { $sum: ""$response.event.vehicle.weight_kg"" } } }, { $match: { totalWeight: { $gt: 5000 } } }])","Aggregate vehicle weights from the 'parking_events' collection by zone, keeping only zones with a total weight greater than 5000 kilograms."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.duration_mins': { $lte: 30 } }).sort({ 'response.event.entry_time': -1 }).limit(10);,"Retrieve up to 10 parking events where the duration is 30 minutes or less, sorted by entry time from recent to oldest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $lte: 30 } }).sort({ ""response.event.entry_time"": -1 }).limit(10);","Retrieve up to 10 records from 'parking_events' where event duration is 30 minutes or less, sorted by entry time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.duration_mins': { $gt: 120 } } }, { $project: { parkingLot: '$identifier.parking_lot_id', entryTime: '$response.event.entry_time', duration: '$response.event.duration_mins' } }])","Retrieve the parking lot identifier, entry time, and duration in minutes from 'parking_events' where the duration is greater than 120 minutes."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.duration_mins': { $gt: 120 } } }, { $project: { parkingLot: '$identifier.parking_lot_id', entryTime: '$response.event.entry_time', duration: '$response.event.duration_mins' } }])","Retrieve the parking lot ID, entry time, and duration (in minutes) from the 'parking_events' collection for events with a duration greater than 120 minutes."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Count and group parking events by parking lot identifier in the 'parking_events' collection, then sort the results in descending order by count."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.parking_lot_id"", total_events: { $sum: 1 } } }, { $sort: { total_events: -1 } }])","Aggregate the total number of events per parking lot in the 'parking_events' collection, sorting the results from highest to lowest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": 5, ""response.event.vehicle.space_occupied"": { $gt: 1 } });",Select all entries from the 'parking_events' collection where the zone is 5 and the number of parking spaces occupied is greater than 1.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.zone"": 5, ""response.event.vehicle.space_occupied"": { $gt: 1 } });",Retrieve documents from the 'parking_events' collection where the zone is 5 and vehicles occupy more than one parking space.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.exit_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-02-01"") } } }, { $group: { _id: ""$identifier.parking_lot_id"", totalDuration: { $sum: ""$response.event.duration_mins"" } } } ]);","Retrieve parking events from the 'parking_events' collection where vehicle exit times are between January 1, 2023, and February 1, 2023, and group by parking lot ID to calculate total parking duration in minutes for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.exit_time': { $gte: new Date('2023-01-01'), $lt: new Date('2023-02-01') } } }, { $group: { _id: '$identifier.parking_lot_id', totalDuration: { $sum: '$response.event.duration_mins' } } }])","Find parking events with an exit time from January 1, 2023, to January 31, 2023, and calculate total parking duration in minutes for each parking lot ID."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $lt: 1500 } }).sort({ 'response.event.exit_time': 1 }).limit(5);,"Retrieve the first five documents from the 'parking_events' collection where the vehicle weight is under 1500 kg, sorted by exit time in ascending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.vehicle.weight_kg"": { $lt: 1500 } }).sort({ ""response.event.exit_time"": 1 }).limit(5);","Retrieve five records from the 'parking_events' collection for vehicles under 1500 kg, sorted by exit time from earliest to latest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.entry_time"": { $lte: new Date(""2023-03-01"") } })","Retrieve entries from the 'parking_events' collection that occurred on or before March 1, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", minEntry: { $min: ""$response.event.entry_time"" }, maxExit: { $max: ""$response.event.exit_time"" } } } ]);",Group parking events by parking lot ID and calculate the earliest entry and latest exit time for each lot.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", minEntry: { $min: ""$response.event.entry_time"" }, maxExit: { $max: ""$response.event.exit_time"" } } } ]);",Group parking events by parking lot ID to find the minimum entry time and maximum exit time for each lot.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.exit_time"": { $exists: true } }).sort({ ""response.event.exit_time"": -1 }).limit(3);","Retrieve the top three parking event documents with an exit time, sorted by exit time in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.exit_time': { $exists: true } }).sort({ 'response.event.exit_time': -1 }).limit(3);,"Get the three most recent parking events with a defined exit time, ordered from newest to oldest."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", totalWeight: { $sum: ""$response.event.vehicle.weight_kg"" } } }, { $match: { totalWeight: { $gte: 2000 } } } ]);","Group parking events by zone and calculate the total vehicle weight for each zone, including only those with a total weight of 2000 kilograms or more."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.zone"", weightSum: { $sum: ""$response.event.vehicle.weight_kg"" } } }, { $match: { weightSum: { $gte: 2000 } } }])","Aggregate vehicle weights in the 'parking_events' collection by zone, returning only zones with a total weight of at least 2000 kilograms."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.countDocuments({ 'response.event.duration_mins': { $gte: 45, $lte: 90 } });",Count parking events with a duration between 45 and 90 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $gte: 45, $lte: 90 } }).count();",Count the number of records in the 'parking_events' collection with event durations between 45 and 90 minutes.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.vehicle.space_occupied"": { $gte: 2 } } }, { $group: { _id: ""$identifier.parking_lot_id"", totalEvents: { $sum: 1 } } } ]);","Select all parking events where the vehicle occupies 2 or more spaces, grouped by parking lot ID, counting the total events per lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.vehicle.space_occupied': { $gte: 2 } } }, { $group: { _id: '$identifier.parking_lot_id', totalEvents: { $sum: 1 } } } ])","Filter events in 'parking_events' where vehicles occupy at least 2 spaces, and group by parking lot ID to count total events per lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.exit_time': { $gte: new Date('2023-01-01') } } }, { $project: { number_plate: '$response.event.vehicle.number_plate', duration: '$response.event.duration_mins' } }])","Retrieve all parking events where the exit time is on or after January 1, 2023, and return the vehicle's number plate and the event duration in minutes."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.exit_time"": { $gte: new Date(""2023-01-01"") } }, { ""response.event.vehicle.number_plate"": 1, ""response.event.duration_mins"": 1 })","Retrieve records from the 'parking_events' collection where the exit time is on or after January 1, 2023, and show the vehicle's number plate and parking duration in minutes."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.duration_mins': { $gt: 60 } } }, { $group: { _id: '$identifier.parking_lot_id', total_duration: { $sum: '$response.event.duration_mins' } } } ])","Select parking events with a duration over 60 minutes, grouped by parking lot identifier, calculating the total duration for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.duration_mins"": { $gt: 60 } } }, { $group: { _id: ""$identifier.parking_lot_id"", total_duration: { $sum: ""$response.event.duration_mins"" } } } ]);","Find records in 'parking_events' where event duration exceeds 60 minutes, and group by parking lot ID to get total duration for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.parking_lot_id"", avg_weight: { $avg: ""$response.event.vehicle.weight_kg"" } } }, { $match: { avg_weight: { $gt: 2000 } } }])","Group parking events by parking lot identifier and calculate the average vehicle weight, including only lots where the average exceeds 2000 kg."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", avg_weight: { $avg: ""$response.event.vehicle.weight_kg"" } } }, { $match: { avg_weight: { $gt: 2000 } } } ]);","Aggregate the average weight of vehicles in the 'parking_events' collection by parking lot IDs, and select those lots with an average weight exceeding 2000 kg."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.entry_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: { $dateToString: { format: ""%Y-%m"", date: ""$response.event.entry_time"" } }, total_vehicles: { $sum: 1 } } } ]); ","Count the total number of vehicles parked in the 'parking_events' collection for entry times in 2023, grouped by month."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.entry_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: { $dateToString: { format: ""%Y-%m"", date: ""$response.event.entry_time"" } }, total_vehicles: { $sum: 1 } } } ]);","Count the number of vehicles in the 'parking_events' collection with entry times in 2023, grouping by month and year."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", total_space: { $sum: ""$response.event.vehicle.space_occupied"" } } }, { $sort: { total_space: -1 } } ])","Group parking events by zone, calculating the total space occupied by vehicles for each zone, and sort the results in descending order of total space."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", total_space: { $sum: ""$response.event.vehicle.space_occupied"" } } }, { $sort: { total_space: -1 } } ])","Aggregate the 'parking_events' collection by zone, summing the occupied space by vehicles and order zones by the total space in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $unwind: ""$response.event.vehicle"" }, { $group: { _id: ""$response.event.vehicle.number_plate"", total_duration: { $sum: ""$response.event.duration_mins"" } } }, { $sort: { total_duration: -1 } }, { $limit: 5 } ])","Unwind the parking events to access each vehicle's details, group by number plate, sum the total duration in minutes, sort in descending order, and limit the results to the top five."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $unwind: ""$response.event.vehicle"" }, { $group: { _id: ""$response.event.vehicle.number_plate"", total_duration: { $sum: ""$response.event.duration_mins"" } } }, { $sort: { total_duration: -1 } }, { $limit: 5 } ])","From the 'parking_events' collection, list the five vehicles with the longest total parking durations, grouped by vehicle number plate."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.vehicle.space_occupied"": { $gt: 2 } } }, { $group: { _id: ""$identifier.parking_lot_id"", total_entries: { $sum: 1 } } }, { $sort: { total_entries: -1 } } ])","Retrieve records from 'parking_events' where 'space_occupied' in vehicle is greater than 2, group by 'parking_lot_id', count entries for each lot, and sort by total entries in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.vehicle.space_occupied': { $gt: 2 } } }, { $group: { _id: '$identifier.parking_lot_id', total_entries: { $sum: 1 } } }, { $sort: { total_entries: -1 } }])","Fetch records from 'parking_events' where vehicles occupy more than 2 spaces, group by 'parking_lot_id' to sum the total entries per lot, and sort by total entries in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", average_duration: { $avg: ""$response.event.duration_mins"" } } }, { $match: { average_duration: { $gte: 30 } } } ])","Group parking events by zone and calculate the average duration in minutes, including only zones with an average duration of at least 30 minutes."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", average_duration: { $avg: ""$response.event.duration_mins"" } } }, { $match: { average_duration: { $gte: 30 } } } ])","Aggregate parking events by zone identifier to find average duration in minutes, selecting zones with an average duration of 30 minutes or more."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.exit_time"": { $gte: new Date(""2023-06-01T00:00:00Z""), $lt: new Date(""2023-07-01T00:00:00Z"") } } }, { $group: { _id: ""$identifier.parking_lot_id"", count: { $sum: 1 } } } ])","Retrieve parking event records where the exit time is between June 1 and June 30, 2023, and count the events for each parking lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.exit_time"": { $gte: new Date(""2023-06-01""), $lt: new Date(""2023-06-30T00:00:00Z"") } } }, { $group: { _id: ""$identifier.parking_lot_id"", count: { $sum: 1 } } } ])","Count the number of parking events for each parking lot where the exit time is between June 1, 2023, and June 30, 2023."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: null, max_duration: { $max: ""$response.event.duration_mins"" } } }, { $project: { _id: 0, max_duration: 1 } } ])",Calculate the maximum duration in minutes from all parking events in the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: null, max_duration: { $max: ""$response.event.duration_mins"" } } }, { $project: { _id: 0, max_duration: 1 } }])","Find the maximum duration in minutes of parking events in the 'parking_events' collection, excluding the identifier."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.duration_mins': { $lt: 5 } } }, { $group: { _id: '$response.event.vehicle.number_plate', short_stays: { $sum: 1 } } }, { $sort: { short_stays: -1 } }])","Retrieve all parking events where the duration is under 5 minutes, group by vehicle number plate, count the occurrences, and sort by count in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.duration_mins': { $lt: 5 } } }, { $group: { _id: '$response.event.vehicle.number_plate', short_stays: { $sum: 1 } } }, { $sort: { short_stays: -1 } } ])","Get records from 'parking_events' with event durations under 5 minutes, group by vehicle number plate to count short stays, and sort the results by count in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.parking_lot_id"", avg_space: { $avg: ""$response.event.vehicle.space_occupied"" } } }, { $match: { avg_space: { $gte: 3 } } }])","Group parking events by parking lot ID and calculate the average space occupied by vehicles, selecting parking lots with an average space occupied of at least 3."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", avg_space: { $avg: ""$response.event.vehicle.space_occupied"" } } }, { $match: { avg_space: { $gte: 3 } } } ])","Calculate the average number of parking spaces occupied per vehicle for each parking lot, including only lots with an average of 3 or more spaces occupied."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.duration_mins': { $gt: 20 }, 'response.event.vehicle.weight_kg': { $lt: 1500 } } }, { $project: { parking_lot_id: '$identifier.parking_lot_id', zone: '$identifier.zone', duration: '$response.event.duration_mins', weight: '$response.event.vehicle.weight_kg' } } ]);","Retrieve the parking lot ID, zone, duration in minutes, and vehicle weight from 'parking_events' where duration is over 20 minutes and weight is under 1500 kilograms."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.duration_mins': { $gt: 20 }, 'response.event.vehicle.weight_kg': { $lt: 1500 } } }, { $project: { parking_lot_id: '$identifier.parking_lot_id', zone: '$identifier.zone', duration: '$response.event.duration_mins', weight: '$response.event.vehicle.weight_kg' } }])","Select the parking lot ID, zone, event duration, and vehicle weight from the 'parking_events' collection for entries with a duration over 20 minutes and a vehicle weight under 1500 kg."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { ""response.event.entry_time"": { $lt: new Date(Date.now() - 604800000) } } }, { $group: { _id: ""$identifier.parking_lot_id"", total_revenue: { $sum: { $multiply: [""$response.event.duration_mins"", 2] } } } } ]);","Retrieve parking events from the 'parking_events' collection where the entry time was more than seven days ago, grouped by parking lot ID with total revenue calculated as duration in minutes multiplied by two."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $match: { 'response.event.entry_time': { $lt: new Date(Date.now() - 604800000) } } }, { $group: { _id: '$identifier.parking_lot_id', total_revenue: { $sum: { $multiply: ['$response.event.duration_mins', 2] } } } } ])","Retrieve parking events with an entry time earlier than a week ago, grouped by parking lot ID, calculating total revenue as duration in minutes multiplied by two."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.vehicle.space_occupied': { $gt: 2 }, 'response.event.duration_mins': { $gte: 1 } } }, { $project: { parking_lot_id: '$identifier.parking_lot_id', zone: '$identifier.zone', duration: '$response.event.duration_mins', vehicle_space: '$response.event.vehicle.space_occupied' } }])","Retrieve parking lot ID, zone, duration in minutes, and space occupied by vehicles from 'parking_events' where space occupied is greater than 2 and duration is at least 1 minute."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $match: { 'response.event.vehicle.space_occupied': { $gt: 2 }, 'response.event.duration_mins': { $gte: 1 } } }, { $project: { parking_lot_id: '$identifier.parking_lot_id', zone: '$identifier.zone', duration: '$response.event.duration_mins', vehicle_space: '$response.event.vehicle.space_occupied' } }])","From the 'parking_events' collection, retrieve the parking lot identifier, zone, duration in minutes, and occupied vehicle space for entries where the vehicle space exceeds 2 and the duration is at least 1 minute."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: '$identifier.parking_lot_id', event_count: { $sum: 1 } } } ])",Count the number of parking events for each parking lot ID in the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: '$identifier.parking_lot_id', event_count: { $sum: 1 } } }, { $project: { lot_id: '$_id', event_count: 1 } } ]);",Count the total number of events for each parking lot in the 'parking_events' collection.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.zone"", total_weight: { $sum: ""$response.event.vehicle.weight_kg"" } } } ]);",Group parking events by zone and calculate the total weight of vehicles in each zone.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.zone"", total_weight: { $sum: ""$response.event.vehicle.weight_kg"" } } }])","Sum the vehicle weights in the 'parking_events' collection, grouped by zone."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $sort: { ""response.event.exit_time"": -1 } }, { $group: { _id: ""$identifier.parking_lot_id"", latest_exit: { $first: ""$response.event.exit_time"" } } } ])",Sort parking events by exit time in descending order and group by parking lot identifier to retrieve the latest exit time for each facility.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $sort: { 'response.event.exit_time': -1 } }, { $group: { _id: '$identifier.parking_lot_id', latest_exit: { $first: '$response.event.exit_time' } } }])","Sort parking events by exit time from newest to oldest, then group by parking lot identifier, extracting the latest exit time for each lot."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", unique_vehicles: { $addToSet: ""$response.event.vehicle.number_plate"" } } }, { $project: { lot_id: ""$_id"", unique_vehicle_count: { $size: ""$unique_vehicles"" } } } ])",Group parking events by parking lot ID and count the unique vehicle number plates for each lot.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([ { $group: { _id: ""$identifier.parking_lot_id"", unique_vehicles: { $addToSet: ""$response.event.vehicle.number_plate"" } } }, { $project: { lot_id: ""$_id"", unique_vehicle_count: { $size: ""$unique_vehicles"" } } } ]);","Group the parking events by parking lot ID, collect unique vehicle number plates, and return the lot ID with the count of distinct vehicles for each facility."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'response.event.entry_time': { $gte: new Date('2023-01-01') } }, { 'response.event.vehicle.number_plate': 1, 'response.event.vehicle.space_occupied': 1, 'response.event.exit_time': 1 })","Retrieve all documents from 'parking_events' where entry time is on or after January 1, 2023, projecting the vehicle's number plate, space occupied, and exit time."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ 'response.event.entry_time': { $gte: new Date('2023-01-01') } }, { 'response.event.exit_time': 1, 'response.event.vehicle.number_plate': 1, 'response.event.vehicle.space_occupied': 1 })","Find parking events with an entry time on or after January 1, 2023, and return the vehicle's number plate, space occupied, and exit time."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H001"" })",Get all patient events where the hospital ID is 'H001'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H001"" });",Find patient events with a hospital ID of 'H001'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": ""W01"" });",Get all documents from 'patient_events' where the ward number is 'W01'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'identifier.ward_number': 'W01' }),Find patient events with a ward number of 'W01'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.bed_id"": ""B10"" });",Retrieve all patient events for bed identifier 'B10'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.bed_id"": ""B10"" });",Retrieve documents from the 'patient_events' collection with bed_id 'B10'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.priority"": ""Urgent"" })",Get all patient events where the event priority is 'Urgent'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': 'Urgent' }),Get entries from the 'patient_events' collection where the event priority is 'Urgent'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""FallDetected"" })",Retrieve all patient events where the alert type is 'FallDetected.'
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.alert_type': 'FallDetected' });,Find entries in 'patient_events' where the 'alert_type' is 'FallDetected'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { heart_rate: { $gt: 100 } } } });,Find entries in the 'patient_events' collection where biometrics has a heart rate greater than 100.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { 'blood_pressure': { $lt: 90 } } } });,Select all documents from 'patient_events' where any biometrics record has a blood pressure less than 90.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { blood_pressure: { $lt: 90 } } } });,Retrieve entries from 'patient_events' where at least one biometrics record has blood pressure below 90.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { oxygen_saturation: { $gte: 95 } } } }),Find patient_events with at least one biometrics record where oxygen saturation is 95 or higher.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.movement_patterns': { $exists: true } });,Retrieve all documents from the 'patient_events' collection where 'movement_patterns' exists in the 'biometrics' sub-document of the 'event' object in the 'response'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.movement_patterns': { $exists: true } });,Retrieve records from the 'patient_events' collection that have the 'movement_patterns' attribute in the 'biometrics' section of the 'event' in the 'response'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': { $ne: 'Routine' } });,Retrieve all patient events where the event priority is not 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': { $ne: 'Routine' } });,Get patient events where the event priority is not 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $size: 3 } });,Select documents from the 'patient_events' collection with exactly three entries in the 'response.event.biometrics' array.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.biometrics"": { $size: 3 } });",Retrieve patient_events with three biometrics recorded in response.event.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H002"", ""response.event.alert_type"": ""VitalSigns"" });",Retrieve all patient events where the hospital ID is 'H002' and the alert type is 'VitalSigns'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H002"", ""response.event.alert_type"": ""VitalSigns"" });",Find patient events for hospital ID 'H002' with alert type 'VitalSigns'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": ""W02"", ""response.event.priority"": ""Emergency"" })",Retrieve all patient events where the ward number is 'W02' and the event priority is 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": ""W02"", ""response.event.priority"": ""Emergency"" })",Get patient events where the ward number is 'W02' and the event priority is 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.biometrics.heart_rate"": 80 }).sort({ ""identifier.bed_id"": 1 });","Retrieve patient events with a heart rate of 80 in biometrics, sorted by bed ID in ascending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H003"" }).limit(5);",Retrieve up to five patient events where the hospital ID is 'H003'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H003"" }).limit(5);",Retrieve up to five patient events where the hospital ID is 'H003'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'response.event.alert_type': { $in: ['FallDetected', 'Medication'] } });",Retrieve documents from 'patient_events' where 'alert_type' is 'FallDetected' or 'Medication'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'response.event.alert_type': { $in: ['FallDetected', 'Medication'] } });",Find patient events with an alert type of 'FallDetected' or 'Medication'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.biometrics"": { $elemMatch: { ""blood_pressure"": { $gt: 120, $lt: 180 } } } });",Retrieve documents from the 'patient_events' collection with blood pressure measurements in biometrics that are greater than 120 and less than 180.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find().sort({ 'response.event.priority': -1 }).limit(10);,Retrieve the top 10 patient event records sorted by priority in descending order.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find().sort({ 'response.event.priority': -1 }).limit(10);,"Retrieve up to 10 documents from the 'patient_events' collection, sorted by 'response.event.priority' in descending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.countDocuments({ ""identifier.bed_id"": ""B01"", ""response.event.priority"": ""Routine"" })",Count all entries in the 'patient_events' collection where the bed ID is 'B01' and the event priority is 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.countDocuments({ ""identifier.bed_id"": ""B01"", ""response.event.priority"": ""Routine"" })",Count the documents in the 'patient_events' collection with a bed_id of 'B01' and an event priority of 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.heart_rate': { $regex: '^[0-9]+' } });,Find all records in the 'patient_events' collection where the heart rate in the biometrics data begins with one or more digits.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.heart_rate': { $type: 'number' } });,Retrieve patient_events documents with heart rate values that are numeric.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': <hospital_id>, 'identifier.ward_number': <ward_number>, 'identifier.bed_id': <bed_id> }, { 'response.event.priority': 1, 'response.event.alert_type': 1, 'response.event.biometrics': { $slice: 1 } })","Find patient_events that match specified hospital_id, ward_number, and bed_id, including event priority, alert type, and biometrics such as heart rate and blood pressure."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H001"" })",Retrieve all patient events for the hospital with identifier 'H001'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H001"" });",Retrieve patient_events documents where hospital_id is 'H001'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": 2 });",Retrieve all patient events where the ward number is 2.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": 2 })",Get entries from 'patient_events' where the ward number is 2.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.bed_id"": ""B12345"" });",Retrieve all records from 'patient_events' where the bed ID is 'B12345'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'identifier.bed_id': 'B12345' });,Get entries from 'patient_events' where bed ID is 'B12345'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': 'Emergency' }),Retrieve all patient events where the event priority is 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': 'Emergency' }),Retrieve records from the 'patient_events' collection with event priority 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.alert_type': 'FallDetected' });,Get all patient events where the alert type is 'FallDetected'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.alert_type': 'FallDetected' });,Retrieve entries from the 'patient_events' collection where 'alert_type' is 'FallDetected' in the 'response.event' field.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { heart_rate: { $gt: 100 } } } }),Select all documents from the 'patient_events' collection where any heart rate in the biometrics section of the event response is greater than 100.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { blood_pressure: { $lt: 120 } } } });,Select all documents from the 'patient_events' collection where any blood pressure reading in the biometrics data is below 120.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.movement_patterns': { $exists: true } });,Retrieve all records from the 'patient_events' collection where 'movement_patterns' exists in the 'biometrics' array of the 'event' object within the 'response' property.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.movement_patterns': { $exists: true } });,Retrieve documents from the 'patient_events' collection that have the 'movement_patterns' attribute in the 'biometrics' array under the 'event' object within the 'response' field.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.priority"": ""Urgent"" }).sort({ ""identifier.hospital_id"": 1 });",Retrieve all patient events with an 'Urgent' priority and sort by hospital identifier in ascending order.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': 'Urgent' }).sort({ 'identifier.hospital_id': 1 }),"Retrieve 'patient_events' documents with 'Urgent' priority events, sorted by hospital_id."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { heart_rate: { $gte: 60, $lte: 100 } } } });",Retrieve patient events with at least one biometrics entry having a heart rate between 60 and 100.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H002"", ""response.event.alert_type"": ""VitalSigns"" });",Retrieve records from 'patient_events' where the hospital ID is 'H002' and the alert type is 'VitalSigns'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H002"", ""response.event.alert_type"": ""VitalSigns"" });",Get patient events with hospital ID 'H002' and alert type 'VitalSigns'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.ward_number': 3, 'response.event.priority': 'Routine' });",Retrieve all records from the 'patient_events' collection where the ward number is 3 and the event priority is 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": 3, ""response.event.priority"": ""Routine"" });",Retrieve entries from the 'patient_events' collection with a ward number of 3 and a routine event priority.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.bed_id': 'B54321', 'response.event.alert_type': 'Medication' });",Get patient_events where bed_id is 'B54321' and alert_type is 'Medication'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.bed_id"": ""B54321"", ""response.event.alert_type"": ""Medication"" });",Retrieve patient events with a bed ID of 'B54321' and an alert type of 'Medication'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H001"" }).sort({ ""response.event.priority"": -1 });","Retrieve all patient events with hospital ID 'H001', sorted by event priority in descending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'identifier.hospital_id': 'H001' }).sort({ 'response.event.priority': -1 }),"Retrieve entries from the 'patient_events' collection with hospital ID 'H001', ordered by event priority from highest to lowest."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.biometrics"": { $size: 3 } });",Get all records from 'patient_events' where the 'biometrics' array in 'event' response has three elements.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $size: 3 } });,Find patient events where the biometrics array in the event response has three entries.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": { $in: [1, 2, 3] } });","Retrieve all patient_events where the ward number is 1, 2, or 3."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": { $in: [1, 2, 3] } })","Get documents from the 'patient_events' collection where the ward number is 1, 2, or 3."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.findOne({ ""identifier.bed_id"": ""B12345"" });",Retrieve a document from 'patient_events' where the bed ID is 'B12345'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.findOne({ 'identifier.bed_id': 'B12345' });,Retrieve a record from the 'patient_events' collection where the bed_id is 'B12345'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': 'specific_hospital_id', 'identifier.ward_number': 'specific_ward_number', 'identifier.bed_id': 'specific_bed_id' })","Retrieve all documents from the 'patient_events' collection where 'hospital_id', 'ward_number', and 'bed_id' match specific values along with their event details."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': '<hospital_id_value>', 'identifier.ward_number': '<ward_number_value>', 'identifier.bed_id': '<bed_id_value>' }, { 'response.event.priority': 1, 'response.event.alert_type': 1, 'response.event.biometrics': 1 })","Retrieve all patient event records matching specific 'hospital_id', 'ward_number', and 'bed_id' values, including event priority, alert types, and biometric data."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H1234"" })",Retrieve all records from 'patient_events' where the hospital ID is 'H1234'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H1234"" });",Retrieve patient events with a hospital ID of 'H1234'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": 3, ""response.event.priority"": ""Urgent"" });",Retrieve all records from 'patient_events' where the ward number is 3 and event priority is Urgent.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.ward_number': 3, 'response.event.priority': 'Urgent' });",Find patient events with a ward number of 3 and an Urgent event priority.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.alert_type': 'FallDetected' } }, { $group: { _id: '$identifier.bed_id', count: { $sum: 1 } } }]);","Count records in 'patient_events' where 'alert_type' is 'FallDetected', grouped by 'bed_id'."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { ""response.event.alert_type"": ""FallDetected"" } }, { $group: { _id: ""$identifier.bed_id"", count: { $sum: 1 } } }]);","Select and count entries from 'patient_events' with an 'alert_type' of 'FallDetected', grouped by 'bed_id'."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.heart_rate': { $gt: 100 } }).sort({ 'response.event.priority': 1 });,"Find patient event records with a heart rate over 100, sorted by event priority from lowest to highest."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.bed_id"": ""B12"" }).limit(10);",Fetch ten records from the 'patient_events' collection where the bed identifier is 'B12'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.bed_id"": ""B12"" }).limit(10);",Retrieve up to ten patient events for bed ID 'B12'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: ""$response.event.biometrics"" }, { $group: { _id: null, avgHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" } } }]);",Calculate the average heart rate from the biometrics of all events in the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: ""$response.event.biometrics"" }, { $group: { _id: null, avgHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" } } }])",Calculate the average heart rate from biometrics in the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { blood_pressure: { $lt: 90 } } } }),Select records from 'patient_events' where any blood pressure value in biometrics is less than 90.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.priority"": { $in: [""Emergency"", ""Urgent""] } }).sort({ ""identifier.hospital_id"": 1, ""identifier.ward_number"": 1 });","Retrieve all entries from 'patient_events' where event priority is 'Emergency' or 'Urgent', sorted by hospital ID and ward number."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'response.event.priority': { $in: ['Emergency', 'Urgent'] } }).sort({ 'identifier.hospital_id': 1, 'identifier.ward_number': 1 });","Get 'patient_events' records with event priorities 'Emergency' or 'Urgent', sorted by hospital ID and ward number in ascending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { ""response.event.biometrics.movement_patterns"": { $exists: true } } }, { $lookup: { from: ""another_collection"", localField: ""identifier.bed_id"", foreignField: ""bed_id"", as: ""related_data"" } }])","Retrieve all documents from 'patient_events' where 'movement_patterns' in 'biometrics' exists, and join this data with another collection on 'bed_id'."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.biometrics.movement_patterns': { $exists: true } } }, { $lookup: { from: 'another_collection', localField: 'identifier.bed_id', foreignField: 'bed_id', as: 'related_data' } }])",Retrieve patient_events that have movement_patterns in the biometrics section and match bed_id with another collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'identifier.hospital_id': 'H5678' } }, { $group: { _id: '$identifier.ward_number', totalAlerts: { $sum: 1 } } }]);",Count alerts for each ward in the 'patient_events' collection for hospital 'H5678'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'identifier.hospital_id': 'H5678' } }, { $group: { _id: '$identifier.ward_number', totalAlerts: { $sum: 1 } } }])",Group records in 'patient_events' by ward number and count alerts for hospital ID 'H5678'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics.oxygen_saturation': { $gte: 95 } });,Retrieve records from the 'patient_events' collection with oxygen saturation levels of 95 or higher.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { ""response.event.alert_type"": ""Medication"" } }, { $sort: { ""response.event.priority"": -1 } }, { $project: { _id: 0, bed_id: ""$identifier.bed_id"", alert_type: ""$response.event.alert_type"" } }]);","Retrieve documents from the 'patient_events' collection where the alert type is 'Medication', sort by event priority in descending order, and return only the bed ID and alert type."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { ""response.event.alert_type"": ""Medication"" } }, { $sort: { ""response.event.priority"": -1 } }, { $project: { _id: 0, bed_id: ""$identifier.bed_id"", alert_type: ""$response.event.alert_type"" } }]);","Retrieve 'patient_events' records for 'Medication' events, sort by event priority in descending order, and display only the bed ID and alert type."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.findOne({ 'identifier.ward_number': 2 }),Get a document from 'patient_events' where the ward number is 2.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.findOne({ ""identifier.ward_number"": 2 });",Find a single patient event with a ward number of 2.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: ""$response.event.biometrics"" }, { $match: { ""response.event.biometrics.heart_rate"": { $gte: 70, $lte: 90 } } }, { $group: { _id: ""$identifier.bed_id"", count: { $sum: 1 } } }])","Extract and count the number of biometrics entries where the heart rate is between 70 and 90, grouped by bed ID in the patient_events collection."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: ""$response.event.biometrics"" }, { $match: { ""response.event.biometrics.heart_rate"": { $gte: 70, $lte: 90 } } }, { $group: { _id: ""$identifier.bed_id"", total: { $sum: 1 } } }]);","Expand the 'biometrics' array in the 'patient_events' collection, filtering for heart rates between 70 and 90, and count the total for each bed."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""VitalSigns"", ""response.event.priority"": ""Routine"" });",Retrieve all patient events where the alert type is 'VitalSigns' and the priority is 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'response.event.alert_type': 'VitalSigns', 'response.event.priority': 'Routine' });",Retrieve records from 'patient_events' where 'alert_type' is 'VitalSigns' and 'priority' is 'Routine'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""H1234"", ""response.event.priority"": ""Emergency"" }).count();",Count all entries in the 'patient_events' collection where the hospital ID is 'H1234' and the event priority is 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.countDocuments({ ""identifier.hospital_id"": ""H1234"", ""response.event.priority"": ""Emergency"" });",Count the number of documents in 'patient_events' where the hospital ID is 'H1234' and the event priority is 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { ""response.event.alert_type"": ""FallDetected"" } }, { $project: { hospital_id: ""$identifier.hospital_id"", ward_number: ""$identifier.ward_number"" } }]);","Retrieve all records from 'patient_events' where the alert type is 'FallDetected', returning each record's hospital ID and ward number."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""FallDetected"" }, { ""identifier.hospital_id"": 1, ""identifier.ward_number"": 1 });","Retrieve entries from the 'patient_events' collection with an alert type of 'FallDetected', projecting only the hospital ID and ward number."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': <HOSPITAL_ID>, 'identifier.ward_number': <WARD_NUMBER>, 'identifier.bed_id': <BED_ID> }, { 'response.event.priority': 1, 'response.event.alert_type': 1, 'response.event.biometrics': 1 })","Retrieve patient event documents filtered by 'hospital_id', 'ward_number', and 'bed_id', showing the event's priority, alert type, and biometric measurements."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""12345"" })",Retrieve all patient events where the hospital ID is '12345'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.hospital_id"": ""12345"" });",Get patient events with a hospital ID of '12345'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": ""A101"" })",Retrieve all patient events with ward number 'A101'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": ""A101"" })",Get patient events where the ward number is 'A101'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.priority"": ""Emergency"" });",Retrieve all entries from the 'patient_events' collection with an event priority of 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': 'Emergency' }),Find patient_events with an event priority of 'Emergency'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""FallDetected"", ""identifier.bed_id"": ""B32"" });",Retrieve patient event records with alert type 'FallDetected' and bed ID 'B32'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""FallDetected"", ""identifier.bed_id"": ""B32"" });",Retrieve all patient events with a 'FallDetected' alert type and bed ID 'B32'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.biometrics': { $elemMatch: { 'heart_rate': { $gt: 100 } } } });,Retrieve documents from the 'patient_events' collection where any heart rate measurement in the response event's biometrics is greater than 100.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { ""response.event.alert_type"": ""Medication"" } }, { $group: { _id: ""$identifier.hospital_id"", count: { $sum: 1 } } } ])","Retrieve all patient events where the alert type is 'Medication', grouped by hospital identifier, and count occurrences for each hospital."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'Medication' } }, { $group: { _id: '$identifier.hospital_id', total_incidents: { $sum: 1 } } } ]);",Get the total number of medication incidents aggregated by hospital ID from the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""identifier.ward_number"": { $in: [""A101"", ""B202""] } }).sort({ ""response.event.priority"": 1 });","Retrieve all records from 'patient_events' where the ward number is 'A101' or 'B202', sorted by event priority in ascending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'identifier.ward_number': { $in: ['A101', 'B202'] } } }, { $sort: { 'response.event.priority': 1 } } ])","Retrieve entries from the 'patient_events' collection with ward numbers 'A101' or 'B202', sorted by event priority in ascending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.hospital_id"", avgHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" } } } ])",Calculate the average heart rate from the biometrics data for each hospital based on hospital_id in the patient_events collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.hospital_id"", avgHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" } } } ]);","Compute the average heart rates from the biometrics field, grouped by hospital_id, in the 'patient_events' collection."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.countDocuments({ 'response.event.priority': 'Urgent' }),Count all documents in the 'patient_events' collection where the event priority is 'Urgent'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.countDocuments({ ""response.event.priority"": ""Urgent"" })",Count the total records in the 'patient_events' collection with an event priority of 'Urgent'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $group: { _id: ""$identifier.ward_number"", maxOxygenSaturation: { $max: { $arrayElemAt: [""$response.event.biometrics.oxygen_saturation"", 0] } } } } ]);",Group 'patient_events' by ward number and find the maximum oxygen saturation from the first biometrics entry for each ward.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $group: { _id: ""$identifier.ward_number"", maxOxygenSaturation: { $max: { $arrayElemAt: [""$response.event.biometrics.oxygen_saturation"", 0] } } } } ]);",Aggregate the highest oxygen saturation value from the first biometrics entry for each ward number in the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.biometrics.movement_patterns': { $exists: true, $ne: [] } } }, { $project: { hospital_id: '$identifier.hospital_id', movement_patterns: '$response.event.biometrics.movement_patterns' } } ]);","Retrieve documents from 'patient_events' where movement patterns in biometrics exist and are not empty, returning the hospital ID and movement patterns."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { ""response.event.biometrics.movement_patterns"": { $exists: true, $ne: [] } } }, { $project: { hospital_id: ""$identifier.hospital_id"", movement_patterns: ""$response.event.biometrics.movement_patterns"" } } ])",Retrieve hospital identifiers and movement patterns from the 'patient_events' collection where movement patterns are recorded in the biometrics.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: '$response.event.biometrics' }, { $group: { _id: '$identifier.hospital_id', totalBloodPressure: { $sum: '$response.event.biometrics.blood_pressure' } } }, { $sort: { totalBloodPressure: -1 } }])","Group documents from the 'patient_events' collection by hospital ID, sum the blood pressure readings from biometrics in the event response, and sort the results in descending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.hospital_id"", totalBloodPressure: { $sum: ""$response.event.biometrics.blood_pressure"" } } }, { $sort: { totalBloodPressure: -1 } } ]);","Group 'patient_events' by hospital ID, sum the blood pressure values from biometrics, and sort results by total blood pressure in descending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $lookup: { from: 'patient_events', localField: 'identifier.hospital_id', foreignField: 'identifier.hospital_id', as: 'related_events' } }, { $unwind: '$related_events' }, { $match: { 'related_events.response.event.alert_type': 'VitalSigns' } } ])","Aggregate data from the 'patient_events' collection by joining with itself on the hospital ID, filtering results to those with the alert type 'VitalSigns' in related events."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: ""$response.event.biometrics"" }, { $group: { _id: null, averageHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" } } }])",Calculate the average heart rate from the biometrics data in the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""Medication"" }, { ""identifier.hospital_id"": 1, ""response.event.alert_type"": 1 })","Retrieve documents from the 'patient_events' collection where the alert type is 'Medication', showing the hospital ID and the alert type."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'Medication' } }, { $project: { 'hospital_id': '$identifier.hospital_id', 'alert_type': '$response.event.alert_type' } } ])","Retrieve records from the 'patient_events' collection where the event alert type is 'Medication', showing only the hospital ID and alert type."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $group: { _id: ""$identifier.ward_number"", minOxygenSaturation: { $min: { $arrayElemAt: [ ""$response.event.biometrics.oxygen_saturation"", 0 ] } } } } }])",Group patient event records by ward number and calculate the minimum oxygen saturation from the first biometrics entry for each ward.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $group: { _id: ""$identifier.ward_number"", minOxygenSaturation: { $min: { $arrayElemAt: [ ""$response.event.biometrics.oxygen_saturation"", 0 ] } } } } ]);",Group data from the 'patient_events' collection by ward number and find the lowest oxygen saturation value from the first position of the biometrics array for each group.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.priority': 'Routine' } }, { $group: { _id: '$identifier.bed_id', count: { $sum: 1 } } }])","Retrieve all patient events with a 'Routine' priority, grouped by bed ID, counting the occurrences of each bed ID."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.priority': 'Routine' } }, { $group: { _id: '$identifier.bed_id', totalEvents: { $sum: 1 } } } ])",Get the number of 'Routine' priority events in 'patient_events' grouped by bed ID.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': <specific_hospital_id>, 'identifier.ward_number': <specific_ward_number>, 'identifier.bed_id': <specific_bed_id> }, { 'response.event.priority': 1, 'response.event.alert_type': 1, 'response.event.biometrics': 1 })","Retrieve documents from 'patient_events' where hospital_id, ward_number, and bed_id match specific values, including event details like priority, alert_type, and biometrics."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","{""identifier.hospital_id"": ""<hospital_id>"", ""identifier.ward_number"": ""<ward_number>"", ""identifier.bed_id"": ""<bed_id>""}, {""response.event.priority"": 1, ""response.event.alert_type"": 1, ""response.event.biometrics"": 1}","Find patient events in the 'patient_events' collection for the specified hospital_id, ward_number, and bed_id, and return the event's priority, alert type, and biometrics data."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.hospital_id"", avgHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" }, avgBloodPressure: { $avg: ""$response.event.biometrics.blood_pressure"" } } } ]);","Unwind the biometric data from the 'patient_events' collection to calculate the average heart rate and blood pressure for each hospital, grouped by hospital identifier."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.hospital_id"", avgHeartRate: { $avg: ""$response.event.biometrics.heart_rate"" }, avgBloodPressure: { $avg: ""$response.event.biometrics.blood_pressure"" } } } ]);","Calculate the average heart rate and blood pressure for each hospital, grouping the results by hospital ID from the 'patient_events' collection."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.priority"": ""Emergency"" }).sort({ ""identifier.hospital_id"": 1 });","Get all patient events with priority 'Emergency', sorted by hospital identifier in ascending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find({ 'response.event.priority': 'Emergency' }).sort({ 'identifier.hospital_id': 1 });,Find patient events with an 'Emergency' priority and sort the results by hospital ID in ascending order.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'FallDetected' } }, { $group: { _id: '$identifier.ward_number', totalAlerts: { $sum: 1 } } } ])",Retrieve patient events with the alert type 'FallDetected' and count the total alerts per ward.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'FallDetected' } }, { $group: { _id: '$identifier.ward_number', totalAlerts: { $sum: 1 } } } ])","Count 'FallDetected' alerts in the 'patient_events' collection, grouped by ward number for totals per department."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.priority': 'Urgent' } }, { $project: { hospital: '$identifier.hospital_id', ward: '$identifier.ward_number', priority: '$response.event.priority', heartRate: { $map: { input: '$response.event.biometrics', as: 'b', in: '$$b.heart_rate' } } } } }])","Select the hospital ID, ward number, event priority, and heart rate measurements from the 'patient_events' collection, including only records with 'Urgent' priority."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: null, avgOxygenSaturation: { $avg: ""$response.event.biometrics.oxygen_saturation"" } } }, { $match: { avgOxygenSaturation: { $lt: 90 } } } ]);","Calculate the average oxygen saturation from biometrics data in 'patient_events', filtering for records with an average below 90."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: null, avgOxygenSaturation: { $avg: ""$response.event.biometrics.oxygen_saturation"" } } }, { $match: { avgOxygenSaturation: { $lt: 90 } } } ]);",Calculate the average oxygen saturation levels from biometrics in the 'patient_events' collection where the average is less than 90.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.bed_id"", maxHeartRate: { $max: ""$response.event.biometrics.heart_rate"" } } }, { $match: { maxHeartRate: { $gt: 120 } } } ])","Group records from 'patient_events' by 'bed_id', calculating the maximum heart rate from biometrics, and include only those with a maximum heart rate greater than 120."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $unwind: ""$response.event.biometrics"" }, { $group: { _id: ""$identifier.ward_number"", totalMovementPatterns: { $sum: { $size: ""$response.event.biometrics.movement_patterns"" } } } } }])",Extract the ward numbers from the 'patient_events' collection and count the total movement patterns recorded in the biometrics for each ward.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { ""response.event.priority"": ""Routine"" } }, { $lookup: { from: ""patient_events"", localField: ""identifier.bed_id"", foreignField: ""identifier.bed_id"", as: ""bed_events"" } }, { $project: { hospital_id: ""$identifier.hospital_id"", routineEventsCount: { $size: ""$bed_events"" } } } ])","Retrieve all 'patient_events' documents with a priority of 'Routine' and count the related events using 'bed_id', projecting the 'hospital_id' and the count of these events."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.alert_type': 'VitalSigns' } }, { $count: 'totalEvents' }])",Count the total number of patient events with an alert type of 'VitalSigns'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.countDocuments({ ""response.event.alert_type"": ""VitalSigns"" })",Count the total occurrences of 'VitalSigns' alerts in the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $group: { _id: ""$identifier.hospital_id"", totalEvents: { $sum: 1 } } } ])",Group patient events by hospital_id and count the total number of events for each hospital.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $group: { _id: ""$identifier.hospital_id"", totalEvents: { $sum: 1 } } } ])","Count the total events for each hospital in the 'patient_events' collection, grouped by hospital_id."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.priority': 'Urgent' } }, { $group: { _id: '$identifier.ward_number', avgBloodPressure: { $avg: '$response.event.biometrics.blood_pressure' } } }])",Retrieve all 'Urgent' priority events in the 'patient_events' collection and compute the average blood pressure grouped by ward number.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'Medication' } }, { $group: { _id: '$identifier.hospital_id', distinctWardNumbers: { $addToSet: '$identifier.ward_number' } } } ]);","Retrieve all patient_events where the alert type is 'Medication', grouping by hospital ID and collecting distinct ward numbers."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'Medication' } }, { $group: { _id: '$identifier.hospital_id', ward_numbers: { $addToSet: '$identifier.ward_number' } } } ])",Retrieve unique ward numbers from the 'patient_events' collection for each hospital that has a 'Medication' alert type.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $match: { ""response.event.biometrics.oxygen_saturation"": { $gte: 95 } } }, { $group: { _id: { hospitalId: ""$identifier.hospital_id"", bedId: ""$identifier.bed_id"" }, maxOxygenSaturation: { $max: ""$response.event.biometrics.oxygen_saturation"" } } } ]);","From the 'patient_events' collection, retrieve hospital ID and bed ID, along with the maximum oxygen saturation that is at least 95."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $match: { ""response.event.biometrics.heart_rate"": { $lt: 60 } } }, { $group: { _id: ""$identifier.ward_number"", alertCount: { $sum: 1 } } } ])","Retrieve details from the 'patient_events' collection, unwinding the 'biometrics' array and filtering for heart rates below 60, then grouping the results by ward number and counting alerts in each ward."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $match: { ""response.event.biometrics.heart_rate"": { $lt: 60 } } }, { $group: { _id: ""$identifier.ward_number"", alertCount: { $sum: 1 } } } ]);","Retrieve records from 'patient_events' with biometrics showing a heart rate below 60, and count alert occurrences by ward number."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: ""$response.event.biometrics"" }, { $match: { ""response.event.biometrics.heart_rate"": { $gt: 100 } } }, { $project: { hospitalId: ""$identifier.hospital_id"", wardId: ""$identifier.ward_number"", heartRate: ""$response.event.biometrics.heart_rate"" } }, { $sort: { heartRate: -1 } } ]);","Select the hospital ID, ward number, and heart rate from 'patient_events', where heart rate is greater than 100, sorted in descending order by heart rate."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $unwind: '$response.event.biometrics' }, { $match: { 'response.event.biometrics.heart_rate': { $gt: 100 } } }, { $project: { hospitalId: '$identifier.hospital_id', wardId: '$identifier.ward_number', heartRate: '$response.event.biometrics.heart_rate' } }, { $sort: { heartRate: -1 } } ])","Retrieve the hospital ID, ward number, and heart rate from 'patient_events', where heart rate is greater than 100, sorted by heart rate in descending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $group: { _id: ""$identifier.ward_number"", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Count and group patient events by ward number, then sort the counts in descending order."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $group: { _id: ""$identifier.ward_number"", count: { $sum: 1 } } }, { $sort: { count: -1 } }])","Group the documents in the 'patient_events' collection by ward number, count the occurrences, and sort by the most frequent ward first."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $group: { _id: null, maxPriority: { $max: ""$response.event.priority"" } } }]);",Find the maximum priority level from all event responses in the 'patient_events' collection.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $group: { _id: null, maxPriority: { $max: ""$response.event.priority"" } } }}])","Calculate the highest event priority from the responses in the 'patient_events' collection, returning a single result."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([ { $match: { 'response.event.alert_type': 'FallDetected' } }, { $count: 'totalFallAlerts' } ])",Count patient events where the alert type is 'FallDetected'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.aggregate([{ $match: { 'response.event.alert_type': 'FallDetected' } }, { $count: 'totalFallAlerts' }])",Count the number of fall alerts in the 'patient_events' collection where the alert_type is 'FallDetected'.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': '<specified_hospital_id>', 'identifier.ward_number': '<specified_ward_number>' }, { 'response.event.priority': 1, 'response.event.alert_type': 1 })","Fetch all records from 'patient_events' where 'hospital_id' and 'ward_number' match specified values, including 'event' details about priority and alert type."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ 'identifier.hospital_id': <hospital_id>, 'identifier.ward_number': <ward_number> }, { 'response.event.priority': 1, 'response.event.alert_type': 1 })","Retrieve records from the 'patient_events' collection filtered by 'hospital_id' and 'ward_number', showing the event's priority and alert type."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({}),Retrieve all documents from the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({}),Retrieve all entries in the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""12345"" });",Retrieve all records from 'store_events' where 'store_id' is '12345'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.store_id': '12345' });,Retrieve documents from the 'store_events' collection where 'store_id' is '12345'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.type"": ""Purchase"" });",Retrieve all records from 'store_events' where the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.type': 'Purchase' }),Get documents from 'store_events' where the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 3, ""response.event.type"": ""Return"" });",Find records in the 'store_events' collection with aisle number 3 and event type 'Return'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.aisle_number': 3, 'response.event.type': 'Return' });",Retrieve documents from the 'store_events' collection where aisle number is 3 and event type is 'Return'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile': { $elemMatch: { age_group: '18-25' } } });,Select all documents from the 'store_events' collection where any customer profile has an age group of '18-25'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile"": { ""$elemMatch"": { ""age_group"": ""18-25"" } } });",Retrieve entries from the 'store_events' collection with customer profiles that have an age group of '18-25'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""A1"" }).limit(10);",Retrieve the first 10 documents from the 'store_events' collection where the POS terminal is 'A1'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.pos_terminal': 'A1' }).limit(10);,Get up to 10 entries from 'store_events' where pos_terminal is 'A1'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile.dwell_time': { $gte: 30 } });,Retrieve entries from 'store_events' where customer profiles have a dwell time of at least 30 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.customer_profile.basket_items': { $exists: true, $ne: [] } });",Retrieve documents from 'store_events' where the customer profile has non-empty basket items.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile.basket_items': { $ne: [] } });,Retrieve documents from the 'store_events' collection that have non-empty basket items in the customer profile.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""12345"", ""response.event.customer_profile.staff_interaction"": { ""$exists"": true, ""$ne"": null } }).count();",Count the number of documents in the 'store_events' collection where the store identifier is '12345' and staff interaction is recorded in the customer profile.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.store_id': '12345', 'response.event.customer_profile': { '$elemMatch': { 'staff_interaction': true } } }).count();",Count the entries in the 'store_events' collection where the store ID is '12345' and at least one customer profile shows a positive staff interaction.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.findOne({ ""identifier.store_id"": ""54321"" });",Retrieve a document from the 'store_events' collection with store ID '54321'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.findOne({ ""identifier.store_id"": ""54321"" });",Find a single record from the 'store_events' collection with store ID '54321'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({}).sort({ ""response.event.type"": 1 }).limit(5);","Retrieve up to five records from the 'store_events' collection, sorted in ascending order by event type."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({}).limit(5).sort({ 'response.event.type': 1 });,"Retrieve up to five documents from the 'store_events' collection, sorted by the event type in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.aisle_number': { $lt: 5 } }).skip(5);,"Select documents from 'store_events' where the aisle number is less than 5, skipping the first 5 results."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": { $lt: 5 } }).skip(5);","Retrieve records from 'store_events' where the aisle number is less than 5, skipping the first 5 results."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""12345"" }).sort({ ""identifier.aisle_number"": -1 }).limit(3);","Retrieve the top three documents from 'store_events' where 'store_id' is '12345', sorted by 'aisle_number' in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""12345"" }).sort({ ""identifier.aisle_number"": -1 }).limit(3);","Retrieve three entries from 'store_events' where store ID is '12345', sorted by aisle number in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.type"": { $in: [""Purchase"", ""Return""] } });",Retrieve all documents from the 'store_events' collection where the event type is 'Purchase' or 'Return'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.type"": { $in: [""Purchase"", ""Return""] } });",Get entries from 'store_events' where the event type is 'Purchase' or 'Return'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""B2"" }, { ""response.event"": 1 })",Select documents from the 'store_events' collection where the pos_terminal is 'B2' and include only the event information in the response.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.pos_terminal': 'B2' }, { 'response.event': 1 })","Get entries from the 'store_events' collection for the point of sale terminal 'B2', showing only the event details in the response."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.customer_profile.dwell_time': { $gte: 15, $lte: 60 } });",Retrieve all entries from 'store_events' where customer dwell time is between 15 and 60 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile.dwell_time"": { $gte: 15, $lte: 60 } })",Find documents in the 'store_events' collection with customer profiles that have dwell times between 15 and 60 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile': { $elemMatch: { 'basket_items': { $size: 5 } } } }),Select all documents from the 'store_events' collection where at least one customer profile has exactly five items in the basket.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.distinct('identifier.store_id'),Get all unique store IDs from the store_events collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.distinct('identifier.store_id');,Retrieve unique store IDs from the store_events collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.store_id': <specific_store_id>, 'identifier.aisle_number': <specific_aisle_number> }, { 'response.event.type': 1, 'response.event.customer_profile': 1 })","Retrieve documents from 'store_events' where 'identifier.store_id' and 'identifier.aisle_number' match specified values, showing 'response.event.type' and 'response.event.customer_profile'."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.store_id': '<specific_store_id>', 'identifier.aisle_number': '<specific_aisle_number>' }, { 'response.event.type': 1, 'response.event.customer_profile': 1 })","Find records in the 'store_events' collection for a specific 'store_id' and 'aisle_number', retrieving 'response.event.type' and 'response.event.customer_profile'."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""Store001"" });",Retrieve all records from 'store_events' where the store ID is 'Store001'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.store_id': 'Store001' }),Get documents from the 'store_events' collection with store ID 'Store001'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 5 })",Retrieve all records from 'store_events' where aisle number is 5.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 5 });",Get documents from the 'store_events' collection where the aisle number is 5.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.type': 'Purchase' });,Retrieve all documents from the 'store_events' collection where the event type is 'Purchase.'
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.type': 'Purchase' }),Get entries from 'store_events' where the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile': { '$elemMatch': { 'age_group': '18-25' } } }),Find all documents in 'store_events' where at least one customer's age group in the profile is '18-25'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile.dwell_time': { $gt: 30 } }),Find store_events documents with customer profiles that have a dwell time over 30.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""TerminalA"", ""response.event.type"": ""Return"" });",Retrieve all documents from the 'store_events' collection where the POS terminal is 'TerminalA' and the event type is 'Return'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""TerminalA"", ""response.event.type"": ""Return"" });",Get entries from 'store_events' where the checkout station is 'TerminalA' and the event type is 'Return'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile"": { $exists: true, $ne: [] } });",Find documents in the 'store_events' collection where 'customer_profile' exists and is not empty.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile': { $elemMatch: { 'staff_interaction': true } } }),Select all documents from the 'store_events' collection where any 'customer_profile' in 'response.event' has 'staff_interaction' set to true.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile"": { ""$elemMatch"": { ""staff_interaction"": true } } })",Retrieve records from the 'store_events' collection where any entry in the 'customer_profile' array has 'staff_interaction' set to true.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""Store002"", ""response.event.type"": { $in: [""Purchase"", ""Browse""] } });",Get all documents from 'store_events' where store ID is 'Store002' and event type is 'Purchase' or 'Browse'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""Store002"", ""response.event.type"": { $in: [""Purchase"", ""Browse""] } });",Find store_events for store ID 'Store002' with event types 'Purchase' and 'Browse'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": { $gt: 3 } }, { ""identifier.store_id"": 1, ""response.event.type"": 1 })","Retrieve records from 'store_events' where aisle number is greater than 3, showing only store ID and event type."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.aisle_number': { $gt: 3 } }, { 'identifier.store_id': 1, 'response.event.type': 1 });","Retrieve documents from 'store_events' where aisle number is greater than 3, showing only the store identifier and event type."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.customer_profile.basket_items': { $exists: true, $ne: [] } });",Select all documents from the 'store_events' collection that have customer profiles with non-empty shopping basket details.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.customer_profile.basket_items': { $exists: true, $ne: [] } })",Retrieve records from the 'store_events' collection where customer profiles contain non-empty basket items.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""Store001"", ""response.event.type"": ""Purchase"" }).limit(5);",Retrieve the first five documents from 'store_events' where the store ID is 'Store001' and the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""Store001"", ""response.event.type"": ""Purchase"" }).limit(5);",Retrieve up to five entries from 'store_events' where the store ID is 'Store001' and the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.customer_profile': { $elemMatch: { age_group: '30-40', staff_interaction: false } } })",Retrieve documents from 'store_events' where the customer profile has an age group of '30-40' and no staff interaction.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.customer_profile': { $elemMatch: { age_group: '30-40', staff_interaction: { $exists: false } } } });",Retrieve entries from the 'store_events' collection with customer profiles aged '30-40' and no staff interaction recorded.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.pos_terminal': 'TerminalB' }).sort({ 'response.event.type': 1 }).limit(15);,"Retrieve the first 15 entries from the 'store_events' collection where the Point Of Sale terminal is 'TerminalB', sorted by event type in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""TerminalB"" }).sort({ ""response.event.type"": 1 }).limit(15);","Retrieve up to 15 transactions from the 'store_events' collection at 'TerminalB', ordered by event type in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 1, ""response.event.customer_profile.dwell_time"": { $lte: 15 } });",Retrieve records from the 'store_events' collection where the aisle number is 1 and the customer's dwell time is 15 minutes or less.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 1, ""response.event.customer_profile.dwell_time"": { $lte: 15 } });",Find documents in the 'store_events' collection where aisle_number is 1 and customer profile dwell_time is 15 minutes or less.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.countDocuments({ ""identifier.store_id"": ""Store004"", ""response.event.type"": { $exists: true } })",Count the documents in 'store_events' where 'store_id' is 'Store004' and 'event.type' exists.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.countDocuments({ ""identifier.store_id"": ""Store004"", ""response.event.type"": { $exists: true } });",Count the records in 'store_events' where 'store_id' is 'Store004' and 'event.type' exists.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 2, ""response.event.customer_profile"": { ""$elemMatch"": { ""staff_interaction"": true }}}).limit(3);",Find up to three records from 'store_events' where aisle number is 2 and there was staff interaction in the customer profile.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 2, ""response.event.customer_profile"": { ""$elemMatch"": { ""staff_interaction"": true }}}).limit(3);",Retrieve up to three documents from the 'store_events' collection where the aisle number is 2 and staff interaction in the customer profile is true.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.store_id': <store_id>, 'identifier.aisle_number': <aisle_number>, 'identifier.pos_terminal': <pos_terminal> }, { 'response.event.customer_profile': 1 })","Retrieve all events from a specific store, aisle, and checkout terminal, including customer profile details."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.store_id': <store_id>, 'identifier.aisle_number': <aisle_number>, 'identifier.pos_terminal': <pos_terminal> }, { 'response.event.customer_profile': 1 })","Retrieve records from 'store_events' for a specific store, aisle number, and POS terminal, including customer profile details."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } ]);",Extract average dwell time for customer profiles from 'store_events' grouped by store ID.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } ]);","Deconstruct customer profiles from the 'store_events' collection, then group by store ID to calculate the average dwell time for each store."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 5 })",Retrieve all documents from 'store_events' where aisle number is 5.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.aisle_number': 5 });,Retrieve entries from 'store_events' where the aisle number is 5.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.type"": ""Purchase"" } }, { $group: { _id: ""$identifier.store_id"", purchaseCount: { $sum: 1 } } } ])","Retrieve records from the 'store_events' collection where the event type is 'Purchase', and group by store identifier, counting total purchases per store."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.type': 'Purchase' } }, { $group: { _id: '$identifier.store_id', purchaseCount: { $sum: 1 } } }])","Retrieve documents from 'store_events' where the event type is 'Purchase', and count the number of purchases for each store ID."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.pos_terminal"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])","Group store events by point of sale terminal, summing event counts and sorting in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: ""$identifier.pos_terminal"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }])","Group events in the 'store_events' collection by point of sale terminal, counting total events per terminal and sorting by the highest totals."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.type': 'Return' } }, { $group: { _id: '$identifier.store_id', totalReturns: { $sum: 1 } } }])",Get the total number of return events grouped by store_id from the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Return' } }, { $group: { _id: '$identifier.store_id', totalReturns: { $sum: 1 } } } ])",Find the total count of return transactions per store in the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.aisle_number"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" } } }, { $sort: { totalDwellTime: -1 } } ])","Group 'store_events' by aisle number to calculate total dwell time per aisle, sorting results in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Browse' } }, { $project: { 'store_id': '$identifier.store_id', 'averageStaffInteraction': { $avg: '$response.event.customer_profile.staff_interaction' } } } ]);","Retrieve documents from 'store_events' where the event type is 'Browse', and return the store ID and average staff interaction from the customer profile."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Browse' } }, { $project: { store_id: '$identifier.store_id', averageStaffInteraction: { $avg: '$response.event.customer_profile.staff_interaction' } } } ])","From the 'store_events' collection, filter for 'Browse' events and retrieve the store identifier and the average staff interactions from the customer profiles."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $unwind: ""$response.event.customer_profile"" }, { $group: { _id: { store_id: ""$identifier.store_id"", age_group: ""$response.event.customer_profile.age_group"" }, avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } }])","Unwind customer profiles in 'store_events' and group by store ID and age group, calculating average dwell time."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: { store_id: ""$identifier.store_id"", age_group: ""$response.event.customer_profile.age_group"" }, avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } } ]);","Aggregate average dwell time from customer profiles in 'store_events', grouped by store ID and age group."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'identifier.aisle_number': 3 } }, { $group: { _id: null, totalEvents: { $sum: 1 } } } ]);",Retrieve the total number of events from the 'store_events' collection where the aisle number is 3.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'identifier.aisle_number': 3 } }, { $count: 'totalEvents' }])",Count the total number of events in the 'store_events' collection where the aisle number is 3.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Purchase' } }, { $lookup: { from: 'store_events', localField: 'identifier.store_id', foreignField: 'identifier.store_id', as: 'related_events' } } ])",Select all records from the 'store_events' collection where the event type is 'Purchase' and include related events with the same store identifier.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.type"": ""Purchase"" } }, { $lookup: { from: ""store_events"", localField: ""identifier.store_id"", foreignField: ""identifier.store_id"", as: ""related_events"" } } ])",Retrieve 'store_events' documents with an event type of 'Purchase' and related events based on the store_id.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: ""$identifier.store_id"", maxDwellTime: { $max: ""$response.event.customer_profile.dwell_time"" } } }, { $sort: { maxDwellTime: -1 } }]);","Group store events by store identifier, calculate the maximum dwell time from customer profiles, and sort the results in descending order by maximum dwell time."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.store_id"", maxDwellTime: { $max: ""$response.event.customer_profile.dwell_time"" } } }, { $sort: { maxDwellTime: -1 } } ])","Group the 'store_events' documents by store ID to find the maximum dwell time in each store's customer profile, ordered from highest to lowest."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile.dwell_time"": { $gt: 30 } }).limit(10);",Find the first 10 documents in the 'store_events' collection where customer dwell time exceeds 30 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile.dwell_time': { $gt: 30 } }).limit(10);,Retrieve up to 10 records from 'store_events' where dwell time in the customer profile exceeds 30 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", totalBasketItems: { $sum: { $size: ""$response.event.customer_profile.basket_items"" } } } } } ]);",Unwind customer profiles in the 'store_events' collection and group by store ID to sum the total basket items per store.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", totalBasketItems: { $sum: { $size: ""$response.event.customer_profile.basket_items"" } } } } ]);",Aggregate the total number of basket items for each store ID from individual customer profiles in the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""store123"", ""response.event.type"": ""Browse"" });",Retrieve all records from 'store_events' where 'store_id' is 'store123' and event type is 'Browse'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""store123"", ""response.event.type"": ""Browse"" });",Retrieve entries with a 'store_id' of 'store123' where the event type is 'Browse'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.customer_profile': { $elemMatch: { age_group: { $gte: 35, $lte: 44 } } } } }, { $group: { _id: '$identifier.store_id', totalInteractions: { $sum: '$response.event.customer_profile.staff_interaction' } } } ]);","Select all documents from the 'store_events' collection where the customer's age group is between 35 and 44 years, and group the results by store ID, summing the total staff interactions for each store."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.customer_profile.age_group"": { $gte: 35, $lte: 44 } } }, { $group: { _id: ""$identifier.store_id"", totalInteractions: { $sum: ""$response.event.customer_profile.staff_interaction"" } } } ]);","Retrieve records from the 'store_events' collection where customer age groups are between 35 and 44, and aggregate by store ID, summing the staff interactions for each store."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.aisle_number"", totalPurchases: { $sum: { $cond: [ { $eq: [ ""$response.event.type"", ""Purchase"" ] }, 1, 0 ] } } } } } ]);",Group the documents from the 'store_events' collection by aisle number and count the total number of purchases where the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Purchase' } }, { $group: { _id: '$identifier.aisle_number', totalPurchases: { $sum: 1 } } } ])","Count the total purchases in the 'store_events' collection, grouped by aisle number, where the event type is 'Purchase'."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({}, {""response.event.customer_profile.age_group"": 1, ""response.event.customer_profile.basket_items"": 1, ""response.event.customer_profile.dwell_time"": 1, ""response.event.customer_profile.staff_interaction"": 1})","Retrieve all documents from the 'store_events' collection focusing on customer age groups, basket items, dwell times, and staff interactions."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Purchase' } }, { $group: { _id: '$identifier.store_id', totalPurchases: { $sum: 1 } } } ])",Count Purchase events grouped by store identifier from the store_events collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Purchase' } }, { $group: { _id: '$identifier.store_id', totalPurchases: { $sum: 1 } } } ])",Count the number of Purchase events for each store_id in the store_events collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$response.event.customer_profile.age_group"", avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } ]);","Unwind customer profiles from 'store_events' and group by age group, calculating the average dwell time for each group."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$response.event.customer_profile.age_group"", avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } ])",Aggregate customer profiles in 'store_events' by age group and calculate the average dwell time for each group.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'identifier.aisle_number': { $gte: 1, $lte: 5 } }).sort({ 'response.event.type': 1 });","Retrieve documents from 'store_events' where aisle number is between 1 and 5, inclusive, and sort by event type in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": { $gte: 1, $lte: 5 } }).sort({ ""response.event.type"": 1 })","Retrieve records from the 'store_events' collection where aisle numbers are between 1 and 5, sorted by event type alphabetically."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.type': 'Return' } }, { $group: { _id: '$identifier.store_id', totalReturns: { $sum: 1 } } }, { $sort: { totalReturns: -1 } }])","Aggregate records from 'store_events' where the event type is 'Return', group by store_id, and count the total returns per store, sorting by totalReturns in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Return' } }, { $group: { _id: '$identifier.store_id', totalReturns: { $sum: 1 } } }, { $sort: { totalReturns: -1 } } ])","Filter 'store_events' for 'Return' events, group by store_id, sum returns, and sort by total returns in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.customer_profile.staff_interaction': true } }, { $group: { _id: '$identifier.store_id', totalInteractions: { $sum: 1 } } } ])","Retrieve the number of customer interactions involving staff, grouped by store ID, from the 'store_events' collection."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.customer_profile.staff_interaction"": true } }, { $group: { _id: ""$identifier.store_id"", totalInteractions: { $sum: 1 } } } ])","Count customer profiles with staff interaction in the 'store_events' collection, grouped by store ID."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile.dwell_time"": { $gt: 30 } })",Retrieve all store_events where customer dwell time exceeds 30 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile.dwell_time': { $gt: 30 } }),Retrieve store_events where customer profile dwell time is greater than 30 minutes.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $match: { ""response.event.customer_profile.basket_items"": { $gt: 1 } } }, { $group: { _id: ""$identifier.store_id"", uniqueAgeGroups: { $addToSet: ""$response.event.customer_profile.age_group"" } } } ]);","Extract unique age groups from customer profiles in the 'store_events' collection where basket items exceed one, grouped by store IDs."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $match: { ""response.event.customer_profile.basket_items"": { $gt: 1 } } }, { $group: { _id: ""$identifier.store_id"", uniqueAgeGroups: { $addToSet: ""$response.event.customer_profile.age_group"" } } } ])","Retrieve unique age groups of customers from 'store_events' for those with more than one basket item, grouped by store ID."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.pos_terminal"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])","Count and group events by 'pos_terminal' in the 'store_events' collection, sorting the results in descending order of event counts."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: ""$identifier.pos_terminal"", totalEvents: { $sum: 1 } }}, { $sort: { totalEvents: -1 }}]);",Count events in the 'store_events' collection by checkout station ('pos_terminal') and sort the results in descending order of event counts.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.type': 'Browse' } }, { $group: { _id: null, totalBrowses: { $sum: 1 } } }])",Count the number of 'Browse' events in the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.type': 'Browse' } }, { $group: { _id: null, totalBrowses: { $sum: 1 } } }])",Count all browsing events in the 'store_events' collection where the event type is 'Browse'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $unwind: ""$response.event.customer_profile"" }, { $group: { _id: { store_id: ""$identifier.store_id"", age_group: ""$response.event.customer_profile.age_group"" }, avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } }])","Unwind customer profiles in 'store_events', group by store_id and age group, and calculate the average dwell time."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: { store_id: ""$identifier.store_id"", age_group: ""$response.event.customer_profile.age_group"" }, avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } } ]);",Aggregate customer profiles in 'store_events' by store_id and age group to find the average dwell time.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""store123"" }).limit(10);",Get 10 documents from the 'store_events' collection where the store ID is 'store123'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""store123"" }).limit(10);",Select up to 10 records from the 'store_events' collection where 'store_id' is 'store123'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.aisle_number"", totalEvents: { $sum: 1 } } }, { $match: { totalEvents: { $gte: 10 } } }, { $sort: { totalEvents: -1 } } ])","Group events in 'store_events' by aisle number, count occurrences, keep aisles with at least ten events, and sort by count in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: ""$identifier.aisle_number"", totalEvents: { $sum: 1 } } }, { $match: { totalEvents: { $gte: 10 } } }, { $sort: { totalEvents: -1 } }]);","Aggregate events from the 'store_events' collection by aisle number, count the total events per aisle, include aisles with at least ten events, and sort by total event count in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.customer_profile.staff_interaction': false } }, { $group: { _id: '$identifier.store_id', totalNoInteraction: { $sum: 1 } } } ])","Get the total number of store events with no staff interaction, grouped by store ID."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 3, ""response.event.type"": ""Purchase"" })",Get all store_events where aisle number is 3 and event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 3, ""response.event.type"": ""Purchase"" })",Get entries from the 'store_events' collection for events in aisle 3 categorized as 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", totalCustomers: { $sum: 1 } } }, { $sort: { totalCustomers: 1 } } ])","Unwind customer profiles from the 'response.event' field in the 'store_events' collection, group by store ID, count the total customers for each store, and sort the results by total customers in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", totalCustomers: { $sum: 1 } } }, { $sort: { totalCustomers: 1 } } ])",Aggregate and sort the total customer profiles by store ID from the 'store_events' collection in increasing order of customer count.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': { $in: ['Purchase', 'Return'] } } }, { $group: { _id: '$identifier.pos_terminal', eventCount: { $sum: 1 } } } ])",Retrieve counts of events grouped by POS terminal for event types 'Purchase' and 'Return' from the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.type"": { $in: [""Purchase"", ""Return""] } } }, { $group: { _id: ""$identifier.pos_terminal"", eventCount: { $sum: 1 } } } ])","Retrieve and count events of type 'Purchase' or 'Return' from 'store_events', grouped by the pos_terminal."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'response.event.customer_profile.basket_items': { $lte: 5 } }).sort({ 'identifier.store_id': 1 });,"Get entries from 'store_events' with five or fewer basket items in the customer profile, sorted by store ID ascending."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.type': { $in: ['Purchase', 'Return', 'Browse'] } }, { 'response.event.customer_profile': 1 })","Retrieve all store_events documents with customer interactions of types Purchase, Return, or Browse, including customer profile details."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$response.event.customer_profile.age_group"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" } } } ]);","Unwind the customer profile in the 'store_events' collection and group by age group, summing the total dwell time for each age group."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$response.event.customer_profile.age_group"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" } } } ]);","Aggregate the customer profiles from 'store_events' by age group, summing the dwell time for each group."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""12345"", ""response.event.type"": ""Purchase"" });",Retrieve all records from 'store_events' where the store ID is '12345' and the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.store_id"": ""12345"", ""response.event.type"": ""Purchase"" });",Retrieve documents from the 'store_events' collection for store ID '12345' where the event type is 'Purchase'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.type"": ""Browse"" } }, { $group: { _id: ""$identifier.store_id"", avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } }, { $sort: { avgDwellTime: -1 } } ])","Retrieve entries from 'store_events' with event type 'Browse', calculate average dwell time by store_id, and sort by highest average dwell time."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Return' } }, { $group: { _id: '$identifier.aisle_number', totalReturns: { $sum: 1 } } } ])","Select all documents from the 'store_events' collection where the event type is 'Return' and group by aisle number, counting the total returns per aisle."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Return' } }, { $group: { _id: '$identifier.aisle_number', totalReturns: { $sum: 1 } } } ])","From the 'store_events' collection, find entries where the event type is 'Return' and count the total returns by aisle number."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.store_id"", totalEvents: { $sum: 1 }, purchaseCount: { $sum: { $cond: [{ $eq: [""$response.event.type"", ""Purchase""] }, 1, 0] } } } }, { $project: { ratio: { $divide: [""$purchaseCount"", ""$totalEvents""] } } } ])","Group the documents in 'store_events' by 'store_id', count total events and purchase events, then calculate the purchase ratio."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.store_id"", totalEvents: { $sum: 1 }, purchaseCount: { $sum: { $cond: [{ $eq: [""$response.event.type"", ""Purchase""] }, 1, 0] } } } }, { $project: { ratio: { $divide: [""$purchaseCount"", ""$totalEvents""] } } } ])","Group 'store_events' by 'store_id', count total events and purchase events, then calculate the purchase-to-event ratio."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $match: { ""response.event.customer_profile.age_group"": ""18-25"" } }, { $group: { _id: ""$identifier.store_id"" } } ])",Count the unique store IDs in 'store_events' for events with customers aged 18 to 25.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile.basket_items"" }, { $group: { _id: ""$response.event.customer_profile.basket_items"", totalCount: { $sum: 1 } } }, { $sort: { totalCount: -1 } }, { $limit: 10 } ])","Analyze customer profiles in the 'store_events' collection by counting unique basket items, sorting the counts in descending order, and retrieving the top 10 items."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.store_events.find({ 'identifier.pos_terminal': 'A1' }).sort({ 'response.event.type': 1 });,"Retrieve all entries from the 'store_events' collection where the pos_terminal is 'A1', sorted by event type in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""A1"" }).sort({ ""response.event.type"": 1 });","Retrieve documents from the 'store_events' collection where the pos_terminal is 'A1', sorted by event type in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: ""$identifier.store_id"", totalAisles: { $addToSet: ""$identifier.aisle_number"" } } }, { $project: { aisleCount: { $size: ""$totalAisles"" } } }])",Group documents in the 'store_events' collection by store_id and count the distinct aisle_number values for each store.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.store_id"", totalAisles: { $addToSet: ""$identifier.aisle_number"" } } }, { $project: { aisleCount: { $size: ""$totalAisles"" } } } ])","Group the 'store_events' collection by store_id, collect unique aisle_number entries for each store, and count the total unique aisles."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Purchase' } }, { $unwind: '$response.event.customer_profile' }, { $group: { _id: '$response.event.customer_profile.age_group', totalPurchases: { $sum: 1 } } } ]);","Count the total number of purchase events in the 'store_events' collection, grouped by customer age group."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.customer_profile.staff_interaction': true } }, { $group: { _id: '$identifier.store_id', avgDwellTime: { $avg: '$response.event.customer_profile.dwell_time' } } }])","Retrieve all records from the 'store_events' collection where staff interactions occurred, and calculate the average dwell time for each store."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.customer_profile.staff_interaction': true } }, { $group: { _id: '$identifier.store_id', avgDwellTime: { $avg: '$response.event.customer_profile.dwell_time' } } } ])","Get the average dwell time for customers interacting with staff, grouped by store ID from the 'store_events' collection."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: { store_id: ""$identifier.store_id"", pos_terminal: ""$identifier.pos_terminal"" }, total_events: { $sum: 1 } } }, { $sort: { total_events: -1 } } ])","Group entries in 'store_events' by store ID and POS terminal, counting events and sorting in descending order by event count."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: { store: ""$identifier.store_id"", pos: ""$identifier.pos_terminal"" }, totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }])","Group the store_events data by store IDs and POS terminals, counting the total events in each group, and sort the results in descending order of total events."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Browse' } }, { $project: { store_id: '$identifier.store_id', aisle_number: '$identifier.aisle_number', customerCount: { $size: '$response.event.customer_profile' } } } ])","Get all store_events where the event type is 'Browse', and return store ID, aisle number, and the number of customers in the customer profile."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $match: { 'response.event.type': 'Browse' }}, { $project: { store_id: '$identifier.store_id', aisle_number: '$identifier.aisle_number', customerCount: { $size: '$response.event.customer_profile' }}}}]);","Find records in the 'store_events' collection with an event type of 'Browse', returning the store ID, aisle number, and the number of customers in the customer profile."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: null, avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } ])",Calculate the average dwell time from customer profiles in the 'store_events' collection.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: null, avgDwellTime: { $avg: ""$response.event.customer_profile.dwell_time"" } } } ]);",Calculate the average dwell time of customers by unwinding the customer profiles in the 'response.event.customer_profile' field.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$response.event.type"", totalCount: { $sum: 1 } } }, { $match: { totalCount: { $gt: 100 } } } ])","Count and group the events in the 'store_events' collection by event type, including only those types with more than 100 occurrences."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$response.event.type"", totalCount: { $sum: 1 } } }, { $match: { totalCount: { $gt: 100 } } } ])","Aggregate event types in 'store_events' and count events for each type, retaining those with totals over 100."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $project: { store_id: ""$identifier.store_id"", eventType: ""$response.event.type"", itemsCount: { $size: ""$response.event.customer_profile"" } } } ]);","Select the store ID, event type, and number of customer profiles from the 'store_events' collection."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.aisle_number"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" }, totalCount: { $sum: 1 } } }, { $project: { avgDwellTime: { $divide: [""$totalDwellTime"", ""$totalCount""] } } } ]);","Group the documents by aisle number, summing the dwell time from customer profiles and counting the documents per aisle, then calculate the average dwell time."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.aisle_number"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" }, totalCount: { $sum: 1 } } }, { $project: { avgDwellTime: { $divide: [""$totalDwellTime"", ""$totalCount""] } } } ]);","Aggregate data in the 'store_events' collection by aisle number to calculate total customer dwell time and event count, then compute average dwell time."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.customer_profile.staff_interaction': { $exists: true } } }, { $group: { _id: '$identifier.store_id', total_returns: { $sum: { $cond: [{ $eq: ['$response.event.type', 'Return'] }, 1, 0] } } } } ]);","Select documents from the 'store_events' collection with a customer profile that includes staff interaction, and group by store ID to count total returns where the event type is 'Return'."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { ""response.event.customer_profile.staff_interaction"": { $exists: true } } }, { $group: { _id: ""$identifier.store_id"", returns: { $sum: { $cond: [{ $eq: [""$response.event.type"", ""Return""]}, 1, 0] } } } } } ]);","Retrieve aggregated data from the 'store_events' collection, summing returns where customer profiles have staff interaction, grouped by store ID."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ 'response.event.type': { $exists: true } }, { 'response.event.customer_profile': 1 })","Retrieve all 'store_events' where 'event.type' exists, including customer profiles with age group, basket items, dwell time, and staff interaction."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({}, { 'response.event.type': 1, 'response.event.customer_profile': 1 })","Retrieve all entries from the 'store_events' collection that include the event type and customer profiles, detailing age group, basket items, dwell time, and staff interactions."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.severity"": ""Critical"" });",Retrieve all documents from the 'events' collection where the event severity is 'Critical'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.severity"": ""Critical"" });",Retrieve events with a severity level of 'Critical' from the 'events' collection.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.camera_id': 'cam123' });,Get all documents from the 'events' collection with camera ID 'cam123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""cam123"" });",Find events for the camera ID 'cam123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.type': 'vehicle' }).limit(10);,Get up to ten documents from the 'events' collection where the event type is 'vehicle'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""vehicle"" }).limit(10);",Select up to ten records from the 'events' collection where the event type is 'vehicle'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Gender': 'Male' });,Retrieve all events where the 'Gender' attribute in the blobs is 'Male'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Gender': 'Male' });,Retrieve events with a 'blobs' attribute labeled 'Gender' set to 'Male'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: new Date(""2023-01-01""), $lte: new Date(""2023-12-31"") } });","Get all events created between January 1, 2023, and December 31, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: new Date(""2023-01-01T00:00:00Z""), $lte: new Date(""2023-12-31T23:59:59Z"") } });","Find all events created between January 1, 2023, and December 31, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.label': 'ABC123' }),Retrieve all events where the label in the event response blobs is 'ABC123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.label': 'ABC123' });,Retrieve events with a blob label of 'ABC123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task456"", ""response.event.severity"": { $ne: ""Low"" } });",Retrieve all events where the 'task_id' is 'task456' and the event's 'severity' is not 'Low'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task456"", ""response.event.severity"": { $ne: ""Low"" } });",Retrieve events with a 'task_id' of 'task456' and exclude those with a 'Low' severity.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.score"": { $gt: 0.8 } })",Retrieve all events where the score of any blob in the response is greater than 0.8.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.score"": { $gt: 0.8 } });",Retrieve events with a score greater than 0.8 in the blobs of the response.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs.attribs.Age"": { $in: [""20-30"", ""30-40""] } });",Retrieve all events where the type is 'person' and the age is either '20-30' or '30-40'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs.attribs.Age"": { $in: [""20-30"", ""30-40""] } })",Retrieve events of type 'person' that have blobs with age attributes of '20-30' or '30-40'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": ""group789"", ""response.event.label"": { $exists: true } });",Retrieve all events where the 'camgroup_id' is 'group789' and the event label exists.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": ""group789"", ""response.event.label"": { $exists: true } });",Retrieve events from the 'events' collection with a 'camgroup_id' of 'group789' that have an event label.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Make"": ""Toyota"" }).sort({ ""response.event.c_timestamp"": -1 });","Retrieve all event documents where the blob attribute 'Make' is 'Toyota', sorted by creation timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Make': 'Toyota' }).sort({ 'response.event.c_timestamp': -1 }),"Retrieve events with a blob attribute 'Make' equal to 'Toyota', sorted by the event's timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""cam001"", ""response.event.blobs.attribs.Color"": ""Red"" }).limit(5);",Select up to five events where the 'camera_id' is 'cam001' and the color attribute in the event blobs is 'Red'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""cam001"", ""response.event.blobs.attribs.Color"": ""Red"" }).limit(5);",Retrieve up to five records from the 'events' collection where 'camera_id' is 'cam001' and the 'Color' attribute in the blobs is 'Red'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.blobs': { $elemMatch: { label: 'XYZ456', score: { $gt: 0.9 } } } })",Find all events with a blob labeled 'XYZ456' and a score above 0.9.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.blobs': { $elemMatch: { label: 'XYZ456', score: { $gt: 0.9 } } } });",Find events with a blob having label 'XYZ456' and score greater than 0.9.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs.attribs.Upper Clothing"": { $ne: ""None"" } });",Retrieve all events where the type is 'person' and the upper clothing attribute is not 'None'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs.attribs.Upper Clothing"": { $ne: ""None"" } });",Retrieve events for individuals where the upper clothing attribute in blobs is specified and not equal to 'None'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task123"", ""response.event.blobs.attribs.Type"": ""Hatchback"" })",Retrieve events with task ID 'task123' that have blobs categorized as 'Hatchback'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs"": { $size: 3 } });",Get all events where the 'blobs' array in 'response.event' has exactly three items.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs': { $size: 3 } });,Find events with exactly three items in the 'blobs' array within the 'response.event' field.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: ISODate(""2023-06-01T00:00:00Z"") } });","Retrieve all events with a timestamp on or after June 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: new Date(""2023-06-01"") } });","Retrieve events with a creation timestamp on or after June 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.label"": ""truck"" }).sort({ ""response.event.c_timestamp"": 1 });","Find all records in the 'events' collection where the label in the event's blobs is 'truck', sorted by the event's timestamp in ascending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.label"": ""truck"" }).sort({ ""response.event.c_timestamp"": 1 });","Retrieve documents from the 'events' collection with blobs labeled 'truck', sorted by event timestamp in chronological order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'identifier.camgroup_id': '<SPECIFIED_GROUP_ID>', 'identifier.task_id': '<SPECIFIED_TASK_ID>', 'response.event.type': 'person' })","Retrieve all events where the 'camgroup_id' matches a specified group ID, the 'task_id' matches a specified task ID, and the event type is 'person'."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","{ 'identifier.camgroup_id': <given_group>, 'identifier.task_id': <specific_task_id>, 'response.event.type': 'person' }","Find events with a specific camgroup ID, task ID, and where the event type is 'person'."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.camgroup_id': { $exists: true } });,Retrieve all events where the 'identifier.camgroup_id' exists.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": { $exists: true } })",Find events that have a camgroup_id in their identifier.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.severity"": ""Critical"" })",Retrieve all events where the severity is Critical.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.severity': 'Critical' }),Get events where the severity is Critical.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""camera_123"" });",Retrieve all events where 'camera_id' is 'camera_123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.camera_id': 'camera_123' });,Get all events where the camera_id is 'camera_123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs"": { $elemMatch: { ""label"": { $exists: true } } } });",Select all documents from the 'events' collection where the event type is 'person' and at least one blob has a label field.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs"": { $elemMatch: { ""label"": { $exists: true } } } });",Fetch events of type 'person' that contain at least one blob with a label attribute.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.c_timestamp': { $gte: new Date('2023-01-01') } });,"Retrieve all events where the 'c_timestamp' is on or after January 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: new Date(""2023-01-01T00:00:00Z"") } })","Retrieve all events with a timestamp on or after January 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.severity"": { $in: [""Low"", ""Medium""] } }).limit(10);",Get up to 10 documents from the 'events' collection where the event severity is 'Low' or 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.severity"": { $in: [""Low"", ""Medium""] } }).limit(10);",Retrieve up to 10 events with severity 'Low' or 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Gender': 'Female' });,Retrieve all events where the gender attribute in the blobs is 'Female'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Gender': 'Female' });,Get events with a 'Female' gender attribute in the blobs.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.age"": ""30-40"" });",Retrieve all events where the age attribute in the blobs is '30-40.'
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task_456"", ""response.event.type"": ""vehicle"" }).sort({ ""response.event.c_timestamp"": -1 });","Retrieve all events where the task ID is 'task_456' and the event type is 'vehicle', sorted by timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task_456"", ""response.event.type"": ""vehicle"" }).sort({ ""response.event.c_timestamp"": -1 });","Get events with task ID 'task_456' and type 'vehicle', sorted by timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.subclass': 'sedan' });,Retrieve all events where the blob subclass is 'sedan'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.subclass"": ""sedan"" });",Find events with blobs that have a subclass of 'sedan'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Make"": ""toyota"", ""response.event.severity"": ""Medium"" });",Retrieve documents from the 'events' collection where the 'Make' attribute in 'blobs.attribs' is 'toyota' and the event's severity is 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Make"": ""toyota"", ""response.event.severity"": ""Medium"" });",Retrieve events with a 'Make' of 'toyota' in 'blobs.attribs' and a 'Medium' severity level.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.label"": ""ABC123"" });",Retrieve all events where the response event label is 'ABC123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.label': 'ABC123' });,Retrieve events with the response label 'ABC123'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": ""group_1"", ""response.event.c_timestamp"": { $lt: new Date(""2023-03-01T00:00:00Z"") } });","Retrieve all events where the 'camgroup_id' is 'group_1' and the event timestamp is before March 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": ""group_1"", ""response.event.c_timestamp"": { $lt: new Date(""2023-03-01"") } });","Get events from the 'events' collection where 'camgroup_id' is 'group_1' and the event's 'c_timestamp' is before March 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Color"": ""red"", ""response.event.type"": ""vehicle"" }).sort({ ""response.event.c_timestamp"": 1 });","Retrieve all events where the event type is 'vehicle' and the color attribute of the blobs is 'red', sorted by creation timestamp in ascending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Color"": ""red"", ""response.event.type"": ""vehicle"" }).sort({ ""response.event.c_timestamp"": 1 });","Find events of type 'vehicle' with a blob attribute color of 'red', sorted by timestamp from earliest to latest."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.label"": ""XYZ456"", ""identifier.camera_id"": ""camera_789"" })",Retrieve all events where the blob label is 'XYZ456' and the camera ID is 'camera_789'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.label"": ""XYZ456"", ""identifier.camera_id"": ""camera_789"" });",Find events with a 'blobs.label' of 'XYZ456' in 'response.event' and a 'camera_id' of 'camera_789' in 'identifier'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: ISODate(""2023-02-01T00:00:00Z""), $lt: ISODate(""2023-03-01T00:00:00Z"") } });","Retrieve all events where the timestamp is between February 1, 2023, and March 1, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: ISODate(""2023-02-01T00:00:00Z""), $lt: ISODate(""2023-03-01T00:00:00Z"") } })","Find events with a timestamp from February 1, 2023, to February 28, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task_123"", ""response.event.severity"": ""Critical"" }).limit(5);",Retrieve the first five events where the task ID is 'task_123' and severity is 'Critical'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task_123"", ""response.event.severity"": ""Critical"" }).limit(5);",Retrieve five events with a task ID of 'task_123' and a severity of 'Critical'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Type': 'Hatchback' });,Retrieve all events where the blob's attribute type is 'Hatchback'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Type"": ""Hatchback"" });",Find events with blob attributes classified as 'Hatchback'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs.attribs.Gender"": ""Male"" }).sort({ ""response.event.c_timestamp"": -1 }).limit(3);","Get the three most recent events of type 'person' where the gender attribute of blobs is 'Male', sorted by event timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs.attribs.Gender"": ""Male"" }).sort({ ""response.event.c_timestamp"": -1 }).limit(3);","Retrieve the latest three events of type 'person' for male individuals from the 'events' collection, sorted by timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.severity': 'Critical', 'response.event.type': 'vehicle' }, { 'response.event.type': 1 })",Fetch all events classified as 'Critical' with the event type attributes for vehicles.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.severity': 'Critical', 'response.event.type': 'vehicle' }, { 'response.event.type': 1 })",Retrieve vehicle-related events with 'Critical' severity from the 'events' collection.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.severity': 'Critical' }),Get all event documents where the severity is 'Critical'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.severity"": ""Critical"" })",Retrieve events marked as 'Critical' in their severity.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.camgroup_id': { $exists: true } });,Get all documents from the 'events' collection where 'camgroup_id' exists in the identifier.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'identifier.camgroup_id': { $exists: true, $ne: null } });",Retrieve all events where 'camgroup_id' in 'identifier' is present.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.type': 'person', 'response.event.blobs': { $elemMatch: { 'label': { $exists: true } } } });",Select all documents from the 'events' collection where the event type is 'person' and at least one blob has a label.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"", ""response.event.blobs"": { $elemMatch: { ""label"": { $exists: true } } } });",Retrieve entries from the 'events' collection where the event type is 'person' and at least one blob has an existing label.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.countDocuments({ 'response.event.severity': 'Low' }),Count documents in the 'events' collection where the event severity is 'Low'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.countDocuments({ 'response.event.severity': 'Low' }),Count the number of entries in the 'events' collection with a severity of 'Low' in the response.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""camera_123"" }).sort({ ""response.event.c_timestamp"": -1 }).limit(10);","Retrieve the latest ten events from the 'events' collection where the camera ID is 'camera_123', sorted by timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""camera_123"" }).sort({ ""response.event.c_timestamp"": -1 }).limit(10);","Retrieve up to ten events from the 'events' collection associated with 'camera_123', sorted by creation timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'vehicle' } }, { $group: { _id: '$response.event.label', count: { $sum: 1 } } } ])",Retrieve all events classified as 'vehicle' and count occurrences of each event label.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'response.event.type': 'vehicle' } }, { $group: { _id: '$response.event.label', count: { $sum: 1 } } }])",Retrieve the count of records from the 'events' collection for each unique label of vehicle events.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task_1"" }, { ""response.event.c_timestamp"": 1, ""response.event.severity"": 1 })","Retrieve entries from the 'events' collection with a task ID of 'task_1', showing the capture timestamp and severity from the event response."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.countDocuments({ ""response.event.blobs.attribs.Gender"": ""Female"" });",Count the documents in the 'events' collection where the Gender attribute in the blobs is 'Female'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.countDocuments({ 'response.event.blobs.attribs.Gender': 'Female' });,Count the number of events where the blobs have a gender attribute set to 'Female'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", avgScore: { $avg: ""$response.event.blobs.score"" } } }])",Retrieve the average score for each blob label from the events in the 'events' collection.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", avgScore: { $avg: ""$response.event.blobs.score"" } } }])",Retrieve unique blob labels from the 'events' collection and average their scores by unwinding the blobs and grouping by label.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.severity"": { $ne: ""Low"" } }).sort({ ""response.event.severity"": 1 }).limit(5);","Select the first five documents from the 'events' collection where the blobs in the response event have severity not classified as 'Low', sorted by the event severity in ascending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.severity': { $ne: 'Low' } }).sort({ 'response.event.severity': 1 }).limit(5);,"Get up to five events that do not have 'Low' severity in their blobs, sorted by event severity in ascending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'person' } }, { $group: { _id: '$response.event.severity', total: { $sum: 1 } } } ])","Retrieve all events of type 'person' from the 'events' collection, grouped by severity level with a count of occurrences for each severity."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'person' } }, { $group: { _id: '$response.event.severity', total: { $sum: 1 } } } ])",Retrieve the count of events grouped by severity for records in the 'events' collection with a response type of 'person'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs"": { $elemMatch: { ""match_id"": { $in: [""match_1"", ""match_2""] } } } });",Retrieve all documents from the 'events' collection where any 'blobs' entry in 'response.event' has a 'match_id' of 'match_1' or 'match_2'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.blobs': { $elemMatch: { match_id: { $in: ['match_1', 'match_2'] } } } });",Find entries in the 'events' collection with 'match_id' of 'match_1' or 'match_2' in any object of the 'blobs' array within 'response.event'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $group: { _id: ""$identifier.camera_id"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])","Group the events by 'camera_id' in the 'events' collection, count the total events per camera, and sort by total events in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $group: { _id: ""$identifier.camera_id"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }])",Count events in the 'events' collection grouped by 'camera_id' and sort by the highest count.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Age"": ""20-30"" }).limit(3);",Select up to three documents from the 'events' collection where the age attribute in the event response blobs is '20-30'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.attribs.Age': '20-30' }).limit(3);,Retrieve up to three events with an Age attribute of '20-30' in the blobs.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.findOne({ ""response.event.type"": ""vehicle"", ""response.event.severity"": ""Medium"" });",Retrieve a single event document from the 'events' collection where the type is 'vehicle' and the severity is 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.findOne({ ""response.event.type"": ""vehicle"", ""response.event.severity"": ""Medium"" });",Find one event record in the 'events' collection with type 'vehicle' and severity 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $match: { ""response.event.blobs.score"": { $gte: 0.75 } } }, { $group: { _id: ""$response.event.blobs.label"", count: { $sum: 1 } } } ])","Unwind the 'blobs' array in the 'event' field of the 'response' object in the 'events' collection, filtering for blobs with a score of 0.75 or higher, and group the results by the label of each blob while counting the occurrences."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $match: { ""response.event.blobs.score"": { $gte: 0.75 } } }, { $group: { _id: ""$response.event.blobs.label"", count: { $sum: 1 } } } ])",Aggregate the 'events' collection to count unique blob labels from the 'blobs' array in 'response.event' where the blob score is at least 0.75.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""identifier.camera_id"": ""camera_456"" } }, { $group: { _id: null, totalCritical: { $sum: { $cond: [{ $eq: [""$response.event.severity"", ""Critical""] }, 1, 0] } } } } ])",Retrieve the total count of events classified as 'Critical' from the 'events' collection for the camera identifier 'camera_456'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""identifier.camera_id"": ""camera_456"" } }, { $group: { _id: null, totalCritical: { $sum: { $cond: [{ $eq: [""$response.event.severity"", ""Critical""] }, 1, 0] } } } } ])","From the 'events' collection, filter entries with the camera ID 'camera_456' and count the number of events with a 'Critical' severity."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'identifier.camgroup_id': <specified_group_id>, 'response.event.type': { $in: ['person', 'vehicle'] } })",Retrieve all documents from the 'events' collection where 'camgroup_id' matches a specified group ID and 'event.type' is 'person' or 'vehicle'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'identifier.camgroup_id': <your_camgroup_id>, 'response.event.type': { $in: ['person', 'vehicle'] } })","Retrieve entries from the 'events' collection where 'camgroup_id' matches a specific value and 'event.type' is either 'person' or 'vehicle', including all related event response information."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.type': 'person' });,Retrieve all events where the event type is 'person'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.type': 'person' }),Find events with type 'person' in the response.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.severity': 'Critical' }).sort({ 'response.event.c_timestamp': -1 });,"Retrieve all events with Critical severity, sorted by timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.severity': 'Critical' }).sort({ 'response.event.c_timestamp': -1 });,"Find Critical severity events in the 'events' collection, sorted by timestamp from newest to oldest."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""identifier.camgroup_id"": ""group1"" } }, { $group: { _id: ""$identifier.task_id"", totalEvents: { $sum: 1 } } } ]);","Retrieve all events with 'camgroup_id' as 'group1' from the 'events' collection, and group them by 'task_id', counting the number of events per task."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'identifier.camgroup_id': 'group1' } }, { $group: { _id: '$identifier.task_id', count: { $sum: 1 } } } ])","In the 'events' collection, count the occurrences of each unique 'task_id' where 'camgroup_id' is 'group1'."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Gender"": ""Female"", ""response.event.type"": ""person"" })",Retrieve all events where the type is 'person' and the gender attribute of the blobs is 'Female'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Gender"": ""Female"", ""response.event.type"": ""person"" });",Retrieve events where the type is 'person' and the gender attribute in blobs is 'Female'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $match: { ""response.event.blobs.attribs.Color"": ""Red"" } }, { $group: { _id: ""$response.event.blobs.attribs.Make"", totalCount: { $sum: 1 } } } ])","Unwind the blobs array from the event response in the 'events' collection, filter blobs with the color attribute 'Red', and group by the make attribute to calculate the total count for each make."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $match: { ""response.event.blobs.attribs.Color"": ""Red"" } }, { $group: { _id: ""$response.event.blobs.attribs.Make"", totalCount: { $sum: 1 } } } ])","Expand the blobs field in the event responses from the 'events' collection, filter for blobs with the color attribute 'Red', and group the results by the make attribute while counting occurrences for each make."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.camera_id': { $exists: true } });,Find all documents in the 'events' collection where 'camera_id' exists in the 'identifier' object.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.camera_id': { $exists: true } });,Retrieve events that have a 'camera_id' in their identifier.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: ISODate(""2023-01-01""), $lt: ISODate(""2024-01-01"") } });","Find all documents in the 'events' collection where the event timestamp is between January 1, 2023, and December 31, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.c_timestamp"": { $gte: ISODate(""2023-01-01T00:00:00Z""), $lt: ISODate(""2023-12-31T00:00:00Z"") } })","Retrieve events created between January 1, 2023, and December 30, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""response.event.severity"": ""Critical"" } }, { $group: { _id: ""$identifier.camgroup_id"", criticalEvents: { $sum: 1 } } }, { $sort: { criticalEvents: -1 } } ])","Group events by 'camgroup_id' and count the total number of critical events, then sort the results in descending order by the count."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'response.event.severity': 'Critical' }}, { $group: { _id: '$identifier.camgroup_id', criticalEvents: { $count: {} } }}, { $sort: { criticalEvents: -1 }}])","Count and aggregate critical events from the 'events' collection by 'camgroup_id', ordering results from highest to lowest count."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""response.event.type"": ""vehicle"" } }, { $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", totalVehicles: { $sum: 1 }, avgScore: { $avg: ""$response.event.blobs.score"" } } } ])","Retrieve all documents from the 'events' collection where the event type is 'vehicle', unwind the blobs array, and group by blob label to count total vehicles and calculate the average confidence score."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'vehicle' } }, { $unwind: '$response.event.blobs' }, { $group: { _id: '$response.event.blobs.label', totalCount: { $sum: 1 }, averageScore: { $avg: '$response.event.blobs.score' } } } ]);","From the 'events' collection, retrieve events of type 'vehicle', unwind their associated blobs, and aggregate the data to count total vehicles and calculate the average confidence score for each blob label."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": { $in: [""person"", ""vehicle""] } });",Retrieve all documents from the 'events' collection where the event type is 'person' or 'vehicle'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": { $in: [""person"", ""vehicle""] } });",Find event records in the 'events' collection that are of type 'person' or 'vehicle'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""identifier.task_id"": ""task1"" } }, { $project: { _id: 0, camera_id: ""$identifier.camera_id"", severity: ""$response.event.severity"" } } ])","Retrieve records from the 'events' collection where the task ID is 'task1', showing only the camera ID and event severity, excluding the document ID."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'identifier.task_id': 'task1' } }, { $project: { _id: 0, camera_id: '$identifier.camera_id', severity: '$response.event.severity' } }])","Retrieve events with task ID 'task1', showing the camera ID and event severity, excluding the internal document ID."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.label': { $regex: /^AB/ } });,Retrieve all events where the label of the blobs starts with 'AB'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.label': { $regex: /^AB/ } });,Retrieve events where the blobs have a label starting with 'AB'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $group: { _id: ""$response.event.severity"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }]);","Group events by severity, count the number of events for each severity level, and sort the results in descending order by the count."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $group: { _id: ""$response.event.severity"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }])","Aggregate the events by severity, counting the total occurrences for each severity and sorting the results in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.type"": ""person"" }, { ""response.event.label"": 1, ""response.event.c_timestamp"": 1 }).sort({ ""response.event.c_timestamp"": 1 });","Fetch all documents from the 'events' collection where the event type is 'person', returning only the event label and timestamp, and sort the results by timestamp in ascending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'response.event.type': 'person' } }, { $project: { label: '$response.event.label', timestamp: '$response.event.c_timestamp' } }, { $sort: { timestamp: 1 } }])","Retrieve labels and timestamps of events from the 'events' collection where the event type is 'person', sorted by timestamps from earliest to latest."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Age"": { $in: [""30-40"", ""40-50""] } });",Select all documents from the 'events' collection where the 'Age' attribute in the 'blobs' array under 'response.event' is either '30-40' or '40-50'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.blobs.attribs.Age': { $in: ['30-40', '40-50'] } });",Retrieve events that have blobs with age categories '30-40' or '40-50' in the response.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'vehicle' } }, { $unwind: '$response.event.blobs' }, { $match: { 'response.event.blobs.attribs.Type': 'SUV' } }, { $group: { _id: '$response.event.blobs.attribs.Make', count: { $sum: 1 } } } ])","Filter events to include only vehicle types, unwind the blobs, narrow down to blobs with an attribute type of 'SUV', and group the results by the 'Make' attribute while counting occurrences."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'vehicle' } }, { $unwind: '$response.event.blobs' }, { $match: { 'response.event.blobs.attribs.Type': 'SUV' } }, { $group: { _id: '$response.event.blobs.attribs.Make', count: { $sum: 1 } } } ])","Select records from the 'events' collection where the event type is 'vehicle', unwind the blobs, filter for 'SUV' type blobs, and group by the 'Make' attribute while counting occurrences."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": ""group2"", ""response.event.severity"": ""Medium"" });",Retrieve all events where the 'camgroup_id' is 'group2' and the event severity is 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camgroup_id"": ""group2"", ""response.event.severity"": ""Medium"" })",Retrieve events with a camgroup_id of 'group2' and a severity of 'Medium'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""identifier.camgroup_id"": ""group1"" } }, { $lookup: { from: ""events"", localField: ""identifier.task_id"", foreignField: ""identifier.task_id"", as: ""related_events"" } }, { $project: { _id: 0, currentEventType: ""$response.event.type"", relatedEventType: ""$related_events.response.event.type"" } } ])","Retrieve types of events from the 'events' collection where the group identifier is 'group1', along with related events having the same task identifier, without including document IDs."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""identifier.camgroup_id"": ""group1"" } }, { $lookup: { from: ""events"", localField: ""identifier.task_id"", foreignField: ""identifier.task_id"", as: ""related_events"" } }, { $project: { _id: 0, ""currentEventType"": ""$response.event.type"", ""relatedEventType"": ""$related_events.response.event.type"" } } ]);","Find event records in the 'events' collection for 'group1', and project the types of these events along with the types of related events sharing the same task identifier."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","{ 'response.event.severity': 'Critical', 'identifier.camera_id': 123 }",Retrieve all documents from the 'events' collection where the event's severity is 'Critical' and the camera_id is 123.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.severity': 'Critical', 'identifier.camera_id': 123 })",Find all events with 'Critical' severity linked to camera ID 123.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.severity': 'Critical' } }, { $group: { _id: '$identifier.camera_id', eventCount: { $sum: 1 } } } ])","Retrieve all critical events from the 'events' collection, grouped by camera_id, with a count of events per camera."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.severity': 'Critical' } }, { $group: { _id: '$identifier.camera_id', count: { $sum: 1 } } } ])","Retrieve the count of 'Critical' severity events from the 'events' collection, grouped by camera_id."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'response.event.severity': 'Medium' } }, { $project: { 'label': '$response.event.label', 'severity': '$response.event.severity', 'type': '$response.event.type' } }])","Select the label, severity, and type of events with a severity level of 'Medium' from the 'events' collection."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.severity': 'Medium' } }, { $project: { label: '$response.event.label', severity: '$response.event.severity', type: '$response.event.type' } } ])","Retrieve labels, severities, and types of events from the 'events' collection, only for events with medium severity."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $group: { _id: ""$identifier.camgroup_id"", highestSeverity: { $max: ""$response.event.severity"" } } }, { $sort: { highestSeverity: -1 } } ])","Group events by 'camgroup_id' from the 'identifier' field, find the highest severity level from 'response.event.severity' for each group, and sort these groups by highest severity in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $group: { _id: ""$identifier.camgroup_id"", highestSeverity: { $max: ""$response.event.severity"" } } }, { $sort: { highestSeverity: -1 } } ])","Group the 'events' collection by 'camgroup_id', calculate the maximum severity from 'response.event.severity' for each group, and sort the results in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", avgScore: { $avg: ""$response.event.blobs.score"" } } }, { $match: { avgScore: { $gt: 0.75 } } }])","Unwind the 'blobs' array in 'response.event' from the 'events' collection, group by 'label', calculate the average 'score', and filter for groups with an average score greater than 0.75."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", avgScore: { $avg: ""$response.event.blobs.score"" } } }, { $match: { avgScore: { $gt: 0.75 } } }])","Unwind the 'blobs' array in the 'response.event' section of the 'events' collection, group by 'label', calculate the average 'score' for each label, and return labels with an average score greater than 0.75."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'response.event.type': 'person' } }, { $lookup: { from: 'other_collection', localField: 'identifier.task_id', foreignField: 'related_task_id', as: 'related_tasks' } }, { $project: { identifier: 1, response: 1, related_tasks: 1 } }])","Select all documents from the 'events' collection where the event type is 'person', and include the identifier, response, and related tasks from 'other_collection' using task_id."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'person' } }, { $lookup: { from: 'other_collection', localField: 'identifier.task_id', foreignField: 'related_task_id', as: 'related_tasks' } }, { $project: { identifier: 1, response: 1, related_tasks: 1 } } ])","Find events of type 'person' in the 'events' collection and join with 'other_collection' to get related tasks based on task IDs, including identifier, response information, and related task details."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $match: { ""response.event.blobs.attribs.Gender"": ""Female"" } }, { $group: { _id: ""$response.event.blobs.attribs.Age"", count: { $sum: 1 } } } ])","Unwind the 'blobs' array in the 'response.event' field of the 'events' collection, filter for documents where 'attribs.Gender' is 'Female', and group by 'attribs.Age' to count occurrences in each age group."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""response.event.c_timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: null, totalEvents: { $sum: 1 } } } ]);","Count all events in the 'events' collection where the creation timestamp is between January 1, 2023, and December 31, 2023."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""response.event.c_timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: null, totalEvents: { $sum: 1 } } } ])",Retrieve the total count of events from the 'events' collection that occurred in 2023.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $sort: { 'response.event.c_timestamp': -1 } }, { $group: { _id: '$identifier.camera_id', latestEvent: { $first: '$$ROOT' } } } ])","Sort events by creation timestamp in descending order, and group by camera ID, keeping only the most recent event for each camera."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $sort: { 'response.event.c_timestamp': -1 } }, { $group: { _id: '$identifier.camera_id', latestEvent: { $first: '$$ROOT' } } } ])","Retrieve the latest event for each camera from the 'events' collection, sorted by event timestamp in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", blobCount: { $sum: 1 }, avgScore: { $avg: ""$response.event.blobs.score"" } } }, { $sort: { blobCount: -1 } } ])","Unwind the blobs in 'response.event.blobs', group by label, count the blobs, calculate the average score, and sort by blob count in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", blobCount: { $sum: 1 }, avgScore: { $avg: ""$response.event.blobs.score"" } } }, { $sort: { blobCount: -1 } } ])","Unwind the 'blobs' array from the 'events' collection, group by their labels to count occurrences and calculate the average score, sorted by the count in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $project: { date: { $dateToString: { format: ""%Y-%m-%d"", date: ""$response.event.c_timestamp"" } }, type: ""$response.event.type"" } }, { $group: { _id: ""$date"", eventCount: { $sum: 1 } } } ])","Select the date and event type from the 'events' collection, group by date, and count the number of events per day."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $project: { date: { $dateToString: { format: '%Y-%m-%d', date: '$response.event.c_timestamp' } }, type: '$response.event.type' } }, { $group: { _id: '$date', eventCount: { $sum: 1 } } }])",Retrieve event types and count of events grouped by date from the 'events' collection.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $group: { _id: ""$identifier.camgroup_id"", eventTypes: { $addToSet: ""$response.event.type"" } } }, { $match: { eventTypes: ""vehicle"" } } ])","Group events by camgroup_id and list unique event types, filtering for groups that include the event type 'vehicle'."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $group: { _id: ""$identifier.camgroup_id"", eventTypes: { $addToSet: ""$response.event.type"" } } }, { $match: { eventTypes: ""vehicle"" } } ])","Group the events by camgroup_id, collecting distinct event types, and find groups where 'vehicle' is one of the event types."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $unwind: ""$response.event.blobs"" }, { $group: { _id: { camera: ""$identifier.camera_id"", severity: ""$response.event.blobs.severity"" }, count: { $sum: 1 } } } }])","Unwind the 'blobs' array in the 'event' object of the 'response' field in the 'events' collection, grouping by 'camera_id' and 'severity' of each blob, counting occurrences for each combination."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $group: { _id: { camera: ""$identifier.camera_id"", severity: ""$response.event.blobs.severity"" }, count: { $sum: 1 } } } ]);","Unwind the 'blobs' array in the 'event' object under 'response' from the 'events' collection, and aggregate by 'camera_id' and blob severity, counting the total for each unique pair."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $lookup: { from: ""users"", localField: ""response.event.blobs.match_id"", foreignField: ""user_id"", as: ""matched_users"" } }, { $unwind: ""$matched_users"" }, { $group: { _id: ""$matched_users.username"", totalBlobs: { $sum: 1 } } } ])","Join the 'events' collection with the 'users' collection using 'match_id' from 'response.event.blobs' and 'user_id' from 'users', unwind the results, and group by username while counting the total number of blobs per user."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $lookup: { from: ""users"", localField: ""response.event.blobs.match_id"", foreignField: ""user_id"", as: ""matched_users"" } }, { $unwind: ""$matched_users"" }, { $group: { _id: ""$matched_users.username"", totalBlobs: { $sum: 1 } } } ]);",Count the total blobs in the 'events' collection for each user by joining with the 'users' collection based on the match_id in 'response.event.blobs' and user_id in 'users'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'vehicle' } }, { $group: { _id: '$response.event.blobs.attribs.Make', numVehicles: { $sum: 1 } } }, { $sort: { numVehicles: -1 } } ])","Select all events where the event type is 'vehicle', group by vehicle make, and count the number of vehicles for each make, sorted by count in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { 'response.event.type': 'vehicle' } }, { $group: { _id: '$response.event.blobs.attribs.Make', total: { $sum: 1 } } }, { $sort: { total: -1 } } ])","Retrieve and count vehicle type events from the 'events' collection, grouping by vehicle make and sorting by the highest count."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $project: { cameraId: ""$identifier.camera_id"", severity: ""$response.event.severity"" } }, { $group: { _id: ""$cameraId"", severities: { $addToSet: ""$severity"" } } } ]);","Select the 'camera_id' from the 'identifier' field and 'severity' from the 'response.event' field for each document in the 'events' collection, then group by 'camera_id' to get unique severities for each camera."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $project: { cameraId: ""$identifier.camera_id"", severity: ""$response.event.severity"" } }, { $group: { _id: ""$cameraId"", severities: { $addToSet: ""$severity"" } } } ]);","From the 'events' collection, retrieve 'camera_id' from 'identifier' and 'severity' from 'response.event', grouping the results by 'camera_id' to obtain distinct severities for each camera."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $match: { ""response.event.c_timestamp"": { $gt: ISODate(""2023-06-01T00:00:00Z"") } } }, { $group: { _id: ""$identifier.task_id"", eventCount: { $sum: 1 } } }, { $sort: { eventCount: -1 } } ])","Retrieve event counts from the 'events' collection where the timestamp 'c_timestamp' is after June 1, 2023, grouped by 'task_id', sorted in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $match: { 'response.event.c_timestamp': { $gt: ISODate('2023-06-01T00:00:00Z') } } }, { $group: { _id: '$identifier.task_id', eventCount: { $sum: 1 } } }, { $sort: { eventCount: -1 } }])","Retrieve events from the 'events' collection with a timestamp after June 1, 2023, grouped by 'task_id' and sorted by event count in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $project: { label: ""$response.event.label"", camgroup: ""$identifier.camgroup_id"" } }, { $group: { _id: ""$camgroup"", labels: { $addToSet: ""$label"" } } } ])","Select the 'label' from 'response.event' and 'camgroup_id' from 'identifier' in the 'events' collection, then group by 'camgroup_id' and aggregate unique labels into an array."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $project: { label: ""$response.event.label"", camgroup: ""$identifier.camgroup_id"" } }, { $group: { _id: ""$camgroup"", distinct_labels: { $addToSet: ""$label"" } } } ])","Select distinct 'label' from 'response.event' in 'events' collection, grouped by 'camgroup_id' from 'identifier'."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([{ $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.attribs.Color"", totalScore: { $sum: ""$response.event.blobs.score"" } } } }])","Unwind the 'blobs' array in the 'event' objects of the 'response' field in the 'events' collection, then group by the 'Color' attribute in 'attribs' and sum the scores of the blobs."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.attribs.Color"", totalScore: { $sum: ""$response.event.blobs.score"" } } } ])","Unwind the 'blobs' array in the 'event' section of the 'response' field from the 'events' collection and group by the 'Color' attribute in 'attribs', summing the scores for each color."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'identifier.camgroup_id': '<SPECIFIC_CAMGROUP_ID>', 'identifier.task_id': '<SPECIFIC_TASK_ID>', 'identifier.camera_id': '<SPECIFIC_CAMERA_ID>' }, { 'response': 1 })","Retrieve all events where the 'identifier' has a specific 'camgroup_id', 'task_id', and 'camera_id', and include the 'response' details."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'identifier.camgroup_id': <camgroup_id>, 'identifier.task_id': <task_id>, 'identifier.camera_id': <camera_id> }, { 'response': 1 })","Find events filtered by 'camgroup_id', 'task_id', and 'camera_id', including their 'response' details."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.status': 'OnTime' }),Get all transit events where the event status is 'OnTime'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""OnTime"" });",Find transit events where the event status is 'OnTime'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""A1"" });",Get all entries from the 'transit_events' collection with route ID 'A1'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""A1"" });",Find transit events with a route_id of 'A1'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""ArrivalDeparture"" })",Get all transit events where the event type is 'ArrivalDeparture'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.type': 'ArrivalDeparture' }),Find transit events where the event type is 'ArrivalDeparture'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.fare_amount"": { $gt: 15 } });",Find documents in 'transit_events' where any passenger's fare amount exceeds 15.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': 'Central Station' });,Retrieve all transit events where the next stop is 'Central Station'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': 'Central Station' });,Get entries from 'transit_events' where the next stop is 'Central Station'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.ticket_id': { $regex: '^[A-Z]{3}[0-9]{6}$' } });,Find all transit events where passenger ticket IDs match the pattern of three uppercase letters followed by six digits.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.ticket_id"": { $regex: ""^[A-Z]{3}[0-9]{6}$"" } })",Retrieve transit_events entries with passenger ticket IDs in the format of three letters followed by six digits.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.vehicle_id"": ""V12345"", ""response.event.status"": ""Delayed"" });",Retrieve all transit events where the vehicle ID is 'V12345' and the status is 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.vehicle_id"": ""V12345"", ""response.event.status"": ""Delayed"" });",Retrieve delayed events for the vehicle 'V12345' in the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.boarding_time"": { $lte: new Date(""2023-10-01T14:00:00Z"") } });","Retrieve all transit events where passenger boarding times are on or before October 1, 2023, at 14:00 UTC."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.boarding_time': { $lte: new Date('2023-10-01T14:00:00Z') } });,"Retrieve entries from the 'transit_events' collection where any passenger's boarding time is on or before 2 PM UTC on October 1, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.destination_stop': 'Downtown' });,Retrieve all records from the 'transit_events' collection where any passenger's destination stop is 'Downtown.'
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.destination_stop': 'Downtown' });,Get transit events with at least one passenger heading to 'Downtown.'
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.coordinates"": { $exists: true, $ne: [] } })",Retrieve records from the 'transit_events' collection with non-empty 'coordinates' in 'response.event.location'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'identifier.route_id': { $in: [ 'A1', 'B2', 'C3' ] } });","Retrieve all documents from the 'transit_events' collection where 'route_id' in 'identifier' is either 'A1', 'B2', or 'C3'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": { $in: [""A1"", ""B2"", ""C3""] } });","Retrieve records from the 'transit_events' collection where 'route_id' is either 'A1', 'B2', or 'C3'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.passengers': { $exists: true, $eq: [] } });",Select all documents from the 'transit_events' collection where the event response has no passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers': { $size: 0 } });,Retrieve transit_events where the passenger list in the event response is empty.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Incident"", ""response.event.status"": ""Cancelled"" });",Select documents from the 'transit_events' collection where the event type is 'Incident' and the status is 'Cancelled'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Incident"", ""response.event.status"": ""Cancelled"" });",Retrieve records from the 'transit_events' collection where the event type is 'Incident' and the status is 'Cancelled'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.estimated_arrival': { $gt: new Date() } });,Retrieve all transit events where the estimated arrival time is in the future.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.estimated_arrival"": { $gt: new Date() } });",Retrieve transit_events records with estimated arrival times later than now.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.vehicle_id"": { $ne: null } });",Find entries in the 'transit_events' collection that have a defined 'vehicle_id' in the 'identifier'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.fare_amount': { $lt: NumberDecimal('5.00') } }),Retrieve all transit events where passenger fare amounts are below $5.00.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.fare_amount': { $lt: Decimal('5.00') } });,Retrieve transit events where passenger fare is less than $5.00.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.status': 'Delayed' }).sort({ 'response.event.location.estimated_arrival': 1 }).limit(5);,"Retrieve the first five transit events where the event status is 'Delayed', sorted by estimated arrival time in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""Delayed"" }).sort({ ""response.event.location.estimated_arrival"": 1 }).limit(5);","Select up to five delayed transit events, ordered by estimated arrival time."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.boarding_time': { $gte: new Date('2023-09-30') } });,"Retrieve all transit events where passengers' boarding time is on or after September 30, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.boarding_time': { $gte: new Date('2023-09-30') } });,"Find transit events with passenger boarding times on or after September 30, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.next_stop"": ""Uptown"", ""response.event.status"": { $ne: ""Cancelled"" } })",Retrieve all transit events where the next stop is 'Uptown' and the event status is not 'Cancelled'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.next_stop"": ""Uptown"", ""response.event.status"": { $ne: ""Cancelled"" } })","Get all transit events with 'Uptown' as the next stop, excluding those with a status of 'Cancelled'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""OnTime"" })",Get all transit events where the event status is 'OnTime'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.status': 'OnTime' }),Find entries in the 'transit_events' collection with an 'OnTime' status in the event response.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""B123"" })",Retrieve all transit events for route 'B123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""B123"" });",Get transit events with route ID 'B123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""ArrivalDeparture"", ""response.event.status"": ""Delayed"" });",Retrieve all transit events where the event type is 'ArrivalDeparture' and the status is 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""ArrivalDeparture"", ""response.event.status"": ""Delayed"" });",Retrieve transit_events where the event type is 'ArrivalDeparture' and the status is 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.fare_amount': { $lt: 10 } });,Find all transit events where passengers' fare amounts are less than 10.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.fare_amount"": { $lt: 10 } });",Retrieve entries from 'transit_events' where passenger fare amounts are less than 10.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.vehicle_id"": ""V456"", ""response.event.status"": ""Cancelled"" });",Get all transit events where the vehicle ID is 'V456' and the event status is 'Cancelled'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.vehicle_id"": ""V456"", ""response.event.status"": ""Cancelled"" });",Retrieve entries from the 'transit_events' collection with a 'vehicle_id' of 'V456' and a 'Cancelled' event status.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.ticket_id': { $regex: '^[A-Z]{3}' } });,Retrieve all documents from the 'transit_events' collection where the 'ticket_id' of passengers starts with three uppercase letters.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.ticket_id"": { $regex: ""^[A-Z]{3}.*"" } });",Find transit event records in the 'transit_events' collection that have a 'ticket_id' starting with three capital letters.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': 'Central Station' });,Retrieve all entries in the 'transit_events' collection with the next stop as 'Central Station.'
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.next_stop"": ""Central Station"" });",Retrieve transit events with 'Central Station' as the next stop.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Incident"", ""response.event.passengers.0"": { $exists: true } });",Retrieve records from the 'transit_events' collection with an event of type 'Incident' that has at least one passenger.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.location.coordinates': { $exists: true, $ne: [] } });",Select all records from the 'transit_events' collection where the event has location coordinates.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.coordinates"": { $ne: [] } });",Retrieve entries from the 'transit_events' collection that have non-empty coordinates in the event's location.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.destination_stop"": ""Downtown"" });",Get all transit events where passengers are going to 'Downtown'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.destination_stop': 'Downtown' });,Find transit events where 'Downtown' is the destination stop for passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.estimated_arrival"": { $gte: new Date('2023-10-01') } });","Retrieve all transit_events where the estimated arrival time is on or after October 1, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.estimated_arrival"": { $gte: new Date(""2023-10-01T00:00:00Z"") } });","Retrieve records from the 'transit_events' collection with an estimated arrival date on or after October 1, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.boarding_time': { $lt: new Date('2023-10-01T12:00:00Z') } });,"Retrieve all documents from the 'transit_events' collection where passenger boarding times are before October 1, 2023, at noon UTC."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.boarding_time"": { $lt: new Date(""2023-10-01T12:00:00Z"") } })","Retrieve transit events where passenger boarding times are before 12:00 PM UTC on October 1, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.estimated_arrival"": { $lt: new Date(""2023-10-01T12:00:00Z"") }, ""response.event.status"": ""Delayed"" });","Find all documents in the 'transit_events' collection where 'estimated_arrival' is before October 1, 2023, at 12:00 PM UTC, and 'status' is 'Delayed'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.estimated_arrival"": { $lt: new Date(""2023-10-01T12:00:00Z"") }, ""response.event.status"": ""Delayed"" });","Find transit events where the estimated arrival time is before noon on October 1, 2023, UTC, and the status is 'Delayed'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.findOne({ ""identifier.vehicle_id"": ""V456"" }, { ""response.event.passengers"": 1, ""response.event.status"": 1 })","Retrieve one document from the 'transit_events' collection where 'vehicle_id' is 'V456', showing only the 'passengers' and 'status' from the event."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.findOne({ ""identifier.vehicle_id"": ""V456"" }, { ""response.event.passengers"": 1, ""response.event.status"": 1 })","Retrieve a single record from 'transit_events' where 'vehicle_id' is 'V456', including only 'passengers' details and 'status' of the event."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.passengers.boarding_time': { $gte: new Date('2023-10-01T05:00:00Z'), $lt: new Date('2023-10-01T09:00:00Z') } })","Retrieve all transit events where passengers boarded between 5:00 AM and 9:00 AM on October 1, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.boarding_time"": { $gte: new Date(""2023-10-01T05:00:00Z""), $lt: new Date(""2023-10-01T09:00:00Z"") } })","Retrieve transit events with passenger boarding times between 5 AM and 9 AM on October 1, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": { $in: [""OnTime"", ""Delayed""] } }).sort({ ""response.event.location.estimated_arrival"": 1 });","Retrieve all transit events with status 'OnTime' or 'Delayed', sorted by estimated arrival time in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.status': { $in: ['OnTime', 'Delayed'] } }).sort({ 'response.event.location.estimated_arrival': 1 });","Retrieve transit events with status 'OnTime' or 'Delayed', sorted by estimated arrival time in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers': { $size: 2 } });,Find transit_events documents where the event has exactly two passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers': { $size: 2 } });,Retrieve entries from 'transit_events' where the event has exactly two passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Maintenance"", ""response.event.passengers"": { $size: 0 } });",Select all records from 'transit_events' where the event type is 'Maintenance' and there are no passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Maintenance"", ""response.event.passengers"": { $size: 0 } });",Retrieve documents from the 'transit_events' collection indicating a 'Maintenance' event with no passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.next_stop"": { $regex: /Station/ } });",Retrieve all documents from the 'transit_events' collection where the next stop in the event's location contains 'Station'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': { $regex: 'Station' } });,Find transit events where the next stop is a location matching 'Station'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.status': { $in: ['OnTime', 'Delayed', 'Cancelled'] }, 'identifier.route_id': { $exists: true }, 'identifier.vehicle_id': { $exists: true } })","Select all entries from 'transit_events' where the event status is 'OnTime', 'Delayed', or 'Cancelled', and each entry includes the vehicle's route and identification."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.status': { $in: ['OnTime', 'Delayed', 'Cancelled'] } })","Retrieve all records from the 'transit_events' collection with events having a status of 'OnTime', 'Delayed', or 'Cancelled'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.status': 'Delayed' });,Retrieve all transit events where the event status is 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.status': 'Delayed' }),Get entries from 'transit_events' where the event status is 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""R123"" });",Retrieve all transit events where the route ID is 'R123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""R123"" });",Get transit_events with route_id 'R123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.type': 'Incident', 'response.event.passengers.0': { $exists: true } });",Fetch all documents from the 'transit_events' collection where the event type is 'Incident' and the passenger array is not empty.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Incident"", ""response.event.passengers"": { $exists: true, $ne: [] } })",Retrieve entries from the 'transit_events' collection for incidents with one or more passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.fare_amount"": { $gte: NumberDecimal('2.50') } }).sort({ ""response.event.location.estimated_arrival"": 1 });","Find transit events with passenger fare amounts of at least $2.50, sorted by estimated arrival times from earliest to latest."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.status': 'OnTime' } }, { $group: { _id: '$identifier.route_id', totalOnTime: { $sum: 1 } } }])","Retrieve all records from 'transit_events' where the event status is 'OnTime', and count occurrences of each unique route_id as totalOnTime."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.status': 'OnTime' } }, { $group: { _id: '$identifier.route_id', totalOnTime: { $sum: 1 } } }])",Retrieve the count of on-time events grouped by route_id from the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } }]);","Aggregate transit events by unwinding passenger data and group by each destination stop, calculating the total fare for each."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } }]);",Unwind the passengers from the event responses in the transit events collection and group them by destination stops to sum the total fare for each stop.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$identifier.vehicle_id"", avgFare: { $avg: ""$response.event.passengers.fare_amount"" } } }, { $match: { avgFare: { $gt: 3 } } }]);","Calculate the average fare amount for passengers grouped by vehicle from the 'transit_events' collection, returning groups where the average fare exceeds 3."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$identifier.vehicle_id"", avgFare: { $avg: ""$response.event.passengers.fare_amount"" } } }, { $match: { avgFare: { $gt: 3 } } }]);","Group the 'transit_events' data by vehicle ID, calculate the average fare of passengers, and filter for groups where the average fare is greater than 3."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.location.next_stop': 'Main St' }, { 'identifier.vehicle_id': 1, 'response.event.location.coordinates': 1 })",Get vehicle IDs and location coordinates from 'transit_events' where the next stop is 'Main St'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.location.next_stop': 'Main St' }, { 'identifier.vehicle_id': 1, 'response.event.location.coordinates': 1 })",Get vehicle IDs and location coordinates from transit events where the next stop is 'Main St'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.boarding_time': { $gte: new Date('2023-01-01') } }).sort({ 'response.event.passengers.boarding_time': -1 });,"Retrieve transit_events with passenger boarding times from January 1, 2023, onward, sorted by boarding time in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""R456"" }).sort({ ""response.event.location.estimated_arrival"": 1 }).limit(5);","Retrieve the first five records from the 'transit_events' collection where the route ID is 'R456', ordered by estimated arrival time in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""R456"" }).sort({ ""response.event.location.estimated_arrival"": 1 }).limit(5);","Retrieve up to five documents from the 'transit_events' collection with route ID 'R456', sorted by estimated arrival times in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } }, { $sort: { totalFare: -1 } }])","Unwind the passenger data from 'transit_events', group by 'ticket_id' to calculate total fare, and sort by total fare in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } }, { $sort: { totalFare: -1 } }]);",Aggregate total fare by 'ticket_id' from the 'transit_events' collection's passenger records and sort by total fare in descending order.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'ArrivalDeparture' } }, { $group: { _id: '$identifier.route_id', totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } }]);","Retrieve all transit events categorized as 'ArrivalDeparture', group by route ID, count the total events for each route, and sort the results in descending order by event count."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'ArrivalDeparture' } }, { $group: { _id: '$identifier.route_id', totalOccurrences: { $sum: 1 } } }, { $sort: { totalOccurrences: -1 } }]);","Retrieve entries from the 'transit_events' collection where the event type is 'ArrivalDeparture', group by route ID to count occurrences, and sort the results in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.coordinates"": { $geoWithin: { $box: [[-75.0, 40.0], [-74.0, 41.0]] } } }});","Retrieve all transit events where the event's location coordinates are within the box defined by the southwest corner (-75.0, 40.0) and the northeast corner (-74.0, 41.0)."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.coordinates"": { $geoWithin: { $box: [[-75.0, 40.0], [-74.0, 41.0]] } } });","Find transit_events records with event location coordinates within the box defined by corners at longitude -75.0, latitude 40.0 and longitude -74.0, latitude 41.0."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalTrips: { $sum: 1 } } }, { $match: { totalTrips: { $gt: 1 } } }]);","Unwind the passenger records from the 'transit_events' collection, group them by 'ticket_id', and filter to keep only tickets with more than one trip."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalTrips: { $sum: 1 } } }, { $match: { totalTrips: { $gt: 1 } } }]);","Count the total trips for each passenger's ticket_id in the 'transit_events' collection, including only those with more than one trip."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $group: { _id: ""$response.event.status"", count: { $sum: 1 } } }, { $sort: { count: -1 } }]);","Group the 'transit_events' data by the event status in 'response.event', count each status, and sort the results in descending order of counts."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $group: { _id: ""$response.event.status"", count: { $sum: 1 } } }, { $sort: { count: -1 } }])","Group records in 'transit_events' by 'response.event.status', count occurrences of each status, and sort results by count in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.countDocuments({ 'response.event.passengers.destination_stop': 'Downtown' }),Count the transit events where passengers are going to 'Downtown'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.destination_stop': 'Downtown' }).count();,Count the entries in the 'transit_events' collection where passengers have 'Downtown' as their destination stop.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.status': 'Cancelled' } }, { $project: { route_id: '$identifier.route_id', status: '$response.event.status' } }]);",Select the 'route_id' from 'identifier' and 'status' from 'response.event' in 'transit_events' where event status is 'Cancelled'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.status': 'Cancelled' } }, { $project: { route_id: '$identifier.route_id', status: '$response.event.status' } }])","From the 'transit_events' collection, get the 'route_id' and 'status' for entries that have a status of 'Cancelled'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'Maintenance' } }, { $count: 'totalMaintenanceEvents' }])",Count the total number of maintenance events in the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'Maintenance' } }, { $group: { _id: null, totalEvents: { $sum: 1 } } }]);",Count the total number of Maintenance events in the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.status': { $in: ['Delayed', 'Cancelled'] } }, { 'response.event.type': 1, 'response.event.passengers': 1 })","Retrieve all transit events where the event status is 'Delayed' or 'Cancelled', including the type of event and the number of passengers."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""Delayed"" });",Find all transit events with a status of 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""Delayed"" });",Retrieve transit_events documents where the event status is 'Delayed'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""RT123"" });",Retrieve all transit_events records where the route_id is 'RT123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""RT123"" });",Get documents from the 'transit_events' collection with route_id 'RT123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.type': 'ArrivalDeparture' } }, { $group: { _id: '$identifier.route_id', totalDelayed: { $sum: { $cond: [ { $eq: [ '$response.event.status', 'Delayed' ] }, 1, 0 ] } } } } ]);","Retrieve transit events from the 'transit_events' collection where the event type is 'ArrivalDeparture', and group by route ID to count total events marked as 'Delayed'."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.type': 'ArrivalDeparture', 'response.event.status': 'Delayed' } }, { $group: { _id: '$identifier.route_id', totalDelayed: { $sum: 1 } } } ]);","From the 'transit_events' collection, retrieve the count of delayed 'ArrivalDeparture' events grouped by route ID."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers': { $elemMatch: { fare_amount: { $gt: 10.00 } } } });,Find all transit events where at least one passenger's fare amount is greater than 10.00.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.fare_amount': { $gt: 10 } }),Get transit events with passenger fare amounts greater than 10.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""OnTime"" }).sort({ ""response.event.location.estimated_arrival"": 1 });",Retrieve all transit events where the event status is 'OnTime' and sort them by estimated arrival time in ascending order.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""OnTime"" }).sort({ ""response.event.location.estimated_arrival"": 1 })","Retrieve 'transit_events' entries with an 'OnTime' status, ordered by estimated arrival time in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", avgFare: { $avg: ""$response.event.passengers.fare_amount"" } } } ])","Unwind passenger details from the 'transit_events' collection, grouping by destination stop and calculating the average fare amount."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", avgFare: { $avg: ""$response.event.passengers.fare_amount"" } } }])",Aggregate the average fare for passengers by their destination stop from the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': 'Main Street' });,Retrieve all transit events where the next stop is 'Main Street'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': 'Main Street' });,Retrieve entries from the 'transit_events' collection where the next stop is 'Main Street'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'identifier.vehicle_id': 'V456' } }, { $group: { _id: '$response.event.status', count: { $sum: 1 } } } ]);","Select all records from 'transit_events' where the vehicle ID is 'V456', and count occurrences of each event status."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'identifier.vehicle_id': 'V456' } }, { $group: { _id: '$response.event.status', count: { $sum: 1 } } } ])","Retrieve all documents from the 'transit_events' collection with a vehicle ID of 'V456' and categorize the data by event status, counting the occurrences of each status."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""Incident"" }).sort({ ""response.event.location.estimated_arrival"": -1 }).limit(5);","Retrieve the five most recent 'Incident' event documents from the 'transit_events' collection, sorted by estimated arrival time in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'Incident' } }, { $sort: { 'response.event.location.estimated_arrival': -1 } }, { $limit: 5 }]);","Retrieve the five most recent transit events categorized as 'Incident', ordered by estimated arrival time from latest to earliest."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $match: { ""response.event.passengers.boarding_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } ])","Extract the ticket IDs and total fare from the 'transit_events' collection for boarding times between January 1, 2023, and December 31, 2023, by unwinding the passengers' data."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $match: { ""response.event.passengers.boarding_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } ]);",Calculate the total fare for each unique ticket ID from passengers boarding in 2023 in the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $group: { _id: ""$identifier.route_id"", count: { $sum: 1 }, avgFare: { $avg: ""$response.event.passengers.fare_amount"" } } } ]);","Group records in the 'transit_events' collection by 'route_id', counting the number of entries per route and calculating the average fare amount for passengers."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $group: { _id: ""$identifier.route_id"", count: { $sum: 1 }, avgFare: { $avg: ""$response.event.passengers.fare_amount"" } } } ]);",Aggregate data from 'transit_events' to count events by 'route_id' and calculate the average fare charged to passengers.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.boarding_time"": { $lte: new Date() } }).sort({ ""response.event.passengers.boarding_time"": -1 }).limit(10);","Select the ten most recent transit event records from the 'transit_events' collection where passengers boarded on or before the current date and time, sorted by boarding time in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.passengers.boarding_time': { $lte: new Date() } }).sort({ 'response.event.passengers.boarding_time': -1 }).limit(10);,"Retrieve up to ten transit event documents where passenger boarding times are on or before now, ordered by boarding time in reverse chronological order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.status': 'Cancelled' } }, { $group: { _id: '$identifier.route_id', count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Retrieve all cancelled transit events, grouping by route_id and counting the number of cancellations per route, sorted in descending order by count."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.status': 'Cancelled' } }, { $group: { _id: '$identifier.route_id', cancelledEvents: { $sum: 1 } } }, { $sort: { cancelledEvents: -1 } } ])","Retrieve the count of cancelled events per route from the 'transit_events' collection, ordered from highest to lowest."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.findOne({ ""identifier.route_id"": ""RT123"", ""response.event.status"": ""OnTime"" });",Get one document from 'transit_events' where the route ID is 'RT123' and the event status is 'OnTime'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.findOne({ ""identifier.route_id"": ""RT123"", ""response.event.status"": ""OnTime"" });",Find a transit event with route ID 'RT123' that is 'OnTime'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $project: { route_id: ""$identifier.route_id"", passenger_count: { $size: ""$response.event.passengers"" } } }, { $sort: { passenger_count: -1 } } ])","Retrieve the route ID and the number of passengers from the 'transit_events' collection, sorted in descending order by passenger count."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $project: { route_id: ""$identifier.route_id"", passenger_count: { $size: ""$response.event.passengers"" } } }, { $sort: { passenger_count: -1 } } ])","From the 'transit_events' collection, retrieve the route identifier and the count of passengers for each event, sorted by passenger count in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $group: { _id: ""$response.event.type"", eventCount: { $sum: 1 } } }, { $sort: { eventCount: -1 } }])",Count and group the transit events by their type and sort the results in descending order based on the count.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $group: { _id: ""$response.event.type"", eventCount: { $sum: 1 } } }, { $sort: { eventCount: -1 } }])",Aggregate event counts from the 'transit_events' collection by event type and sort the results by count in descending order.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'Maintenance', 'response.event.status': 'Delayed' } }, { $group: { _id: '$identifier.route_id', delayedCount: { $sum: 1 } } }])",Count delayed maintenance events grouped by route identifier from the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.type': 'Maintenance', 'response.event.status': 'Delayed' } }, { $group: { _id: '$identifier.route_id', delayedCount: { $sum: 1 } } } ]);","Count the maintenance incidents marked as delayed in the 'transit_events' collection, grouped by route identifier."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" }, boardingTimes: { $push: ""$response.event.passengers.boarding_time"" } } } } ]);","Unwind passenger details in the 'transit_events' collection, grouping by ticket ID to calculate total fare and collect boarding times."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" }, boardingTimes: { $push: ""$response.event.passengers.boarding_time"" } } } } ]);",Group passenger information by ticket ID from the 'transit_events' collection to calculate the total fare and list boarding times for each ticket.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.location.coordinates': { $exists: true } } }, { $group: { _id: '$identifier.route_id', locations: { $push: '$response.event.location.coordinates' } } } ]);","Select all documents from the 'transit_events' collection where the location coordinates exist, and group the results by 'route_id', collecting coordinates into an array."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.location.coordinates': { $exists: true, $ne: [] } } }, { $group: { _id: '$identifier.route_id', locations: { $push: '$response.event.location.coordinates' } } }])","Filter the 'transit_events' collection for entries with location coordinates, and group the results by 'route_id', aggregating coordinates into a list."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({}, { 'response.event.status': 1, 'response.event.type': 1, 'response.event.location.estimated_arrival': 1, 'response.event.passengers': 1 })","Retrieve all documents from the 'transit_events' collection showing status, type, estimated arrival time, and passenger details for events."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'response.event.status': { $exists: true }, 'response.event.type': { $exists: true }, 'identifier.vehicle_id': 'designated_vehicle_id' }).project({ 'response.event.estimated_arrival': 1, 'response.event.passengers.ticket_id': 1, 'response.event.passengers.boarding_time': 1 })","Find entries in the 'transit_events' collection where the event's status and type are reported, along with estimated arrival times and passenger ticket identifiers for a specific vehicle."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } }])",Unwind passenger details from the 'transit_events' collection and group by ticket ID to calculate the total fare for each ticket.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } }]);",Extract and sum the fare amounts for each unique ticket ID from the passenger array in the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'identifier.route_id': 'R123' }),Retrieve all documents from 'transit_events' where the route_id is 'R123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": ""R123"" });",Get entries from 'transit_events' where the route_id is 'R123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.status': 'Delayed' } }, { $group: { _id: '$identifier.route_id', count: { $sum: 1 } } } ])",Retrieve all transit events with a status of 'Delayed' and count the number of delays for each bus or train route.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.status': 'Delayed' } }, { $group: { _id: '$identifier.route_id', countDelayed: { $sum: 1 } } }])","From the 'transit_events' collection, count the number of delayed events for each route_id."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.boarding_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-06-01"") } });","Select all documents from 'transit_events' where passenger boarding times are between January 1, 2023, and June 1, 2023, inclusive of the start date and exclusive of the end date."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers.boarding_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2023-06-01"") } });","Get entries in the 'transit_events' collection with passenger boarding times from January 1, 2023, to May 31, 2023."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.type': 'ArrivalDeparture' } }, { $group: { _id: '$identifier.vehicle_id', avgFare: { $avg: '$response.event.passengers.fare_amount' } } } ]);","Select documents from 'transit_events' where event type is 'ArrivalDeparture' and group by vehicle ID, calculating the average fare amount for passengers."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.type': 'ArrivalDeparture' } }, { $group: { _id: '$identifier.vehicle_id', avgFare: { $avg: '$response.event.passengers.fare_amount' } } } ])","From the 'transit_events' collection, filter for events of type 'ArrivalDeparture', then group by vehicle ID to compute the average fare paid by passengers for each vehicle."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $match: { ""response.event.passengers.fare_amount"": { $gt: 50 } } }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalPassengers: { $sum: 1 } } } ])","Unwind the passengers in the 'transit_events' collection, filter those with fare amounts over 50, and group the results by destination stop to count the number of passengers per stop."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $match: { ""response.event.passengers.fare_amount"": { $gt: 50 } } }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalPassengers: { $sum: 1 } } }])","Flatten the passengers from the 'transit_events' collection and select those with a fare amount greater than 50, aggregating by destination stop to count total passengers."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $group: { _id: ""$response.event.type"", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])","Group transit events by event type and count occurrences, then sort by count in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $group: { _id: ""$response.event.type"", count: { $sum: 1 } } }, { $sort: { count: -1 } }]);","Aggregate transit events by event type, count the number of events for each type, and sort the results in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $group: { _id: ""$identifier.route_id"", averageFare: { $avg: ""$response.event.passengers.fare_amount"" }, totalEvents: { $sum: 1 } } } ]);","Group the transit events by route identifier, calculating the average fare of passengers and the total number of events for each route."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: '$response.event.passengers' }, { $group: { _id: '$identifier.route_id', averageFare: { $avg: '$response.event.passengers.fare_amount' }, totalEvents: { $sum: 1 } } } } ])","Aggregate data from the 'transit_events' collection by route_id, calculating the average passenger fare and counting the total events for each route."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.next_stop"": { $exists: true } }).sort({ ""response.event.location.estimated_arrival"": 1 });","Retrieve all transit_events documents where the next_stop exists, sorted by estimated_arrival in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.next_stop': { $exists: true } }).sort({ 'response.event.location.estimated_arrival': 1 });,"Retrieve transit events with a 'next_stop' in their location, sorted by 'estimated_arrival' in ascending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } }, { $sort: { totalFare: -1 } }, { $limit: 10 } ])","Unwind the passengers array in the 'transit_events' collection, group by ticket ID to calculate total fare, sort in descending order, and limit to the top ten results."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.ticket_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } }, { $sort: { totalFare: -1 } }, { $limit: 10 } ])","From the 'transit_events' collection, flatten passenger data, group by ticket ID, sum fare amounts, sort from highest to lowest fare, and display the top ten records."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""Cancelled"", ""identifier.route_id"": { $in: [""R001"", ""R002""] } });",Retrieve all documents from 'transit_events' where the event status is 'Cancelled' and route_id is 'R001' or 'R002'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""Cancelled"", ""identifier.route_id"": { $in: [""R001"", ""R002""] } });",Retrieve 'transit_events' with a 'Cancelled' status for route_ids 'R001' or 'R002'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$identifier.route_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } } ]);",Calculate the total fare by summing the fare amounts of all passengers for each route ID in the 'transit_events' collection.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$identifier.route_id"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } } ]);","From the 'transit_events' collection, group by route ID and calculate the total fare by summing the fare amounts of all passengers."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" }, passengerCount: { $sum: 1 } } } } ]);",Unwind the 'passengers' array in 'transit_events' to calculate the total fare and count of passengers for each destination stop.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" }, passengerCount: { $sum: 1 } } } } ])",Flatten the 'passengers' array in the 'transit_events' collection and aggregate to find total fare and passenger count for each destination stop.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: '$response.event.passengers' }, { $match: { 'response.event.passengers.boarding_time': { $gte: new Date('2023-01-01'), $lt: new Date('2023-12-31') } } }, { $group: { _id: '$identifier.route_id', totalBoarded: { $sum: 1 }, averageFare: { $avg: '$response.event.passengers.fare_amount' } } } ])","Select records from the 'transit_events' collection where passengers boarded on or after January 1, 2023, and before December 31, 2023, grouping by route ID, counting total passengers and calculating average fare."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { ""response.event.passengers.boarding_time"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$identifier.route_id"", totalBoarded: { $sum: 1 }, averageFare: { $avg: ""$response.event.passengers.fare_amount"" } } } ])","Query the 'transit_events' collection for events where passengers boarded between January 1, 2023, and December 31, 2023, aggregating by route ID to find total passengers boarded and average fare paid."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.coordinates"": { $gt: 0 } });",Select all documents from the 'transit_events' collection where the event's location coordinates contain a value greater than zero.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.location.coordinates"": { $exists: true, $not: { $size: 0 } }, ""response.event.location.coordinates"": { $gt: 0 } })",Retrieve entries from the 'transit_events' collection with coordinates in the event data that are greater than zero.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $unwind: ""$response.event.passengers"" }, { $match: { ""response.event.passengers.destination_stop"": { $exists: true } } }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalFare: { $sum: ""$response.event.passengers.fare_amount"" } } }, { $sort: { totalFare: -1 } }])","Select all records from 'transit_events' and group by unique destination stops of passengers, summing the total fare for each stop, then sort by total fare in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: '$response.event.passengers' }, { $match: { 'response.event.passengers.destination_stop': { $exists: true } } }, { $group: { _id: '$response.event.passengers.destination_stop', totalFare: { $sum: '$response.event.passengers.fare_amount' } } }, { $sort: { totalFare: -1 } } ])","Find and aggregate total fare for passengers by destination stop in the 'transit_events' collection, sorted from highest to lowest fare."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ 'identifier.route_id': '<ROUTE_ID>', 'identifier.vehicle_id': '<VEHICLE_ID>' }, { 'response.event.status': 1, 'response.event.type': 1, 'response.event.passengers': 1, 'response.event.location.coordinates': 1, 'response.event.location.next_stop': 1, 'response.event.location.estimated_arrival': 1 })","Find transit event records for a specific route and vehicle, showing the event's status, type, passenger details, location coordinates, next stop, and estimated arrival time."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({}),Fetch all records from the employee_records collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({});,Retrieve all records from the 'employee_records' collection without any filters.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'personal_info.first_name': 'John' }),Retrieve all employee records where the first name is 'John'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'personal_info.first_name': 'John' }),Get employee records where the first name is 'John'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gt: 60000 } });,"Find all employee records with a salary greater than 60,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gt: 60000 } });,"Retrieve employee records with a salary above 60,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': 5 }),Retrieve all employee records with a performance rating of 5.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': 5 }),Find employee records with a performance rating of 5.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'identifier.employee_id': 'EMP123456' }),Get the details of the employee with identifier 'EMP123456' from the employee_records collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'identifier.employee_id': 'EMP123456' }),Get the employee details with ID 'EMP123456' from the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.health_insurance': true }),Retrieve all employee records with health insurance benefits.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.health_insurance': true });,Retrieve employees who have health insurance benefits.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'skills': { $in: ['Java', 'Python'] } })",Retrieve all employee records where the skills field includes 'Java' or 'Python'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'skills': { $in: ['Java', 'Python'] } });",Retrieve entries from 'employee_records' for employees with 'Java' or 'Python' skills.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.hire_date': { $lt: new Date('2020-01-01') } });,"Retrieve all employee records hired before January 1, 2020."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.hire_date': { $lt: new Date('2020-01-01') } }),"Retrieve employee records for individuals hired before January 1, 2020."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.project_name': 'Project Alpha' }),Get all employee records where the project name is 'Project Alpha'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.project_name': 'Project Alpha' });,Retrieve employee records for projects named 'Project Alpha'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'personal_info.last_name': 'Doe' }).sort({ 'employment_details.salary': -1 }),"Get all employee records with the last name 'Doe', sorted by salary in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'personal_info.last_name': 'Doe' }).sort({ 'employment_details.salary': -1 });,"Retrieve all employee records where the last name is 'Doe', sorted by salary in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': { $gte: 3 } }).limit(10);,Retrieve the first 10 employee records with a performance rating of 3 or higher.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': { $gte: 3 } }).limit(10);,Select up to 10 employees from the 'employee_records' collection with a performance rating of at least 3.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.vacation_days': { $gte: 15 } });,Find all employee records with 15 or more vacation days.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.vacation_days': { $gte: 15 } });,Retrieve employee records with at least 15 vacation days.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'identifier.department_id': 'DP123' });,Retrieve all employee records with department identifier 'DP123'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'identifier.department_id': 'DP123' });,Retrieve records from employee_records with department ID 'DP123'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.start_date': { $gte: ISODate('2021-01-01') } });,"Retrieve all employee records with project start dates on or after January 1, 2021."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.start_date': { $gte: ISODate('2021-01-01') } });,"Retrieve employee records where project start dates are on or after January 1, 2021."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.job_title': 'Software Engineer', 'employment_details.salary': { $lt: 80000 } });","Retrieve all employee records where the job title is 'Software Engineer' and the salary is under $80,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.job_title': 'Software Engineer', 'employment_details.salary': { $lt: 80000 } });","Get records of employees who are 'Software Engineers' with a salary under $80,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","
db.employee_records.find({ 'personal_info.email': { $regex: /gmail\.com$/ } }); ",Select all documents from the 'employee_records' collection where the email address in the personal information field ends with 'gmail.com'. 
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'personal_info.email': { $regex: /gmail\.com$/ } });,Retrieve employee records for entries where the personal email ends with 'gmail.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': { $gte: 4 } });,Retrieve entries from the 'employee_records' collection with performance reviews rated 4 or higher.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'skills': { $size: 3 } });,Get employee records where each has exactly three skills.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ skills: { $size: 3 } });,Find employees with exactly three skills in the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.manager_id': { $ne: null } });,Find all employee records that have a manager ID in the employment details.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'projects': { $elemMatch: { role: 'Lead', end_date: { $exists: false } } } });",Retrieve all employee records with at least one project where the role is 'Lead' and no end date is specified.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'projects': { $elemMatch: { role: 'Lead', end_date: { $exists: false } } } });",Find employee records with the role of 'Lead' in projects that do not have an end date.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.hire_date': { $gt: new Date('2020-01-01') } }, { 'identifier.employee_id': 1, 'personal_info.first_name': 1, 'personal_info.last_name': 1 })","Get all employee records where the hire date is after January 1, 2020, showing only employee ID, first name, and last name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.hire_date': { $gt: new Date('2020-01-01') } }, { 'identifier.employee_id': 1, 'personal_info.first_name': 1, 'personal_info.last_name': 1 })","Retrieve employee records for employees hired after January 1, 2020, showing only the 'employee_id', 'first_name', and 'last_name'."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({}),Select all documents from the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({}),Retrieve all records from the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gt: 60000 } });,"Retrieve all employee records with a salary greater than 60,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.salary"": { $gt: 60000 } });","Find employees in 'employee_records' with a salary greater than 60,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.last_name"": ""Smith"" })",Get all employee records where the last name is 'Smith'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'personal_info.last_name': 'Smith' }),Retrieve all employee records where the last name is 'Smith'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': 5 }),Retrieve all employee records with a performance rating of 5.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': 5 }),Find employee records with a performance rating of 5.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.department_id"": ""D001"" });",Get all employee records where the department ID is 'D001'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.department_id"": ""D001"" });",Find employees in department 'D001'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.health_insurance': true }),Get all employees with health insurance enabled.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.health_insurance"": true });",Find employee records with health insurance enabled.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ skills: 'JavaScript' });,Retrieve all employee records that have 'JavaScript' listed in their skills.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ skills: 'JavaScript' });,Retrieve employee records that list 'JavaScript' as a skill.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.rating"": { $gte: 4 } });",Find employee records with a performance rating of 4 or higher.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.hire_date"": { $lte: new Date(""2020-01-01"") } });","Retrieve all employee records where the hire date is on or before January 1, 2020."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.hire_date': { $lte: new Date('2020-01-01') } });,"Retrieve employee records for those hired on or before January 1, 2020."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.project_name': 'Project Alpha' });,Get all employee records for the project named 'Project Alpha'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""projects.project_name"": ""Project Alpha"" });",Find employee records where the project name is 'Project Alpha'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.vacation_days': { $gte: 15 } });,Retrieve all employees with at least 15 vacation days in their benefits.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.vacation_days"": { $gte: 15 } })",Get employee records for those with at least 15 vacation days.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.job_title"": ""Software Engineer"", ""employment_details.salary"": { $lt: 80000 } });","Retrieve all employee records where the job title is 'Software Engineer' and the salary is below 80,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.job_title"": ""Software Engineer"", ""employment_details.salary"": { $lt: 80000 } });","Find employees in the 'employee_records' collection who are 'Software Engineers' earning less than 80,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'personal_info.first_name': /^A/, 'personal_info.last_name': /^B/ });",Retrieve all employee records where the first name starts with 'A' and the last name starts with 'B'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.first_name"": /^A/, ""personal_info.last_name"": /^B/ });",Retrieve employee records for individuals whose first names start with 'A' and last names begin with 'B'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ skills: { $in: [ 'Python', 'Java' ] } });",Retrieve all employee records where the skills include 'Python' or 'Java'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ skills: { $in: [""Python"", ""Java""] } });",Find employee records for individuals with skills in either 'Python' or 'Java'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.salary"": { $gt: 50000 }, ""employment_details.manager_id"": { $exists: true } })","Retrieve all employee records where the salary exceeds 50,000 and a manager identifier exists."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.salary"": { $gt: 50000 }, ""employment_details.manager_id"": { $exists: true } })","Find employee records with a salary greater than 50,000 and a manager ID present."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.employee_id"": { $regex: ""^EMP123"" } });",Retrieve all employee records where the employee ID begins with 'EMP123'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.employee_id"": { $regex: ""^EMP123"" } });",Retrieve employee records with an 'employee_id' starting with 'EMP123' using a regex search.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.0.rating"": 3 });",Retrieve all employee records where the first performance review rating is 3.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance"": { ""$elemMatch"": { ""rating"": 3 } } });",Retrieve documents from the 'employee_records' collection with a performance review rating of 3.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.start_date': { $gte: new Date('2023-01-01') } });,"Retrieve all employee records where any project's start date is on or after January 1, 2023."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.start_date': { $gte: new Date('2023-01-01') } }),"Retrieve employee records with projects starting on or after January 1, 2023."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Retrieve documents from the 'employee_records' collection where the email address ends with '@example.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Retrieve all employee records with an email address ending in '@example.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.hire_date"": { $gt: new Date(""2019-01-01"") }, ""employment_details.salary"": { $lt: 70000 } });","Find employee records where the hire date is after January 1, 2019, and the salary is less than 70,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.hire_date"": { $gt: new Date(""2019-01-01"") }, ""employment_details.salary"": { $lt: 70000 } });","Get employees hired after January 1, 2019, with a salary under 70,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'identifier.department_id': 'HR' }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'employment_details.job_title': 1 })","Retrieve all employee records from 'employee_records' where the department_id is 'HR', including first name, last name, and job title."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'identifier.department_id': 'HR' }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'employment_details.job_title': 1 })","Retrieve employee first names, last names, and job titles from the 'employee_records' collection for all employees in the 'HR' department."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gt: 60000 } });,"Retrieve all employee records with a salary greater than 60,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.salary"": { $gt: 60000 } });","Retrieve employee records with a salary greater than 60,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.first_name"": ""John"" });",Get all employee records where the first name is 'John'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.first_name"": ""John"" })",Find employee records where the first name is 'John'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.department_id"": ""DPT001"" }).sort({ ""employment_details.hire_date"": -1 })","Retrieve all employee records from the 'employee_records' collection where the department ID is 'DPT001', sorted by hire date in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.department_id"": ""DPT001"" }).sort({ ""employment_details.hire_date"": -1 });","Retrieve employee records for the department ID 'DPT001', sorted by hire date from most recent to oldest."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.rating"": { $gte: 4 } })",Retrieve all employee records with a performance rating of at least 4.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': { $gte: 4 } });,Retrieve employee records with a performance rating of 4 or higher.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$employment_details.job_title"", avgSalary: { $avg: ""$employment_details.salary"" } } }, { $match: { avgSalary: { $gt: 70000 } } } ]);","Group employee records by job title and calculate the average salary for each title, including only those with an average salary greater than 70,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$employment_details.job_title"", avgSalary: { $avg: ""$employment_details.salary"" } } }, { $match: { avgSalary: { $gt: 70000 } } } ])","Calculate the average salary for each job title in the 'employee_records' collection and show only those with an average salary over 70,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""projects.project_name"": ""Project Alpha"" })",Retrieve all employee records where any project name is 'Project Alpha'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.project_name': 'Project Alpha' }),Fetch employee records that include a project named 'Project Alpha'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'benefits.health_insurance': true } }, { $count: 'totalEmployees' } ])",Count the total number of employees in the 'employee_records' collection with health insurance benefits.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $match: { 'benefits.health_insurance': true } }, { $count: 'totalEmployees' }])",Count the total number of employees with health insurance from the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""skills"": { $in: [""Python"", ""MongoDB""] } }).sort({ ""personal_info.last_name"": 1 });","Find all employee records with 'Python' or 'MongoDB' skills, sorted by last name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""skills"": { $in: [""Python"", ""MongoDB""] } }).sort({ ""personal_info.last_name"": 1 });","Retrieve employee records from the 'employee_records' collection with 'Python' or 'MongoDB' in their skills, sorted by last name in ascending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", avgRating: { $avg: ""$performance.rating"" } } }, { $match: { avgRating: { $gte: 4 } } } ])","Unwind the performance records of employees, group by employee ID, and calculate the average rating, including only those with an average rating of 4 or higher."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", avgRating: { $avg: ""$performance.rating"" } } }, { $match: { avgRating: { $gte: 4 } } } ])","Aggregate the average performance rating for employees in the 'employee_records' collection, showing only those with an average rating of at least 4."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.manager_id"": ""EMP000001"" });",Retrieve all employees whose manager's ID is 'EMP000001' from the employee_records collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.manager_id"": ""EMP000001"" })",Get employee records where the manager ID is 'EMP000001'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.salary"": { $gte: 50000 } }).sort({ ""personal_info.last_name"": 1 }).limit(5);","Retrieve the first five employee records with a salary of at least 50,000, sorted by last name in ascending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gte: 50000 } }).sort({ 'personal_info.last_name': 1 }).limit(5);,"Retrieve up to five employees from the 'employee_records' collection with a salary of at least 50,000, ordered by last name in ascending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $group: { _id: ""$identifier.department_id"", totalSalary: { $sum: ""$employment_details.salary"" } } }, { $sort: { totalSalary: -1 } }])","Group employee records by department identifier and calculate total salary for each department, sorting results in descending order of total salary."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$identifier.department_id"", totalSalary: { $sum: ""$employment_details.salary"" } } }, { $sort: { totalSalary: -1 } } ])",Sum the salaries in the 'employee_records' collection by department_id and order the results by total salary in descending order.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'projects.start_date': { $gte: new Date('2022-01-01') } });,"Get all employee records with project start dates on or after January 1, 2022."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""projects.start_date"": { $gte: new Date(""2022-01-01"") } });","Find employee records with projects starting on or after January 1, 2022."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'benefits.vacation_days': { $gt: 10 } } }, { $project: { employee_id: '$identifier.employee_id', first_name: '$personal_info.first_name' } } ]);",Retrieve employee ID and first name from records with more than 10 vacation days in the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'benefits.vacation_days': { $gt: 10 } }, { 'identifier.employee_id': 1, 'personal_info.first_name': 1 })",Retrieve the unique employee identifier and first name of employees who have more than 10 vacation days from the 'employee_records' collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Retrieve all employee records with an email address ending in '@example.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Retrieve employee records where the email ends with '@example.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$projects"" }, { $match: { ""projects.role"": ""Lead"" } }, { $group: { _id: ""$projects.project_name"", totalEmployees: { $sum: 1 } } } ])","Unwind the projects in employee records, filter for roles marked as 'Lead', and group by project name to count the number of employees for each project."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$projects"" }, { $match: { ""projects.role"": ""Lead"" } }, { $group: { _id: ""$projects.project_name"", totalEmployees: { $sum: 1 } } }])","In the employee records collection, unwind the projects array and count the total number of employees with the role 'Lead' for each unique project name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': 5 });,Select all employee records that have a performance review rating of 5.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.rating"": 5 });",Find employee records with a performance rating of 5.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$identifier.department_id"", avgHireDate: { $avg: ""$employment_details.hire_date"" } } }, { $project: { department: ""$_id"", avgHireDate: ""$avgHireDate"" } } ])","Group employee records by department identifier, calculating the average hire date for each department, and project the department identifier and average hire date."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.hire_date"": { $lt: new Date(""2020-01-01"") } });","Retrieve all employees hired before January 1, 2020."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.hire_date"": { $lt: new Date('2020-01-01') } });","Get employees hired before January 1, 2020, from the 'employee_records' collection."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $match: { ""performance.rating"": { $gte: 3 } } }, { $project: { employee_id: ""$identifier.employee_id"", rating: ""$performance.rating"" } } ])","Retrieve employee records with performance ratings of at least 3, showing each employee's identifier and corresponding rating."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'personal_info.date_of_birth': { $lt: new Date('1990-01-01') } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'personal_info.email': 1 })","Fetch all employee records where 'date_of_birth' is before January 1, 1990, and return 'first_name', 'last_name', and 'email'."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({""personal_info.date_of_birth"": {""$lt"": ISODate(""1990-01-01"")}}, {""personal_info.first_name"": 1, ""personal_info.last_name"": 1, ""personal_info.email"": 1})","Find employees born before January 1, 1990, and return their first name, last name, and email."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gte: 70000 } });,"Select all employee records with a salary of $70,000 or more."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.salary': { $gte: 70000 } });,"Retrieve employee records for those with a salary of at least $70,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.first_name"": ""John"" })",Find all employee records where the first name is 'John'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.first_name"": ""John"" });",Retrieve all employee records with the first name 'John'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'benefits.health_insurance': true }).sort({ 'employment_details.hire_date': -1 }),"Retrieve all employee records with health insurance enabled, sorted by hire date in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.health_insurance"": true }).sort({ ""employment_details.hire_date"": -1 })","Retrieve employee records with health insurance, sorted from most recently hired to earliest."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { ""performance.rating"": { $gte: 4 } } }, { $group: { _id: ""$identifier.department_id"", averageSalary: { $avg: ""$employment_details.salary"" } } } ])","Retrieve employee records where performance ratings are 4 or higher, and group by department ID to find the average salary per department."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'performance.rating': { $gte: 4 } } }, { $group: { _id: '$identifier.department_id', averageSalary: { $avg: '$employment_details.salary' } } } ]);","Retrieve the average salary of employees with a performance rating of at least 4, grouped by department ID."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'performance.rating': 5 } }, { $lookup: { from: 'employee_records', localField: 'employment_details.manager_id', foreignField: 'identifier.employee_id', as: 'manager_details' } } ])",Retrieve employee records with a performance rating of 5 and include their manager's information by matching the manager_id with the employee_id.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'performance.rating': 5 } }, { $lookup: { from: 'employee_records', localField: 'employment_details.manager_id', foreignField: 'identifier.employee_id', as: 'manager_details' } } ])",Find employees in the 'employee_records' collection who have a performance rating of 5 and include their manager details.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$projects"" }, { $group: { _id: ""$projects.project_name"", totalEmployees: { $sum: 1 } } }])",Retrieve project names from 'employee_records' and count the number of employees for each project.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$projects"" }, { $group: { _id: ""$projects.project_name"", employeeCount: { $sum: 1 } } } ])",Retrieve project names from the 'employee_records' collection and count how many employees are associated with each project.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'skills': { $in: ['JavaScript', 'MongoDB'] } }).limit(10);",Retrieve up to 10 employee records where the skills include 'JavaScript' or 'MongoDB.'
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""skills"": { $in: [""JavaScript"", ""MongoDB""] } }).limit(10);",Retrieve up to 10 employee records that have 'JavaScript' or 'MongoDB' as skills.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.job_title"": ""Software Engineer"" }).sort({ ""employment_details.salary"": 1 });","Retrieve employee records where the job title is 'Software Engineer', sorted by salary in ascending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.job_title"": ""Software Engineer"" }).sort({ ""employment_details.salary"": 1 })",Retrieve all employee records with the job title 'Software Engineer' and sort them by salary in ascending order.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$identifier.department_id"", totalVacationDays: { $sum: ""$benefits.vacation_days"" } } }, { $sort: { totalVacationDays: -1 } } ])","Group employee records by department identifier and calculate total vacation days per department, sorted in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$identifier.department_id"", totalVacationDays: { $sum: ""$benefits.vacation_days"" } } }, { $sort: { totalVacationDays: -1 } } ])","Group employee_records by department_id, summing vacation days from benefits, and sort departments by total vacation days in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance"": { $elemMatch: { rating: { $gt: 3 }, comments: { $regex: /excellent/ } } } });",Select documents from 'employee_records' with performance reviews rated above 3 and comments containing 'excellent.'
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'performance': { $elemMatch: { 'rating': { $gt: 3 }, 'comments': { $regex: 'excellent', $options: 'i' } } } } });",Retrieve employee records with performance ratings over 3 and comments matching 'excellent'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { ""employment_details.hire_date"": { $lt: new Date(""2020-01-01"") } } }, { $project: { firstName: ""$personal_info.first_name"", lastName: ""$personal_info.last_name"", yearsAtCompany: { $divide: [ { $subtract: [new Date(), ""$employment_details.hire_date""] }, 31557600000 ] } } } } ]);","Select all employee records where the hire date is before January 1, 2020, and show their first and last names along with the number of years they have been employed, calculated from their hire date."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { ""employment_details.hire_date"": { $lt: new Date(""2020-01-01"") } } }, { $project: { firstName: ""$personal_info.first_name"", lastName: ""$personal_info.last_name"", tenure: { $floor: { $divide: [ { $subtract: [new Date(), ""$employment_details.hire_date""] }, 31536000000 ] } } } } } ]);","Retrieve employee records for those hired before January 1, 2020, showing their first name, last name, and tenure in years."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $project: { department_id: ""$identifier.department_id"", salary: ""$employment_details.salary"" } }, { $group: { _id: ""$department_id"", maxSalary: { $max: ""$salary"" } } } ]);","Select the department_id and salary from the 'employee_records' collection, then group by department_id to find the maximum salary in each department."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $project: { department_id: ""$identifier.department_id"", salary: ""$employment_details.salary"" } }, { $group: { _id: ""$department_id"", highestSalary: { $max: ""$salary"" } } } ])","From the 'employee_records' collection, select the department_id and salary, grouping by department_id to find the highest salary in each department."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.countDocuments({ ""identifier.employee_id"": { $regex: ""^EMP[0-9]{6}$"" } });",Count documents in the 'employee_records' collection where the employee identifier follows the pattern '^EMP[0-9]{6}$'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.countDocuments({ ""identifier.employee_id"": { $regex: ""^EMP[0-9]{6}$"" } });",Count the records in 'employee_records' where employee_id matches the pattern '^EMP[0-9]{6}$'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $match: { $expr: { $eq: [{ $size: ""$skills"" }, 5] } } }, { $project: { employeeId: ""$identifier.employee_id"", firstName: ""$personal_info.first_name"" } }])","Select documents from 'employee_records' where the number of skills is five, projecting employee ID and first name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { $expr: { $eq: [ { $size: ""$skills"" }, 5 ] } } }, { $project: { employee_id: ""$identifier.employee_id"", first_name: ""$personal_info.first_name"" } } ])","Retrieve entries from the 'employee_records' collection that have exactly five skills, returning only employee_id and first_name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $group: { _id: { employeeId: ""$identifier.employee_id"", reviewDate: ""$performance.review_date"" }, averageRating: { $avg: ""$performance.rating"" } } } ])","Extract each performance review from 'employee_records', grouping by employee ID and review date, while calculating the average rating for each date."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $group: { _id: { employeeId: ""$identifier.employee_id"", reviewDate: ""$performance.review_date"" }, averageRating: { $avg: ""$performance.rating"" } } } ])","Collect average performance ratings by employee ID and review date from the 'employee_records' collection, treating each performance record separately."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.manager_id': { $exists: true, $ne: null } });",Select all documents from the 'employee_records' collection where the manager_id in employment details exists and is not null.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.manager_id"": { $exists: true, $ne: null } });",Fetch documents from the 'employee_records' collection that have a manager_id present in the employment_details section.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { ""employment_details.salary"": { $gt: 50000 } } }, { $lookup: { from: ""employee_records"", localField: ""employment_details.manager_id"", foreignField: ""identifier.employee_id"", as: ""managerInfo"" } } ])","Retrieve all employee records where the salary exceeds 50,000 and include manager information by matching manager_id with employee_id."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { ""employment_details.salary"": { $gt: 50000 } } }, { $lookup: { from: ""employee_records"", localField: ""employment_details.manager_id"", foreignField: ""identifier.employee_id"", as: ""managerInfo"" } } ]);","Find employees with a salary greater than 50,000 and retrieve their manager details from the same collection."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.date_of_birth"": { $gte: new Date(""1980-01-01"") } }).sort({ ""personal_info.date_of_birth"": 1 });","Retrieve employee records where the date of birth is on or after January 1, 1980, sorted by date of birth in ascending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.date_of_birth"": { $gte: new Date(""1980-01-01"") } }).sort({ ""personal_info.date_of_birth"": 1 });","Retrieve employee records with a date of birth on or after January 1, 1980, sorted by date of birth in ascending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.hire_date': { $gt: new Date('2020-01-01') } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'employment_details.job_title': 1 })","Retrieve all employee records where the hire date is after January 1, 2020, showing the first name, last name, and job title."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.hire_date': { $gt: new Date('2020-01-01') } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'employment_details.job_title': 1 })","Retrieve the first name, last name, and job title of employees hired after January 1, 2020, from the employee_records collection."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", averageRating: { $avg: ""$performance.rating"" } } }, { $match: { averageRating: { $gte: 4 } } }]);",Calculate the average performance rating for each employee in 'employee_records' where the average is 4 or higher.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", averageRating: { $avg: ""$performance.rating"" } } }, { $match: { averageRating: { $gte: 4 } } }])","Get the average performance review rating for each employee in 'employee_records', selecting only those with an average rating of 4 or higher."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$employment_details.job_title"", totalEmployees: { $sum: 1 }, averageSalary: { $avg: ""$employment_details.salary"" } } }, { $sort: { averageSalary: -1 } } ])","Group employee records by job title, count the total employees, calculate the average salary for each job title, and sort the results by average salary in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $group: { _id: ""$employment_details.job_title"", totalEmployees: { $sum: 1 }, averageSalary: { $avg: ""$employment_details.salary"" } } }, { $sort: { averageSalary: -1 } }]);","In the 'employee_records' collection, group by job title to count employees and calculate the average salary for each title, sorted from highest to lowest average salary."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.date_of_birth"": { $lt: new Date(""1980-01-01"") } }, { ""personal_info.first_name"": 1, ""personal_info.last_name"": 1 });","Get the first name and last name of employees whose date of birth is before January 1, 1980."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.date_of_birth"": { $lt: new Date(""1980-01-01"") } }, { ""personal_info.first_name"": 1, ""personal_info.last_name"": 1 })","Retrieve the first and last names of employees born before January 1, 1980."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'employment_details.manager_id': { $exists: true } } }, { $lookup: { from: 'employee_records', localField: 'employment_details.manager_id', foreignField: 'identifier.employee_id', as: 'manager_info' } }, { $project: { employee_id: '$identifier.employee_id', manager_name: { $arrayElemAt: ['$manager_info.personal_info.first_name', 0] } } } ]);",Retrieve employee records with existing manager IDs and the first name of each employee's manager.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $match: { 'employment_details.manager_id': { $exists: true } } }, { $lookup: { from: 'employee_records', localField: 'employment_details.manager_id', foreignField: 'identifier.employee_id', as: 'manager_info' } }, { $project: { employee_id: '$identifier.employee_id', manager_first_name: { $arrayElemAt: ['$manager_info.personal_info.first_name', 0] } } }])",Find employee records with a specified manager ID and retrieve the manager's first name from the same collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $project: { employee_id: ""$identifier.employee_id"", hire_year: { $year: ""$employment_details.hire_date"" }, salary: ""$employment_details.salary"" } }, { $match: { hire_year: { $gte: 2015 }, salary: { $gt: 50000 } } } ]);","Retrieve the employee ID, hire year, and salary from 'employee_records' for employees hired in 2015 or later with a salary over 50,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { $expr: { $and: [ { $gte: [ { $year: ""$employment_details.hire_date"" }, 2015 ] }, { $gt: [ ""$employment_details.salary"", 50000 ] } ] } } } }, { $project: { employee_id: ""$identifier.employee_id"", hire_year: { $year: ""$employment_details.hire_date"" }, salary: ""$employment_details.salary"" } } ]);","Select the employee ID, hire year, and salary from 'employee_records' for employees hired from 2015 onward with a salary greater than 50,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: '$projects' }, { $group: { _id: '$projects.project_id', project_count: { $sum: 1 }, involved_employees: { $addToSet: '$identifier.employee_id' } } } }])","Unwind the 'projects' array in 'employee_records' and count occurrences grouped by 'project_id', aggregating unique 'employee_id's for each project."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$projects"" }, { $group: { _id: ""$projects.project_id"", project_count: { $sum: 1 }, employees: { $addToSet: ""$identifier.employee_id"" } } } }])","Unwind the 'projects' array in the 'employee_records' collection, then group by 'project_id' to count projects and list distinct 'employee_id's for each project."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.vacation_days"": { $gt: 15 } }).sort({ ""personal_info.last_name"": 1 });","Get all employee records where vacation days are more than 15, sorted by last name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.vacation_days"": { $gt: 15 } }).sort({ ""personal_info.last_name"": 1 });","Find employee records with more than 15 vacation days, sorted alphabetically by last name."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { skills: { $in: [""Java"", ""MongoDB""] } } }, { $group: { _id: ""$employment_details.job_title"", employee_count: { $sum: 1 } } } ])",Count employees by job title from 'employee_records' who have skills in 'Java' or 'MongoDB'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $match: { skills: { $in: [""Java"", ""MongoDB""] } } }, { $group: { _id: ""$employment_details.job_title"", employee_count: { $sum: 1 } } }])",Retrieve the count of employees holding each job title from 'employee_records' who have 'Java' or 'MongoDB' in their skills.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $lookup: { from: ""employee_records"", localField: ""employment_details.manager_id"", foreignField: ""identifier.employee_id"", as: ""managers"" } }, { $unwind: ""$managers"" }, { $group: { _id: ""$managers.personal_info.last_name"", total_salary: { $sum: ""$employment_details.salary"" }, employees: { $push: ""$identifier.employee_id"" } } } ])","Find managers by matching 'employment_details.manager_id' with 'identifier.employee_id' in the 'employee_records' collection, then unwind the results, grouping by the managers' last names while summing the salaries of their employees and collecting their employee IDs."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $lookup: { from: 'employee_records', localField: 'employment_details.manager_id', foreignField: 'identifier.employee_id', as: 'managers' } }, { $unwind: '$managers' }, { $group: { _id: '$managers.personal_info.last_name', total_salary: { $sum: '$employment_details.salary' }, employee_ids: { $push: '$identifier.employee_id' } } } ])","Aggregate the 'employee_records' collection to find managers by matching 'employment_details.manager_id' with 'identifier.employee_id', then unwind the managers and group by their last names, calculating the total salary of their employees and listing the employee IDs."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", highest_rating: { $max: ""$performance.rating"" }, latest_review: { $max: ""$performance.review_date"" } } }, { $match: { highest_rating: 5 } } ]);","Unwind the performance reviews in the 'employee_records' collection, group by employee identifier, and find the highest rating and latest review date for each employee with a highest rating of five."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", highest_rating: { $max: ""$performance.rating"" }, latest_review: { $max: ""$performance.review_date"" } } }, { $match: { highest_rating: { $eq: 5 } } }])",Aggregate individual performance ratings from 'employee_records' to find the maximum rating and most recent review date for employees who have a top rating of exactly five.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $group: { _id: ""$identifier.department_id"", total_salary: { $sum: ""$employment_details.salary"" } } }, { $sort: { total_salary: -1 } }])","Group the employees' records by department ID and sum their salaries, then sort by total salary in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$identifier.department_id"", total_salary: { $sum: ""$employment_details.salary"" } } }, { $sort: { total_salary: -1 } } ]);","Group the salary data from the 'employee_records' collection by department ID, calculate the total salary for each department, and sort the results from highest to lowest."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.salary': { $gt: 70000 } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'employment_details.salary': 1 })","Select first name, last name, and salary of employees with a salary greater than 70,000 from the employee_records collection."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.salary"": { $gt: 70000 } }, { ""personal_info.first_name"": 1, ""personal_info.last_name"": 1, ""employment_details.salary"": 1 })","Get first name, last name, and salary for employees in the 'employee_records' collection with a salary over 70,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $lookup: { from: 'employee_records', localField: 'employment_details.manager_id', foreignField: 'identifier.employee_id', as: 'manager' } }, { $unwind: '$manager' }, { $project: { employee_id: '$identifier.employee_id', manager_first_name: '$manager.personal_info.first_name', salary: '$employment_details.salary' } } ]);","Join the 'employee_records' collection with itself to correlate manager details by matching manager_id with employee_id, and project the employee_id, manager's first name, and employee salary."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $lookup: { from: ""employee_records"", localField: ""employment_details.manager_id"", foreignField: ""identifier.employee_id"", as: ""manager"" } }, { $unwind: ""$manager"" }, { $project: { employee_id: ""$identifier.employee_id"", manager_first_name: ""$manager.personal_info.first_name"", salary: ""$employment_details.salary"" } } ])","From the 'employee_records' collection, find manager details by matching the manager_id in employment_details with employee_id, and return the employee_id, manager's first name, and salary."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$projects"" }, { $group: { _id: ""$projects.role"", employee_count: { $sum: 1 } } }, { $sort: { employee_count: -1 } } ])","Unwind the projects array from employee_records, group by project role, count employees per role, and sort by count in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$projects"" }, { $group: { _id: ""$projects.role"", employee_count: { $sum: 1 } } }, { $sort: { employee_count: -1 } }])","Unwind the projects array in employee_records, group by project role, count employees in each role, and sort by employee count in descending order."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $project: { employee_id: ""$identifier.employee_id"", years_at_company: { $subtract: [ { $year: new Date() }, { $year: ""$employment_details.hire_date"" } ] } } }, { $match: { years_at_company: { $gt: 5 } } } ]);","Select employee IDs and calculate the number of years each has been employed, including only those with more than five years of service."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $project: { employee_id: ""$identifier.employee_id"", years_at_company: { $subtract: [ { $year: new Date() }, { $year: ""$employment_details.hire_date"" } ] } } }, { $match: { years_at_company: { $gt: 5 } } } ]);","Retrieve the employee identifier and calculate how many years each employee has been with the organization, showing only those with over five years of service."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Fetch all employee records where the email ends with '@example.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Find employee records with an email address ending in '@example.com'.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: null, max_salary: { $max: ""$employment_details.salary"" }, min_salary: { $min: ""$employment_details.salary"" } } } ])",Get the maximum and minimum salaries from all employee records.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $group: { _id: null, max_salary: { $max: ""$employment_details.salary"" }, min_salary: { $min: ""$employment_details.salary"" } } }])",Find the maximum and minimum salary in the employee_records collection.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $facet: { high_salary: [{ $match: { 'employment_details.salary': { $gt: 100000 } } }], low_salary: [{ $match: { 'employment_details.salary': { $lt: 40000 } } }] } } ]);","Create two lists from 'employee_records': one for employees with salaries over 100,000 and another for those below 40,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $facet: { high_salary: [ { $match: { 'employment_details.salary': { $gt: 100000 } } } ], low_salary: [ { $match: { 'employment_details.salary': { $lt: 40000 } } } ] } } ]);","From the 'employee_records' collection, group employees into two categories based on salary: those earning above 100,000 and those earning below 40,000."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ 'employment_details.salary': { $gt: 50000 }, 'employment_details.hire_date': { $lt: new Date('2020-01-01') } })","Find all employee records with a salary greater than 50000 and a hire date before January 1, 2020."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","{ salary: { $gt: 50000 }, 'employment_details.hire_date': { $lt: new Date('2020-01-01') } }","Retrieve employee records for those with salaries over 50000 and hired before January 1, 2020."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({}),Get all documents from the 'management_team' collection.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({}),Retrieve all records from the management_team collection.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.first_name"": ""John"" });",Get all entries from the 'management_team' collection where the first name is 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.first_name': 'John' });,Find all individuals in the management team whose first name is 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.last_name': 'Doe' });,Get all entries in the 'management_team' collection where the last name is 'Doe'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.last_name"": ""Doe"" })",Retrieve entries from the management_team collection where the last name is 'Doe'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.level"": 3 })",Retrieve all management team records with a position level of 3.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.level': 3 });,Get documents from the 'management_team' collection where the position level is 3.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.base_salary': { $gt: 75000 } });,"Retrieve all documents from the 'management_team' collection where the base salary exceeds 75,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""compensation.base_salary"": { $gt: 75000 } });","Retrieve records from the 'management_team' collection with a base salary greater than 75,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.direct_reports': { $lte: 5 } });,Retrieve all entries from the 'management_team' collection where direct reports are 5 or fewer.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.direct_reports"": { $lte: 5 } });",Find managers in the 'management_team' collection with 5 or fewer direct reports.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""budget_responsibility.annual_budget"": { $gte: 100000 } });","Retrieve all documents in the 'management_team' collection with an annual budget of at least 100,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.annual_budget': { $gte: 100000 } });,"Retrieve all management_team entries with an annual budget of at least 100,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""performance_metrics.year"": 2022 })",Get all records from the 'management_team' collection with performance metrics for the year 2022.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""performance_metrics.year"": 2022 })",Retrieve all documents in the 'management_team' collection with performance metrics for 2022.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.name': 'PMP' }),Retrieve all records from the 'management_team' collection with a certification named 'PMP'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.name': 'PMP' });,Retrieve entries from the management_team collection with certifications named 'PMP'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""strategic_initiatives.success_rate"": { $gte: 75 } })",Retrieve documents from the 'management_team' collection where the success rate of strategic initiatives is 75 or higher.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""strategic_initiatives.success_rate"": { $gte: 75 } });",Retrieve management team entries with a strategic initiative success rate of 75 or higher.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.kpi_achievement': { $lt: 50 } }),Get all records from the management_team collection with a KPI achievement below 50.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.kpi_achievement': { $lt: 50 } });,Find entries in the 'management_team' collection where KPI achievement is less than 50.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.title"": ""Director"" }).sort({ ""compensation.base_salary"": -1 })","Retrieve all records from the 'management_team' collection where the job title is 'Director', sorted by base salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.title"": ""Director"" }).sort({ ""compensation.base_salary"": -1 });","Retrieve 'Director' titles from the management team, sorted by base salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.expiry_date"": { $lt: new Date() } });",Retrieve all management team members whose certification expiry date is before today.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.expiry_date"": { $lt: new Date() } })",Retrieve records from the 'management_team' collection with certifications that have expired.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Fetch all documents from the 'management_team' collection where the email in personal_info ends with '@example.com'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Find entries in the management_team collection with email addresses ending in '@example.com'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.total_team_members"": { $gte: 10 } }).limit(5);",Retrieve the first five records from the 'management_team' collection where the total team size is at least 10.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.total_team_members"": { $gte: 10 } }).limit(5);",Retrieve five records from the 'management_team' collection with 10 or more team members.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""budget_responsibility.q1_spend"": { $lt: 20000 } });","Retrieve all management team entries with first quarter spending under 20,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""budget_responsibility.q1_spend"": { $lt: 20000 } });","Find documents in the 'management_team' collection with Q1 spending under 20,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.projects_completed': { $gte: 5 } });,Find all documents in the 'management_team' collection where at least five projects have been completed.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.projects_completed': { $gte: 5 } });,Find records in the 'management_team' collection with at least five completed projects.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.reports_to"": ""MGR00001"" });",Retrieve all documents from the 'management_team' collection where 'reports_to' in 'position_details' is 'MGR00001'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.reports_to': 'MGR00001' }),Get records from the 'management_team' collection where 'reports_to' in 'position_details' is 'MGR00001'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""strategic_initiatives.start_date"": { $gt: ISODate(""2022-01-01"") } });","Retrieve all documents from the 'management_team' collection where the start date of strategic initiatives is after January 1, 2022."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""strategic_initiatives.start_date"": { $gt: new Date(""2022-01-01"") } });","Find management team entries with strategic initiatives starting after January 1, 2022."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.date_acquired"": { $gt: new Date(""2020-01-01"") } });","Retrieve all documents from the 'management_team' collection where 'date_acquired' in 'certifications' is after January 1, 2020."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.date_acquired': { $gt: new Date('2020-01-01') } }),"Retrieve management team members who acquired certifications after January 1, 2020."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.direct_reports': { $gte: 5 }, 'budget_responsibility.annual_budget': { $gt: 100000 } }, { personal_info: 1, position_details: 1, compensation: 1 })","Retrieve entries from the 'management_team' collection that include manager personal information, position details, and compensation for managers with at least 5 direct reports and a budget responsibility greater than 100,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.direct_reports': { $gte: 5 }, 'budget_responsibility.annual_budget': { $gt: 100000 } }, { 'personal_info': 1, 'position_details.title': 1, 'compensation': 1 })","Find managers in the 'management_team' collection who have at least 5 direct reports and manage an annual budget over 100,000, including their personal information, job title, and compensation details."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.first_name': 'John' }),Get all documents from the 'management_team' collection where the first name is 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.first_name': 'John' }),Find members of the management team with the first name 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.title': 'Senior Manager' }),Retrieve all documents from the 'management_team' collection where the position title is 'Senior Manager'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.title': 'Senior Manager' }),Get entries from the 'management_team' collection where the title is 'Senior Manager'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.base_salary': { $gt: 75000 } });,"Get all documents from the 'management_team' collection where the base salary exceeds 75,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.base_salary': { $gt: 75000 } });,"Find management team members with a base salary over 75,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.year': 2022 }),Get all documents from the 'management_team' collection for the year 2022 in performance metrics.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.year': 2022 }),Find records in the 'management_team' collection with performance metrics for 2022.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.direct_reports': { $gte: 5 } });,Retrieve all documents from the 'management_team' collection with five or more direct reports.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.direct_reports': { $gte: 5 } }),Retrieve management team entries with at least five direct reports.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.name': 'PMP' }),Find all members of the management team with the PMP certification.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.name': 'PMP' });,Find entries in the 'management_team' collection with a certification named 'PMP'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.annual_budget': { $lt: 150000 } });,"Retrieve all management team documents with an annual budget less than 150,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.annual_budget': { $lt: 150000 } });,"Find management team records with an annual budget under 150,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'strategic_initiatives.success_rate': { $gt: 80 } });,Get all records from the 'management_team' collection where the strategic initiatives' success rate is over 80.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'strategic_initiatives.success_rate': { $gt: 80 } }),Find management team entries with strategic initiatives that have a success rate over 80.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.email': /@example\.com$/ });,Retrieve all documents from the 'management_team' collection where the email ends with '@example.com'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.email': { $regex: /@example\.com$/ } });,Retrieve records from the 'management_team' collection for individuals with email addresses ending in '@example.com'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.team_satisfaction_score': 5 });,Retrieve all entries from the 'management_team' collection where the team satisfaction score is 5.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'identifier.manager_id': 'MGR12345' }),Retrieve all documents for the manager with ID 'MGR12345' from the management_team collection.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'position_details.level': { $in: [3, 4] } });",Retrieve all members of the management team with a position level of 3 or 4.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'position_details.level': { $in: [3, 4] } });",Retrieve entries from the 'management_team' collection with position levels of 3 or 4.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.date_of_birth': { $lt: new Date('1990-01-01') } });,"Retrieve all documents from the 'management_team' collection where 'date_of_birth' is before January 1, 1990."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.date_of_birth': { $lt: ISODate('1990-01-01') } });,"Retrieve entries from the 'management_team' collection for individuals born before January 1, 1990."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.total_team_members': { $gt: 20 } });,Retrieve documents from the 'management_team' collection where the total number of team members is greater than 20.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.total_team_members': { $gt: 20 } });,Select entries from the 'management_team' collection where total team members exceed 20.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.direct_reports': { $gt: 0 }, 'compensation.bonus_percentage': { $gt: 10 } });",Retrieve all entries from the 'management_team' collection with more than zero direct reports and a bonus percentage greater than 10.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.direct_reports': { $gt: 0 }, 'compensation.bonus_percentage': { $gt: 10 } });",Find members of the management team with more than zero direct reports and a bonus percentage greater than 10.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.q1_spend': { $gt: 50000 } });,"Find all documents from the 'management_team' collection where Q1 spending exceeds 50,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.q1_spend': { $gt: 50000 } });,"Get records from the 'management_team' collection with first quarter spending over 50,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.expiry_date': { $gte: new Date() } }),Get all management team documents with certifications that have an expiry date on or after today.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.expiry_date': { $gte: new Date() } }),Find management team members with certification expiration dates on or after today.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'strategic_initiatives.start_date': { $gte: ISODate('2023-01-01') } });,"Retrieve all records from the 'management_team' collection where any strategic initiative starts on or after January 1, 2023."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'strategic_initiatives.start_date': { $gte: new Date('2023-01-01T00:00:00Z') } });,"Find entries in the 'management_team' collection with strategic initiatives that start on or after January 1, 2023."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.stock_options': { $gt: 1000 } });,"Retrieve all documents from the 'management_team' collection where stock options in the compensation field are greater than 1,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.stock_options': { $gt: 1000 } });,"Fetch entries from the 'management_team' collection with over 1,000 stock options in the compensation section."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.reports_to': 'MGR54321' });,Retrieve all entries from the 'management_team' collection where 'reports_to' is 'MGR54321'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.reports_to': 'MGR54321' });,Retrieve records from the 'management_team' collection where the 'position_details' indicates the individual reports to 'MGR54321'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'position_details.level': { $gte: 3 } }, { 'identifier': 1, 'personal_info': 1 })","Retrieve all documents from the 'management_team' collection where the 'level' is at least 3, showing only the 'identifier' and 'personal_info' fields."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({""position_details.level"": { $gte: 3 }}, {""identifier"": 1, ""personal_info"": 1})","Retrieve documents from the 'management_team' collection where 'level' is 3 or more, showing only the 'identifier' and 'personal_info' fields."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.first_name"": ""John"" });",Get all records from the 'management_team' collection where the first name is 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.first_name': 'John' }),Find records in the 'management_team' collection where the first name is 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.level"": { $gte: 3 } });",Get all documents from the 'management_team' collection where the position level is at least 3.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.level': { $gte: 3 } });,Find records in the 'management_team' collection with a position level of at least 3.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.direct_reports"": { $lt: 5 } });",Retrieve all records from the 'management_team' collection with fewer than five direct reports.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.direct_reports': { $lt: 5 } });,Retrieve entries from the 'management_team' collection with fewer than five direct reports.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""compensation.base_salary"": { $gt: 70000 } });","Get all records from the 'management_team' collection where the base salary exceeds 70,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.base_salary': { $gt: 70000 } });,"Find employees with a base salary greater than 70,000 in the management_team collection."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { ""performance_metrics.year"": 2022 } }, { $group: { _id: ""$identifier.manager_id"", avgKPI: { $avg: { $arrayElemAt: [""$performance_metrics.kpi_achievement"", 0] } } } } ]);","Retrieve documents from the 'management_team' collection for the year 2022, grouping by manager identifier and calculating the average KPI achievement from the first element of the performance metrics array."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$performance_metrics"" }, { $match: { ""performance_metrics.year"": 2022 } }, { $group: { _id: ""$identifier.manager_id"", avgKPI: { $avg: ""$performance_metrics.kpi_achievement"" } } } ])","From the 'management_team' collection, find managers' identifiers and calculate the average KPI achievement for the year 2022 based on performance metrics."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$position_details.title"", totalEmployees: { $sum: 1 } } }, { $sort: { totalEmployees: -1 } } ])","Count and group employee records by job title in the 'management_team' collection, then sort by the number of employees in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$position_details.title"", totalEmployees: { $sum: 1 } } }, { $sort: { totalEmployees: -1 } } ])","Count the number of employees in the 'management_team' collection, grouped by position titles, and sort the results from highest to lowest employee count."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'budget_responsibility.annual_budget': { $gte: 100000 } } }, { $project: { first_name: '$personal_info.first_name', annual_budget: '$budget_responsibility.annual_budget' } }])","Retrieve records from the 'management_team' collection where the annual budget is at least 100,000, showing the manager's first name and the annual budget."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""budget_responsibility.annual_budget"": { $gte: 100000 } }, { ""personal_info.first_name"": 1, ""budget_responsibility.annual_budget"": 1 })","Retrieve entries from the 'management_team' collection with an annual budget of at least 100,000, showing the manager's first name and the annual budget."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.success_rate"": { $gte: 75 } } }, { $group: { _id: ""$strategic_initiatives.initiative_id"", totalBudget: { $sum: ""$strategic_initiatives.budget_allocated"" } } } ])","Retrieve initiative IDs and total budgets from the 'management_team' collection for strategic initiatives with a success rate of 75% or higher, grouped by initiative ID."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.success_rate"": { $gte: 75 } } }, { $group: { _id: ""$strategic_initiatives.initiative_id"", totalBudget: { $sum: ""$strategic_initiatives.budget_allocated"" } } } ])","Retrieve the total budgets and initiative IDs from the management_team collection where initiatives have at least a 75% success rate, grouped by initiative ID."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$certifications"" }, { $match: { ""certifications.expiry_date"": { $gt: new Date() } } }, { $group: { _id: ""$certifications.name"", count: { $sum: 1 } } } ])","Unwind the certifications from the 'management_team' collection, filter for certifications that have an expiry date greater than today, and group by the name of each certification to count occurrences."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $unwind: ""$certifications"" }, { $match: { ""certifications.expiry_date"": { $gt: new Date() } } }, { $group: { _id: ""$certifications.name"", count: { $sum: 1 } } }])","In the 'management_team' collection, flatten the certifications array to include only those with a future expiry date, and group by certification names with a count for each."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.reports_to': 'MGR00001' });,Retrieve all records from the 'management_team' collection where the manager ID in reports_to is 'MGR00001'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.reports_to"": ""MGR00001"" });",Retrieve managers from the 'management_team' collection whose position details report to 'MGR00001'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { 'performance_metrics.year': 2023 } }, { $project: { name: { $concat: ['$personal_info.first_name', ' ', '$personal_info.last_name'] }, kpi: { $arrayElemAt: ['$performance_metrics.kpi_achievement', 0] } } } } ]);","Select all documents from the 'management_team' collection where the performance metrics year is 2023, projecting the full name as a combination of the first and last name, and the KPI achievement from the first entry in the performance metrics."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'performance_metrics.year': 2023 }}, { $project: { name: { $concat: ['$personal_info.first_name', ' ', '$personal_info.last_name'] }, kpi: { $arrayElemAt: ['$performance_metrics.kpi_achievement', 0] }}}}])","Retrieve entries from the 'management_team' collection for the year 2023, showing the full name and the KPI achievement from the first performance metric."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'team_size.total_team_members': { $gte: 10 } }).sort({ 'compensation.base_salary': -1 });,"Retrieve all documents from the 'management_team' collection with at least 10 total team members, sorted by base salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.total_team_members"": { $gte: 10 } }).sort({ ""compensation.base_salary"": -1 })","Retrieve records from the 'management_team' collection where the total team members are 10 or more, sorted by base salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$position_details.level"", avgSalary: { $avg: ""$compensation.base_salary"" } } }, { $sort: { avgSalary: -1 } } ])","Group documents in the 'management_team' collection by position level, calculating the average base salary for each level, and sort by average salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $group: { _id: ""$position_details.level"", avgSalary: { $avg: ""$compensation.base_salary"" } } }, { $sort: { avgSalary: -1 } }]);",Calculate the average base salary by position level in the 'management_team' collection and sort the results from highest to lowest.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$identifier.division_code"", totalBudget: { $sum: ""$budget_responsibility.annual_budget"" } } } ]);",Group the documents in the 'management_team' collection by division code and calculate the total annual budget for each division.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $group: { _id: ""$identifier.division_code"", totalBudget: { $sum: ""$budget_responsibility.annual_budget"" } } }])","Sum the annual budgets for each division in the 'management_team' collection, grouped by division code."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $project: { manager: { $concat: [""$personal_info.first_name"", "" "", ""$personal_info.last_name""] }, totalSpend: { $sum: [""$budget_responsibility.q1_spend"", ""$budget_responsibility.q2_spend"", ""$budget_responsibility.q3_spend"", ""$budget_responsibility.q4_spend""] } } } ]);",Select the full name as 'manager' and the total spending across all quarters from the 'budget_responsibility' collection.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $project: { manager: { $concat: [""$personal_info.first_name"", "" "", ""$personal_info.last_name""] }, totalSpend: { $sum: [""$budget_responsibility.q1_spend"", ""$budget_responsibility.q2_spend"", ""$budget_responsibility.q3_spend"", ""$budget_responsibility.q4_spend""] } } } }])",Retrieve each manager's full name and the total quarterly expenditures from the budget responsibility.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'certifications.name': 'PMP' });,Retrieve all records from the 'management_team' collection where the certification is 'PMP'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.name"": ""PMP"" })",Retrieve management team members with PMP certifications.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({""identifier.manager_id"": { $regex: /^MGR[0-9]{5}$/ }})","Retrieve all records from the 'management_team' collection for managers with 'manager_id' starting with 'MGR' followed by five digits, including personal information and various details."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'identifier.manager_id': /^MGR[0-9]{5}$/ }, { 'personal_info': 1, 'position_details': 1, 'compensation': 1, 'performance_metrics': 1, 'team_size': 1, 'budget_responsibility': 1, 'certifications': 1, 'strategic_initiatives': 1 })","Retrieve all documents from the 'management_team' collection where 'manager_id' starts with 'MGR' followed by five digits, and return their personal information, position details, compensation, performance metrics, team size, budget responsibilities, certifications, and strategic initiatives."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.first_name': 'John' }),Get all documents from the 'management_team' collection with the first name 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.first_name': 'John' }),Find records in the 'management_team' collection where the first name is 'John'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.level': { $gte: 3 } });,Get all documents from the 'management_team' collection where the position level is 3 or higher.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.level"": { $gte: 3 } });",Find management team members with a position level of 3 or higher.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""compensation.base_salary"": { $gt: 80000 } }, { ""personal_info.first_name"": 1, ""personal_info.last_name"": 1, ""compensation.base_salary"": 1 })","Retrieve first name, last name, and base salary from the 'management_team' collection for documents where base salary exceeds 80,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""compensation.base_salary"": { $gt: 80000 } }, { ""personal_info.first_name"": 1, ""personal_info.last_name"": 1, ""compensation.base_salary"": 1 })","Retrieve the first name, last name, and base salary of individuals with a base salary over 80,000 from the 'management_team' collection."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""performance_metrics.year"": 2022 })",Retrieve all documents from the 'management_team' collection where 'performance_metrics' includes entries for 2022.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.year': 2022 }),Retrieve records from the 'management_team' collection with performance metrics for the year 2022.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$position_details.title"", averageSalary: { $avg: ""$compensation.base_salary"" } } }, { $sort: { averageSalary: -1 } } ])","Group documents by job title in 'position_details' and calculate the average base salary, sorted in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $group: { _id: ""$position_details.title"", averageSalary: { $avg: ""$compensation.base_salary"" } } }, { $sort: { averageSalary: -1 } }])","Aggregate average base salary by title from the management_team collection, sorting by average salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.name"": { $regex: /PMP/i } });","Get all documents from the 'management_team' collection where the certification name contains 'PMP', case insensitive."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.name"": { $regex: /PMP/i } });","Retrieve records from the management_team collection that have a certification named 'PMP', case-insensitively."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.total_team_members"": { $lt: 5 } });",Get all documents from the 'management_team' collection where total team members are less than 5.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.total_team_members"": { $lt: 5 } });",Find management team entries with fewer than 5 total team members.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.success_rate"": { $gte: 75 } } }, { $group: { _id: ""$strategic_initiatives.name"", totalBudget: { $sum: ""$strategic_initiatives.budget_allocated"" } } } ])",Get the names and total budget allocated for strategic initiatives in the 'management_team' collection where the success rate is 75% or higher.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.success_rate"": { $gte: 75 } } }, { $group: { _id: ""$strategic_initiatives.name"", totalBudget: { $sum: ""$strategic_initiatives.budget_allocated"" } } } ])","Get names of strategic initiatives from the 'management_team' collection with a success rate of at least 75%, including the total allocated budget for each initiative."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'budget_responsibility.annual_budget': { $exists: true, $ne: null } });",Retrieve all documents from the 'management_team' collection where the 'annual_budget' field in 'budget_responsibility' is defined and not null.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.annual_budget': { $ne: null } });,Find records in the 'management_team' collection where the annual budget is specified.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'compensation.bonus_percentage': { $gte: 10 } } }, { $group: { _id: '$position_details.level', totalCount: { $sum: 1 } } }])","Retrieve documents from the 'management_team' collection where the bonus percentage is 10% or higher, grouped by position level, with a count of documents for each level."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { 'compensation.bonus_percentage': { $gte: 10 } } }, { $group: { _id: '$position_details.level', totalCount: { $sum: 1 } } } ])","Get counts of management team records with a bonus percentage of at least 10%, grouped by position level."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { ""team_size.direct_reports"": { $gt: 10 } } }, { $sort: { ""personal_info.last_name"": 1 } }, { $project: { ""_id"": 0, ""first_name"": ""$personal_info.first_name"", ""last_name"": ""$personal_info.last_name"", ""direct_reports"": ""$team_size.direct_reports"" } } ]);","Retrieve all entries from the 'management_team' collection with more than 10 direct reports, sorted by last name in ascending order, displaying first name, last name, and direct report count."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { 'team_size.direct_reports': { $gt: 10 } } }, { $sort: { 'personal_info.last_name': 1 } }, { $project: { 'first_name': '$personal_info.first_name', 'last_name': '$personal_info.last_name', 'direct_reports': '$team_size.direct_reports' } } ])","Get management team members with more than 10 direct reports, sorted by last name, showing first name, last name, and number of direct reports."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$identifier.division_code"", totalManagers: { $sum: 1 } } } ])",Group documents in the 'management_team' collection by division code and count the number of managers in each division.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $group: { _id: ""$identifier.division_code"", totalManagers: { $sum: 1 } } }])",Group records in the 'management_team' collection by division code and count the number of managers in each division.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.kpi_achievement': { $gt: 90 } }),Retrieve all documents from the 'management_team' collection where the KPI achievement in performance metrics exceeds 90.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'performance_metrics.kpi_achievement': { $gt: 90 } });,Find entries in the 'management_team' collection with KPI achievement scores above 90.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $unwind: ""$performance_metrics"" }, { $group: { _id: ""$personal_info.last_name"", averageSatisfaction: { $avg: ""$performance_metrics.team_satisfaction_score"" } } }, { $match: { averageSatisfaction: { $gt: 4 } } }])","Unwind the performance metrics in the 'management_team' collection, group by last name, and calculate the average team satisfaction score, returning only groups with a score greater than 4."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$performance_metrics"" }, { $group: { _id: ""$personal_info.last_name"", averageSatisfaction: { $avg: ""$performance_metrics.team_satisfaction_score"" } } }, { $match: { averageSatisfaction: { $gt: 4 } } } ])","Aggregate performance metrics in the 'management_team' collection by last names, computing the average satisfaction score, and include only names with an average score greater than 4."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'position_details.reports_to': 'MGR00001' });,Get all members of the management team who report to 'MGR00001'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.reports_to"": ""MGR00001"" })",Get records from 'management_team' where the reports_to manager is 'MGR00001'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""budget_responsibility.q1_spend"": { $gte: 50000 } }, { ""personal_info.email"": 1, ""budget_responsibility.q1_spend"": 1 });","Retrieve the email addresses and first quarter spending amounts from the 'management_team' collection where the spending is at least 50,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'budget_responsibility.q1_spend': { $gte: 50000 } } }, { $project: { 'personal_info.email': 1, 'budget_responsibility.q1_spend': 1 } }])","Find records in the 'management_team' collection with first quarter spending of at least 50,000, showing email addresses and spending details."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: '$strategic_initiatives' }, { $match: { 'strategic_initiatives.start_date': { $lte: new Date('2023-01-01') } } }, { $project: { name: '$strategic_initiatives.name', success_rate: '$strategic_initiatives.success_rate' } } ])","Retrieve the names and success rates of strategic initiatives that started on or before January 1, 2023, from the management_team collection."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.expiry_date"": { $lt: new Date() } });",Retrieve all documents from the 'management_team' collection with certifications that have expired.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.expiry_date"": { $lt: new Date() } });",Retrieve management team records with certifications that have expired.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'identifier.manager_id': { $regex: '^MGR[0-9]{5}$' } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'position_details.title': 1, 'compensation.base_salary': 1 })","Retrieve all documents from the 'management_team' collection where the manager identifier starts with 'MGR' followed by five digits, including the fields 'first_name', 'last_name', 'title', and 'base_salary'."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'identifier.manager_id': { $regex: '^MGR[0-9]{5}$' } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1, 'position_details.title': 1, 'compensation.base_salary': 1 })","Find entries in the 'management_team' collection where the manager ID starts with 'MGR' followed by five digits, and return the 'first_name', 'last_name', 'title', and 'base_salary' fields."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'personal_info.email': { $regex: /.*@company\.com$/ } });,Find all records in the 'management_team' collection where the email ends with '@company.com'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.email"": { $regex: /@company\.com$/ } });",Find all entries in the 'management_team' collection with an email ending in '@company.com'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""compensation.base_salary"": { $gte: 100000 } }).sort({ ""compensation.base_salary"": -1 });","Retrieve all documents from the 'management_team' collection where the base salary is at least 100,000, sorted by base salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'compensation.base_salary': { $gte: 100000 } }).sort({ 'compensation.base_salary': -1 }),"Retrieve records from the 'management_team' where the base salary is at least 100,000, sorted by salary in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'position_details.level': 5 } }, { $group: { _id: null, avgBonus: { $avg: '$compensation.bonus_percentage' } } }])",Retrieve all documents from the 'management_team' collection where the position level is 5 and calculate the average bonus percentage.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'position_details.level': 5 } }, { $group: { _id: null, avgBonus: { $avg: '$compensation.bonus_percentage' } }}])",Find the average bonus percentage for entries in the management_team collection where the position level is 5.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$performance_metrics"" }, { $group: { _id: ""$performance_metrics.year"", avgKPI: { $avg: ""$performance_metrics.kpi_achievement"" } } } ])",Unwind performance metrics from the 'management_team' collection and calculate the average KPI achievement for each year.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$performance_metrics"" }, { $group: { _id: ""$performance_metrics.year"", averageKPI: { $avg: ""$performance_metrics.kpi_achievement"" } } } ])",Unwind the performance metrics array in the 'management_team' collection and calculate the average KPI achievement for each year.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""team_size.direct_reports"": { $gt: 10 } }, { ""personal_info.first_name"": 1, ""personal_info.last_name"": 1 })",Get the first and last names of individuals with more than 10 direct reports in the 'management_team' collection.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.direct_reports': { $gt: 10 } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1 })",Retrieve first and last names of managers with more than 10 direct reports from the 'management_team' collection.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.management_team.find({ 'budget_responsibility.annual_budget': { $gt: 500000 } }).sort({ 'personal_info.last_name': 1 });,"Select all records from the 'management_team' collection where the annual budget exceeds 500,000, sorted by last name in ascending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""budget_responsibility.annual_budget"": { $gt: 500000 } }).sort({ ""personal_info.last_name"": 1 })","Retrieve documents from the 'management_team' collection with an annual budget exceeding 500,000, sorted by last name in ascending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $project: { manager_id: ""$identifier.manager_id"", total_spend: { $add: [ ""$budget_responsibility.q1_spend"", ""$budget_responsibility.q2_spend"", ""$budget_responsibility.q3_spend"", ""$budget_responsibility.q4_spend"" ] } } }, { $match: { total_spend: { $gt: 200000 } } } ])","Retrieve each manager's identifier and total quarterly spending from the 'management_team' collection, including only those managers with spending over 200,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $project: { manager_id: ""$identifier.manager_id"", total_spend: { $add: [ ""$budget_responsibility.q1_spend"", ""$budget_responsibility.q2_spend"", ""$budget_responsibility.q3_spend"", ""$budget_responsibility.q4_spend"" ] } } }, { $match: { total_spend: { $gt: 200000 } } } ])","Retrieve the manager's ID and total quarterly spend from the 'management_team' collection, showing only those managers with a total spend greater than 200,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.success_rate"": { $gte: 75 } } }, { $group: { _id: ""$identifier.division_code"", total_count: { $sum: 1 } } } ])","Unwind the strategic initiatives array in the 'management_team' collection, filter for initiatives with a success rate of 75% or higher, and group the results by division code to count the total initiatives per division."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.success_rate"": { $gte: 75 } } }, { $group: { _id: ""$identifier.division_code"", total_initiatives: { $sum: 1 } } } ])","From the 'management_team' collection, unwind the strategic initiatives array, filter for initiatives with a success rate of 75% or greater, and group the results by division code, counting the total initiatives per division."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $unwind: ""$certifications"" }, { $match: { ""certifications.expiry_date"": { $gte: new Date() } } }, { $count: ""active_certifications"" }])",Count the total number of active certifications in the 'management_team' collection with expiration dates on or after today.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $unwind: '$certifications' }, { $match: { 'certifications.expiry_date': { $gte: new Date() } } }, { $count: 'active_certifications' }])",Count the valid certifications in the 'management_team' where expiry dates are today or later.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$position_details.title"", averageSalary: { $avg: ""$compensation.base_salary"" } } }, { $sort: { averageSalary: -1 } } ])","Group documents in the 'management_team' collection by 'title' in 'position_details' and calculate the average 'base_salary' from 'compensation', sorting results in descending order by average salary."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$position_details.title"", averageSalary: { $avg: ""$compensation.base_salary"" } } }, { $sort: { averageSalary: -1 } } ]);","Aggregate the 'management_team' entries by 'position_details.title' to find the average 'compensation.base_salary', sorting the results to show higher averages first."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { $gt: { $size: { $filter: { input: ""$performance_metrics"", as: ""metric"", cond: { $gt: [""$$metric.projects_completed"", 5] } } } }, 0 } } }, { $project: { full_name: { $concat: [""$personal_info.first_name"", "" "", ""$personal_info.last_name""] }, level: ""$position_details.level"" } } ])","Select documents from the 'management_team' collection where the number of completed projects in performance metrics is greater than five, projecting the full name and position level."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { ""performance_metrics.projects_completed"": { $gt: 5 } } }, { $project: { name: { $concat: [ ""$personal_info.first_name"", "" "", ""$personal_info.last_name"" ] }, level: ""$position_details.level"" } } ]);","Retrieve entries from the 'management_team' collection with more than five completed projects, including the full name and position level."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { 'team_size.total_team_members': { $lt: 5 } } }, { $lookup: { from: 'management_team', localField: 'position_details.reports_to', foreignField: 'identifier.manager_id', as: 'supervisor' } } ])","Select documents from the 'management_team' collection where total team members are fewer than five, including supervisor information based on the reports_to field matching the manager_id."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $match: { 'team_size.total_team_members': { $lt: 5 } } }, { $lookup: { from: 'management_team', localField: 'position_details.reports_to', foreignField: 'identifier.manager_id', as: 'supervisor' } } ])",Retrieve management team entries with fewer than five total team members and include their supervisors based on the reports_to field.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'performance_metrics': { $elemMatch: { 'year': 2023, 'kpi_achievement': { $gt: 90 } } } });",Retrieve documents from the 'management_team' collection where there is at least one performance metric from 2023 with a KPI achievement score exceeding 90.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""performance_metrics.year"": 2023, ""performance_metrics.kpi_achievement"": { $gt: 90 } })",Find records in the 'management_team' collection with performance metrics for 2023 where KPI achievement is greater than 90.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $project: { title: ""$position_details.title"", totalTeamMembers: ""$team_size.total_team_members"", baseSalary: ""$compensation.base_salary"", totalSpend: { $add: [ ""$budget_responsibility.q1_spend"", ""$budget_responsibility.q2_spend"", ""$budget_responsibility.q3_spend"", ""$budget_responsibility.q4_spend"" ] } } }, { $sort: { totalSpend: -1 } } ]);","Select the title from position details, the total number of team members, the base salary, and total spending by summing quarterly spending for each document in the 'management_team' collection, then sort results by total spending in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $project: { title: ""$position_details.title"", totalTeamMembers: ""$team_size.total_team_members"", baseSalary: ""$compensation.base_salary"", totalExpenditure: { $add: [ ""$budget_responsibility.q1_spend"", ""$budget_responsibility.q2_spend"", ""$budget_responsibility.q3_spend"", ""$budget_responsibility.q4_spend"" ] } } }, { $sort: { totalExpenditure: -1 } } ]);","From the 'management_team' collection, select the position title, total team members, base salary, and the total expenditure from Q1 to Q4, sorted by total expenditure in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $addFields: { totalCompensation: { $add: [ ""$compensation.base_salary"", { $multiply: [ ""$compensation.base_salary"", { $divide: [ ""$compensation.bonus_percentage"", 100 ] } ] } ] } } }, { $match: { totalCompensation: { $gt: 120000 } } } ]);","Calculate total compensation for the management team by adding the base salary and the bonus (base salary multiplied by bonus percentage divided by 100), then filter for totals exceeding 120,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $addFields: { totalCompensation: { $add: ['$compensation.base_salary', { $multiply: ['$compensation.base_salary', { $divide: ['$compensation.bonus_percentage', 100] }] }] } } }, { $match: { totalCompensation: { $gt: 120000 } } }])","From the 'management_team' collection, calculate total compensation as the sum of base salary and bonus (base salary multiplied by bonus percentage divided by 100), and return entries where total compensation exceeds 120,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.budget_allocated"": { $gt: 50000 } } }, { $group: { _id: ""$strategic_initiatives.name"", totalBudget: { $sum: ""$strategic_initiatives.budget_allocated"" } } } ]);","Unwind the 'strategic_initiatives' array, filter for initiatives with a budget over 50,000, and group by initiative names to calculate the total budget for each."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $unwind: ""$strategic_initiatives"" }, { $match: { ""strategic_initiatives.budget_allocated"": { $gt: 50000 } } }, { $group: { _id: ""$strategic_initiatives.name"", totalBudget: { $sum: ""$strategic_initiatives.budget_allocated"" } } } ])","List the total budget for initiatives in the 'management_team' collection where the budget allocation exceeds 50,000."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $lookup: { from: 'management_team', localField: 'identifier.manager_id', foreignField: 'position_details.reports_to', as: 'directReports' } }, { $project: { manager: '$personal_info.first_name', directReportsCount: { $size: '$directReports' } } } ])",Find all managers in the 'management_team' collection along with the count of their direct reports by matching the 'manager_id' fields.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $lookup: { from: 'management_team', localField: 'identifier.manager_id', foreignField: 'position_details.reports_to', as: 'directReports' } }, { $project: { manager: '$personal_info.first_name', directReportsCount: { $size: '$directReports' } } }])",Join the 'management_team' collection to associate managers with their direct reports using 'manager_id' and return each manager's first name along with the count of their direct reports.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'position_details.level': { $gt: 3 }, 'position_details.start_date': { $gte: new Date('2020-01-01') } }, { 'personal_info.first_name': 1, 'personal_info.last_name': 1 })","Retrieve all managers from the 'management_team' collection with a level greater than 3 and a start date on or after January 1, 2020, showing their first and last names."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({""position_details.level"": { $gt: 3 }, ""position_details.start_date"": { $gte: ISODate('2020-01-01') }}, {""personal_info.first_name"": 1, ""personal_info.last_name"": 1})","Find managers in the 'management_team' collection with a level greater than 3 and start date on or after January 1, 2020, returning only their first and last names."
