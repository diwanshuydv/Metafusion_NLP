database_id,schema,mongo_query,natural_language_query
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.severity': { $in: ['High', 'Critical'] } } }, { $group: { _id: '$identifier.camera_id', eventCount: { $sum: 1 } } }])",Retrieve the camera IDs associated with High or Critical severity events and count the total events per camera.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ 'identifier.camera_id': '<SPECIFIED_CAMERA_ID>', 'identifier.intersection_id': '<SPECIFIED_INTERSECTION_ID>' }, { 'response.event.type': 1, 'response.event.severity': 1, 'response.event.vehicles.number_plate': 1, 'response.event.vehicles.speed': 1, 'response.event.vehicles.timestamp': 1, 'response.event.vehicles.location': 1 })","Retrieve traffic incident data from a specific camera at a designated intersection, including event types, severities, and vehicle details like number plates, speeds, timestamps, and locations."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""VitalSigns"" }).sort({ ""identifier.hospital_id"": -1 })",Retrieve records with the 'VitalSigns' alert type and sort them by hospital identifier in descending order.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: null, totalViolations: { $sum: 1 }, uniqueVehicles: { $addToSet: ""$response.event.vehicles.number_plate"" } } }, { $project: { totalViolations: 1, uniqueVehicleCount: { $size: ""$uniqueVehicles"" } } } ])",Count total traffic violations and unique vehicle number plates from the recorded traffic events.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""identifier.parking_lot_id"": ""A1"" });",Retrieve all parking events for the parking lot 'A1'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.total_team_members': { $gte: 5 } }, { 'identifier': 1, 'personal_info': 1, 'position_details': 1, 'compensation': 1, 'performance_metrics': 1, 'team_size': 1, 'budget_responsibility': 1, 'certifications': 1, 'strategic_initiatives': 1 }).sort({ 'position_details.title': 1 }).limit(20)","Get details of managers with at least five total team members, including their identifiers, personal info, position details, compensation, performance metrics, team size, budget responsibility, certifications, and strategic initiatives, sorted by title in ascending order and limited to twenty results."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $unwind: ""$performance_metrics"" }, { $group: { _id: ""$performance_metrics.year"", avgSatisfaction: { $avg: ""$performance_metrics.team_satisfaction_score"" } } }])","Calculate the average team satisfaction scores from performance metrics, grouped by year."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.passengers"": { $size: 0 } });",Find events where there are no passengers present.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.alert_type"": ""FallDetected"" });",Retrieve patient events with the alert type 'FallDetected'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""identifier.route_id"": { $in: [""1"", ""5"", ""10""] } });","Retrieve all transit events with route identifiers matching ""1"", ""5"", or ""10""."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([{ $match: { 'response.event.severity': 'Critical' } }, { $project: { camera_id: '$identifier.camera_id', event_type: '$response.event.type' } }])",Retrieve the camera IDs and types of critical traffic events from the traffic events database.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""identifier.employee_id"": ""EMP123456"" })","Get the record for employee with ID 'EMP123456', including all details."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.timestamp"": { $gte: new Date(""2023-06-01""), $lt: new Date(""2023-07-01"") } }).sort({ ""response.event.transaction.timestamp"": 1 });","Retrieve all toll event records between June 1, 2023, and June 30, 2023, ordered by transaction timestamps."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.space_occupied': { $exists: true } }).limit(10);,Retrieve up to ten entries that include vehicles with documented space occupied.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ 'team_size.total_team_members': { '$gt': 10 } }, { 'identifier': 1, 'team_size.direct_reports': 1 }).sort({ 'team_size.direct_reports': -1 })","Get the manager identifiers and direct report counts for managers with more than ten total team members, sorted by direct reports in descending order."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'performance_metrics.kpi_achievement': { $gt: 75 } } }, { $sort: { 'personal_info.first_name': 1 } }])",Find team members with KPI achievements over 75 and sort them by their first names.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.subclass': 'SUV' });,Retrieve all records that classify objects as 'SUV' in their event blobs.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'performance.rating': { $gte: 4 } });,Get details of employees with a performance rating of 4 or higher.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $project: { yearOfBirth: { $year: ""$personal_info.date_of_birth"" }, salary: ""$employment_details.salary"" } }, { $group: { _id: ""$yearOfBirth"", totalSalary: { $sum: ""$salary"" } } } ])",Calculate the total salaries of employees grouped by their year of birth.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.biometrics.movement_patterns"": { $exists: true, $ne: [] } }).count();",Count the entries with non-empty movement patterns in the biometrics section of patient event responses.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'identifier.highway_id': 'H1' } }, { $group: { _id: '$response.event.transaction.vehicle_class', count: { $sum: 1 } } }]);",Count the toll events for vehicles on highway 'H1' by vehicle class.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.status"": ""OnTime"" })",Get all transit events with a status of 'OnTime'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([ { $match: { ""response.event.transaction.amount"": { $gt: 50, $lt: 200 } } }, { $group: { _id: ""$identifier.highway_id"", total_count: { $sum: 1 }, total_amount: { $sum: ""$response.event.transaction.amount"" } } } ]);","Get the count and total amount of transactions for each highway where the transaction amount is between 51 and 199, grouped by highway identifier."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.first_name"": ""John"" });",Find all records of individuals named John.
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
",db.patient_events.find().skip(5).limit(10);,"Retrieve ten records, skipping the first five entries."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $group: { _id: ""$position_details.title"", totalBudget: { $sum: ""$budget_responsibility.annual_budget"" } } }, { $sort: { totalBudget: -1 } }])","Group the records by job title, calculate the total annual budget for each title, and sort the results in descending order by budget."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([{ $group: { _id: ""$identifier.aisle_number"", uniqueAgeGroups: { $addToSet: ""$response.event.customer_profile.age_group"" } } }, { $project: { aisle: ""$_id"", ageGroupCount: { $size: ""$uniqueAgeGroups"" } } }])","Group records by aisle number, collecting unique customer age groups per section, and return the aisle with the count of distinct age groups."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Browse' } }, { $unwind: '$response.event.customer_profile' }, { $group: { _id: '$identifier.store_id', totalDwellTime: { $sum: '$response.event.customer_profile.dwell_time' } } }, { $sort: { totalDwellTime: -1 } } ])","Get the total browsing time of customers at each store, grouped by store location and sorted in descending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({}, {'response.event.severity': 1, 'response.event.type': 1, 'response.event.vehicles.number_plate': 1, 'response.event.vehicles.speed': 1, 'response.event.vehicles.timestamp': 1, 'response.event.vehicles.location': 1}).sort({'response.event.severity': 1})","Retrieve traffic incident details at specific junctions monitored by certain cameras, including the severity, type, vehicle registration numbers, speeds, timestamps, and locations, sorted by severity."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $match: { 'response.event.type': 'Purchase' } }, { $unwind: '$response.event.customer_profile' }, { $group: { _id: '$identifier.aisle_number', totalPurchases: { $sum: 1 }, avgDwellTime: { $avg: '$response.event.customer_profile.dwell_time' } } }, { $sort: { totalPurchases: -1 } } ])","Get the total purchases and average dwell time for customers in each aisle, grouped by aisle number and sorted by total purchases in descending order."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([ { $group: { _id: ""$response.event.transaction.timestamp"", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 5 } ])","Count and sort the number of transactions by unique timestamp, returning the top five results."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.count({ 'response.event.blobs.label': 'XYZ456' }),Count the events with a blob labeled 'XYZ456'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.camera_id"": ""camera123"" })",Get all events from the camera with ID 'camera123'.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $unwind: ""$response.event.passengers"" }, { $group: { _id: ""$response.event.passengers.destination_stop"", totalTickets: { $sum: 1 } } } ])",Count the total number of tickets for each destination stop based on passenger data from transit events.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.health_insurance"": true }).sort({ ""personal_info.last_name"": 1 })","Retrieve records of employees who have health insurance, sorted by last name in ascending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'response.event.blobs.score': { $gt: 0.8 } }).sort({ 'response.event.c_timestamp': -1 });,"Find entries where the event blob score is greater than 0.8, sorted by event timestamp in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""response.event.customer_profile"": { $elemMatch: { dwell_time: { $gt: 60 } } } });",Select store events where at least one customer profile has a dwell time greater than 60 minutes.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.aggregate([{ $match: { 'response.event.status': 'Cancelled' } }]),Retrieve cancelled transit events.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}",db.events.find({ 'identifier.task_id': { $exists: true } }).sort({ 'response.event.c_timestamp': -1 });,Select events that have a task ID and arrange them in reverse chronological order based on the event timestamp.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.job_title': 'Software Engineer' }).sort({ 'employment_details.hire_date': -1 });,"Retrieve entries for employees with the job title 'Software Engineer', sorted by hire date from newest to oldest."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.comments"": { $exists: true, $ne: """" } });",Find all employees with comments in their performance evaluations that are not blank.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""benefits.retirement_plan"": false })",List employees not enrolled in a retirement plan.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""PT001"", ""response.event.type"": ""Browse"" })","Retrieve records of browsing events from checkout station ""PT001."""
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { 'employment_details.hire_date': { $lt: ISODate('2020-01-01') } } }, { $sort: { 'employment_details.hire_date': -1 } }, { $limit: 5 } ]);","Select the five most recently hired employees who were hired before January 1, 2020."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.find({ 'response.event.vehicles': { $elemMatch: { 'number_plate': 'AB12CD1234' } } });,List all traffic events that include a vehicle with the number plate 'AB12CD1234'.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({""response.event.duration_mins"": { ""$gt"": 30 }, ""response.event.entry_time"": { ""$gte"": new Date(new Date().setMonth(new Date().getMonth() - 1)) }}, {""identifier"": 1, ""response.event.vehicle"": 1})",List identifiers and vehicle information for parking events in the last month that lasted over 30 minutes.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""certifications.name"": ""PMP"" })",Find individuals who have a certification named 'PMP.'
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.transit_events.find({ 'response.event.location.estimated_arrival': { $gt: new Date() } });,Retrieve all transit events with an estimated arrival time later than now.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles"": { $size: 1 } })",Select entries with exactly one vehicle in traffic events.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.vehicles.location"": { $geoWithin: { $box: [[-73.935242, 40.730610], [-73.985242, 40.750610]] } } });",Retrieve all traffic events where vehicle locations are within a specified rectangular area defined by two geographic coordinates.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([ { $match: { ""response.event.transaction.timestamp"": { $gte: new Date(""2023-01-01""), $lt: new Date(""2024-01-01"") } } }, { $group: { _id: ""$identifier.lane_number"", totalAmount: { $sum: ""$response.event.transaction.amount"" }, transactionCount: { $sum: 1 } } } ])","Summarize the total transaction amounts and count of transactions for each lane from January 1, 2023, to December 31, 2023."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gte: NumberDecimal('5.00') } });",Retrieve all entries where the transaction amount is at least $5.00.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([{ $match: { 'budget_responsibility.annual_budget': { $gt: 1000000 } } }, { $project: { _id: 0, email: '$personal_info.email', annual_budget: '$budget_responsibility.annual_budget' } }]);","Retrieve the email and annual budget for members with a budget over one million, excluding unique identifiers."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""personal_info.first_name"": ""John"" });",Get records of employees named 'John'.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.aggregate([ { $unwind: ""$response.event.blobs"" }, { $group: { _id: ""$response.event.blobs.label"", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 10 } ])","Count and aggregate the top ten labels of blobs from event responses, sorted by occurrence in descending order."
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""response.event.blobs.attribs.Upper Clothing"": ""Shirt"", ""response.event.blobs.attribs.Lower Clothing"": ""Pants"" })",Find events with individuals wearing a 'Shirt' on top and 'Pants' on the bottom in their attributes.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$response.event.vehicles.number_plate"", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } } ])",Find the number plates of vehicles recorded in traffic events more than three times by counting each unique plate across the events.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $match: { ""employment_details.hire_date"": { $gte: new Date(""2020-01-01"") } } }, { $group: { _id: ""$identifier.department_id"", avgSalary: { $avg: ""$employment_details.salary"" } } } ]);","Calculate the average salary per department for employees hired on or after January 1, 2020."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.pos_terminal"": ""terminal2"", ""response.event.type"": ""Purchase"" })",Retrieve records of purchases made at terminal two.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.rating"": 5 });",List employees who received a rating of five in their performance reviews.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $addFields: { total_parking_time: { $subtract: ['$response.event.exit_time', '$response.event.entry_time'] } } }, { $project: { total_parking_time: 1 } }])",Calculate the total parking duration for each event by subtracting the entry time from the exit time.
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ ""identifier.task_id"": ""task1"", ""response.event.type"": ""vehicle"" }).limit(5);","Retrieve up to five vehicle-related events for task ""task1."""
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $match: { $expr: { $gt: [{ $size: '$performance' }, 5] } } }, { $addFields: { totalReviews: { $size: '$performance' } } }])","Count the number of performance evaluations for employees who have more than five reviews, including a field for the total count."
patient_event,"{
  ""collections"": [
    {
      ""name"": ""patient_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""hospital_id"": {""description"": ""Filter by medical facility""},
              ""ward_number"": {""description"": ""Filter by department""},
              ""bed_id"": {""description"": ""Filter by patient bed""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""priority"": {""description"": ""Emergency, Urgent, Routine""},
                  ""alert_type"": {""description"": ""FallDetected, VitalSigns, Medication""},
                  ""biometrics"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""heart_rate"": {},
                        ""blood_pressure"": {},
                        ""oxygen_saturation"": {},
                        ""movement_patterns"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.patient_events.find({ ""response.event.priority"": ""Urgent"" })",Select patient events marked as 'Urgent'.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""personal_info.email"": { $regex: /@example\.com$/ } });",Retrieve all entries for individuals with an email ending in '@example.com'.
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ 'identifier.highway_id': <defined_highway>, 'identifier.lane_number': <specific_lane>, 'response.event.transaction.vehicle_class': <vehicle_class>, 'response.event.transaction.axle_count': <axle_count> }, { 'response.event.transaction.amount': 1, 'response.event.transaction.timestamp': 1 })","Retrieve transaction amounts and timestamps for a specific highway and lane, filtering by vehicle class and axle count."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: ""$performance"" }, { $group: { _id: ""$identifier.employee_id"", avgRating: { $avg: ""$performance.rating"" } } }, { $match: { avgRating: { $gte: 4 } } } ])",Calculate the average performance rating for each employee and return those with an average rating of 4 or higher.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.find({ ""response.event.type"": ""ArrivalDeparture"" }).sort({ ""response.event.location.estimated_arrival"": 1 });","Select transit event records with the type 'ArrivalDeparture', ordered by estimated arrival times from earliest to latest."
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.aggregate([ { $group: { _id: ""$identifier.division_code"", averageBonus: { $avg: ""$compensation.bonus_percentage"" } } }, { $sort: { averageBonus: -1 } } ])",Calculate the average bonus percentage for each division and sort the results in descending order.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.employee_records.find({ 'employment_details.manager_id': 'EMP000001' });,Get the records of employees whose manager ID is 'EMP000001'.
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$identifier.store_id"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" } } }, { $sort: { totalDwellTime: -1 } } ]);","Calculate the total dwell time of customers by retail location, grouping by store identifier and sorting results in descending order by total dwell time."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""employment_details.job_title"": ""Software Engineer"" }).limit(5);","List five employees with the job title 'Software Engineer', including their details."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.aggregate([{ $match: { 'identifier.highway_id': 'H1' } }, { $group: { _id: '$response.event.transaction.vehicle_class', totalAmount: { $sum: '$response.event.transaction.amount' } } }])",Calculate the total toll revenues by vehicle class for the highway 'H1' from all transactions.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $group: { _id: ""$identifier.route_id"", maxPassengers: { $max: { $size: ""$response.event.passengers"" } } } } }])",Group transit events by route ID and find the maximum number of passengers for each route.
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { 'response.event.status': 'OnTime' } }, { $project: { route_id: '$identifier.route_id', passengers: '$response.event.passengers' } } ])",List identifiers for routes and their passenger details for transit events with status 'OnTime.'
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.type': 'Speeding' } }, { $group: { _id: '$identifier.camera_id', maxSpeed: { $max: '$response.event.vehicles.speed' } } }, { $sort: { maxSpeed: -1 } }, { $limit: 5 } ])","Retrieve the top five camera IDs and the maximum speeds of vehicles involved in speeding incidents, sorted by maximum speed in descending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.find({ ""identifier.aisle_number"": 4, ""response.event.type"": ""Purchase"" }).sort({ ""identifier.store_id"": 1 }).limit(5);","Select up to five records where the aisle number is 4 and the event type is 'Purchase', ordered by store ID in ascending order."
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.find({ ""response.event.type"": ""Speeding"", ""identifier.camera_id"": ""C456"" });",Retrieve all traffic events classified as 'Speeding' from the camera identified as 'C456.'
meta_event,"{
  ""collections"": [
    {
      ""name"": ""events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""camgroup_id"": {
                ""description"": ""Use this to filter events by group"",
              },
              ""task_id"": {
                ""description"": ""Use this to filter events by tasks"",
              }
              ""camera_id"": {
                ""description"": ""Use this to filter events by camera"",
              }
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""bsonType"": ""object"",
                ""properties"": {
                  ""severity"": {
                    ""description"": ""Can be Low, Medium, Critical""
                  },
                  ""type"": {
                    ""description"": ""Type of the event. Use this to filter events of person and vehicle""
                  },
                  ""blobs"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""bsonType"": ""object"",
                      ""properties"": {
                        ""url"": {
                        },
                        ""attribs"": {
                          ""description"": ""Use this for attributes like Gender (Only Male, Female), Upper Clothing, Lower Clothing, Age (Ranges like 20-30, 30-40 and so on) for people and Make (like maruti suzuki, toyota, tata), Color, Type (like Hatchback, sedan, xuv), label (like car, truck, van, three wheeler, motorcycle) for Vehicles""
                        },
                        ""label"": {
                          ""description"": ""Use this label for number plate""
                        },
                        ""score"": {
                          ""description"": ""Use this for confidence for the blob""
                        },
                        ""match_id"": {
                          ""description"": ""Use this match_id for name of the person""
                        },
                        ""severity"": {
                        },
                        ""subclass"": {
                          ""description"": ""Use this for subclass for the blob""
                        }
                      }
                    },
                  },
                  ""c_timestamp"": {
                    ""description"": ""Use this for timestamp""
                  },
                  ""label"": {
                    ""description"": ""Use this label for number plate""
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}","db.events.find({ 'response.event.severity': 'Critical', 'response.event.type': { $in: ['person', 'vehicle'] }, 'identifier.camera_id': <camera_id>, 'identifier.task_id': <task_id> }).sort({ 'response.event.c_timestamp': 1 })","Retrieve all Critical severity events involving persons or vehicles, associated with a specific camera and task group, sorted by event timestamp in ascending order."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $group: { _id: ""$identifier.pos_terminal"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ]);","Group records by checkout station and count the total events for each, sorting the results in descending order by event count."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.toll_events.findOne({ 'response.event.transaction.vehicle_class': 1 }),Retrieve a record where the vehicle class in the transaction is 1.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $unwind: ""$response.event.vehicles"" }, { $group: { _id: ""$identifier.intersection_id"", avgSpeed: { $avg: ""$response.event.vehicles.speed"" }, criticalIncidents: { $sum: { $cond: [{ $eq: [""$response.event.severity"", ""Critical""] }, 1, 0] } } } }, { $sort: { avgSpeed: -1 } } ])","Calculate the average speed of vehicles in incidents at each traffic junction and count the critical severity incidents, grouped by junction identifier and sorted by average speed in descending order."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.weight_kg': { $gt: 1500 } }).sort({ 'response.event.exit_time': -1 }).limit(5);,"Select the five latest parking events with vehicles weighing over 1500 kilograms, sorted by exit time in descending order."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([{ $match: { 'response.event.type': 'Maintenance' } }, { $lookup: { from: 'transit_events', localField: 'identifier.vehicle_id', foreignField: 'identifier.vehicle_id', as: 'maintenanceRecords' } }])","Retrieve maintenance events for vehicles, including related past maintenance records based on their vehicle identifiers."
toll_event,"{
  ""collections"": [{
    ""name"": ""toll_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""highway_id"": {""description"": ""Filter by road network""},
            ""lane_number"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""transaction"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""amount"": {""bsonType"": ""decimal""},
                    ""timestamp"": {""bsonType"": ""date""},
                    ""vehicle_class"": {""bsonType"": ""int""},
                    ""axle_count"": {""bsonType"": ""int""}
                  }
                },
                ""identification"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""rfid_tag"": {""bsonType"": ""long""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.toll_events.find({ ""response.event.transaction.amount"": { $gt: NumberDecimal(""2.00"") } });",Retrieve toll event records where the transaction amount exceeds $2.00.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.aggregate([{ $group: { _id: ""$identifier.parking_lot_id"", total_events: { $sum: 1 } } }])",Count the distinct events for each parking lot using the parking lot identifier.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $unwind: '$performance' }, { $match: { 'performance.rating': { $gt: 4 } } }, { $group: { _id: '$identifier.department_id', topPerformers: { $push: '$personal_info.first_name' } } } ])","List the first names of employees with performance ratings above 4, grouped by department, to identify top performers in each department."
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([{ $unwind: ""$projects"" }, { $group: { _id: ""$projects.project_name"", totalEmployees: { $sum: 1 } } }, { $sort: { totalEmployees: -1 } }])","Retrieve the names of all projects and the total number of employees for each project, grouped by project name and sorted in descending order by employee count."
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.parking_events.find({ ""response.event.duration_mins"": { $gte: 30, $lte: 120 } });",Retrieve parking events with a duration between 30 and 120 minutes.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.traffic_events.countDocuments({ 'identifier.camera_id': { $exists: true } });,Count the traffic events with associated surveillance unit identifiers.
parking_event,"{
  ""collections"": [{
    ""name"": ""parking_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""parking_lot_id"": {""description"": ""Filter by facility""},
            ""zone"": {""bsonType"": ""int""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""entry_time"": {""bsonType"": ""date""},
                ""exit_time"": {""bsonType"": ""date""},
                ""duration_mins"": {""bsonType"": ""double""},
                ""vehicle"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""number_plate"": {""bsonType"": ""string""},
                    ""space_occupied"": {""bsonType"": ""int""},
                    ""weight_kg"": {""bsonType"": ""double""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
",db.parking_events.find({ 'response.event.vehicle.number_plate': 'ABC123' });,Get records for vehicles with number plate 'ABC123' from parking events.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.aggregate([ { $group: { _id: ""$employment_details.manager_id"", employeeCount: { $sum: 1 } } }, { $lookup: { from: ""employee_records"", localField: ""_id"", foreignField: ""identifier.employee_id"", as: ""manager_info"" } } ])","Group employee records by manager ID and count the employees for each manager, retrieving their details from the employee records."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$response.event.customer_profile.age_group"", totalDwellTime: { $sum: ""$response.event.customer_profile.dwell_time"" } } } ])",Calculate the total dwell time grouped by age group from customer profiles in store events.
employee_recode,"{
  ""collections"": [{
    ""name"": ""employee_records"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""employee_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$"",
              ""description"": ""Unique employee identifier""
            },
            ""department_id"": {
              ""bsonType"": ""string"",
              ""description"": ""Department identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""employment_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""job_title"": {""bsonType"": ""string""},
            ""hire_date"": {""bsonType"": ""date""},
            ""salary"": {""bsonType"": ""decimal""},
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^EMP[0-9]{6}$""
            }
          }
        },
        ""performance"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""review_date"": {""bsonType"": ""date""},
              ""rating"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
              ""comments"": {""bsonType"": ""string""}
            }
          }
        },
        ""skills"": {
          ""bsonType"": ""array"",
          ""items"": {""bsonType"": ""string""}
        },
        ""projects"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""project_id"": {""bsonType"": ""string""},
              ""project_name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""role"": {""bsonType"": ""string""}
            }
          }
        },
        ""benefits"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""health_insurance"": {""bsonType"": ""bool""},
            ""retirement_plan"": {""bsonType"": ""bool""},
            ""vacation_days"": {""bsonType"": ""int""}
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.employee_records.find({ ""performance.comments"": { $regex: /excellent/i } });","Retrieve all employee records with performance comments that include the word 'excellent', case insensitive."
store_event,"{
  ""collections"": [
    {
      ""name"": ""store_events"",
      ""document"": {
        ""properties"": {
          ""identifier"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""store_id"": {""description"": ""Filter by retail location""},
              ""aisle_number"": {""description"": ""Filter by store section""},
              ""pos_terminal"": {""description"": ""Filter by checkout station""}
            }
          },
          ""response"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""event"": {
                ""properties"": {
                  ""type"": {""description"": ""Purchase, Return, Browse""},
                  ""customer_profile"": {
                    ""bsonType"": ""array"",
                    ""items"": {
                      ""properties"": {
                        ""age_group"": {},
                        ""basket_items"": {},
                        ""dwell_time"": {},
                        ""staff_interaction"": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  ""version"": 1
}
","db.store_events.aggregate([ { $unwind: ""$response.event.customer_profile"" }, { $group: { _id: ""$response.event.customer_profile.age_group"", avgBasketSize: { $avg: { $size: ""$response.event.customer_profile.basket_items"" } } } } ]);","Calculate the average size of shopping baskets by customer age group, based on their profiles from events."
transit_event,"{
  ""collections"": [{
    ""name"": ""transit_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""route_id"": {""description"": ""Filter by bus or train route""},
            ""vehicle_id"": {""description"": ""Filter by specific vehicle""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""status"": {""description"": ""OnTime, Delayed, Cancelled""},
                ""type"": {""description"": ""ArrivalDeparture, Maintenance, Incident""},
                ""passengers"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""ticket_id"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{3}[0-9]{6}$""
                      },
                      ""boarding_time"": {""bsonType"": ""date""},
                      ""destination_stop"": {""bsonType"": ""string""},
                      ""fare_amount"": {""bsonType"": ""decimal""}
                    }
                  }
                },
                ""location"": {
                  ""bsonType"": ""object"",
                  ""properties"": {
                    ""coordinates"": {
                      ""bsonType"": ""array"",
                      ""items"": {""bsonType"": ""double""}
                    },
                    ""next_stop"": {""bsonType"": ""string""},
                    ""estimated_arrival"": {""bsonType"": ""date""}
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.transit_events.aggregate([ { $match: { ""response.event.type"": ""Maintenance"" } }, { $group: { _id: ""$identifier.route_id"", totalEvents: { $sum: 1 } } }, { $sort: { totalEvents: -1 } } ])",Count the number of maintenance events for each route and sort the results in descending order.
traffic_event,"{
  ""collections"": [{
    ""name"": ""traffic_events"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""intersection_id"": {""description"": ""Filter by traffic junction""},
            ""camera_id"": {""description"": ""Filter by surveillance unit""}
          }
        },
        ""response"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""event"": {
              ""properties"": {
                ""severity"": {""description"": ""Critical, High, Low""},
                ""type"": {""description"": ""Speeding, RedLightViolation, IllegalParking""},
                ""vehicles"": {
                  ""bsonType"": ""array"",
                  ""items"": {
                    ""properties"": {
                      ""number_plate"": {
                        ""bsonType"": ""string"",
                        ""pattern"": ""^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$""
                      },
                      ""speed"": {""bsonType"": ""double""},
                      ""timestamp"": {""bsonType"": ""date""},
                      ""location"": {
                        ""bsonType"": ""array"",
                        ""items"": {""bsonType"": ""double""}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.traffic_events.aggregate([ { $match: { 'response.event.severity': 'Low' } }, { $group: { _id: '$identifier.intersection_id', eventTypes: { $addToSet: '$response.event.type' } } }, { $project: { eventTypes: 1, numberOfEventTypes: { $size: '$eventTypes' } } } ])",List unique event types and the count of different types for each intersection with low severity events.
management_team,"{
  ""collections"": [{
    ""name"": ""management_team"",
    ""document"": {
      ""properties"": {
        ""identifier"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""manager_id"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$"",
              ""description"": ""Unique manager identifier""
            },
            ""division_code"": {
              ""bsonType"": ""string"",
              ""description"": ""Division identifier""
            }
          }
        },
        ""personal_info"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""first_name"": {""bsonType"": ""string""},
            ""last_name"": {""bsonType"": ""string""},
            ""date_of_birth"": {""bsonType"": ""date""},
            ""email"": {""bsonType"": ""string""},
            ""phone_number"": {""bsonType"": ""string""}
          }
        },
        ""position_details"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""title"": {""bsonType"": ""string""},
            ""level"": {""bsonType"": ""int"", ""minimum"": 1, ""maximum"": 5},
            ""start_date"": {""bsonType"": ""date""},
            ""reports_to"": {
              ""bsonType"": ""string"",
              ""pattern"": ""^MGR[0-9]{5}$""
            }
          }
        },
        ""compensation"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""base_salary"": {""bsonType"": ""decimal""},
            ""bonus_percentage"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
            ""stock_options"": {""bsonType"": ""int""}
          }
        },
        ""performance_metrics"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""year"": {""bsonType"": ""int""},
              ""kpi_achievement"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100},
              ""team_satisfaction_score"": {""bsonType"": ""double"", ""minimum"": 1, ""maximum"": 5},
              ""projects_completed"": {""bsonType"": ""int""}
            }
          }
        },
        ""team_size"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""direct_reports"": {""bsonType"": ""int""},
            ""total_team_members"": {""bsonType"": ""int""}
          }
        },
        ""budget_responsibility"": {
          ""bsonType"": ""object"",
          ""properties"": {
            ""annual_budget"": {""bsonType"": ""decimal""},
            ""q1_spend"": {""bsonType"": ""decimal""},
            ""q2_spend"": {""bsonType"": ""decimal""},
            ""q3_spend"": {""bsonType"": ""decimal""},
            ""q4_spend"": {""bsonType"": ""decimal""}
          }
        },
        ""certifications"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""name"": {""bsonType"": ""string""},
              ""date_acquired"": {""bsonType"": ""date""},
              ""expiry_date"": {""bsonType"": ""date""}
            }
          }
        },
        ""strategic_initiatives"": {
          ""bsonType"": ""array"",
          ""items"": {
            ""bsonType"": ""object"",
            ""properties"": {
              ""initiative_id"": {""bsonType"": ""string""},
              ""name"": {""bsonType"": ""string""},
              ""start_date"": {""bsonType"": ""date""},
              ""end_date"": {""bsonType"": ""date""},
              ""budget_allocated"": {""bsonType"": ""decimal""},
              ""success_rate"": {""bsonType"": ""double"", ""minimum"": 0, ""maximum"": 100}
            }
          }
        }
      }
    }
  }],
  ""version"": 2
}
","db.management_team.find({ ""position_details.start_date"": { $lt: new Date(""2020-01-01"") } });","Get records of individuals who started before January 1, 2020."
